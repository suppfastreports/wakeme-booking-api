import express from 'express';
import cors from 'cors';
import fetch from 'node-fetch';

const app = express();
const PORT = 3000;

// Middleware
app.use(cors());
app.use(express.json());
app.use(express.static('.')); // –î–ª—è –æ—Ç–¥–∞—á–∏ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤

// ALTEGIO API Configuration
const ALTEGIO_BASE_URL = 'https://api.alteg.io/api/v1';
const ALTEGIO_TOKEN = '4de4nx2z7nbush7jcad8';
const ALTEGIO_PARTNER_ID = '1296';

// Telegram Bot Configuration
const TELEGRAM_BOT_TOKEN = '8259669153:AAGiGoebw2FOiX9HjTpVd8Ar3lnwhikAYwo';
const TELEGRAM_CHAT_ID = '-1002681477081';

console.log('üöÄ –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –ø—Ä–æ–∫—Å–∏-—Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω');
console.log('üìä ALTEGIO API: –ù–∞—Å—Ç—Ä–æ–µ–Ω');
console.log('üì± Telegram Bot: –ù–∞—Å—Ç—Ä–æ–µ–Ω');
console.log(`üåê –°–µ—Ä–≤–µ—Ä: http://localhost:${PORT}`);

// ===== ALTEGIO API ENDPOINTS =====

// Proxy endpoint for getting slots on a specific date
app.get('/api/slots', async (req, res) => {
    try {
        const { companyId, staffId, serviceId, date } = req.query;

        console.log('üì• [ALTEGIO] –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å —Å–ª–æ—Ç–æ–≤:', { companyId, staffId, serviceId, date });

        const apiUrl = `${ALTEGIO_BASE_URL}/book_times/${companyId}/${staffId}/${date}?service_ids[]=${serviceId}`;

        console.log('üîó [ALTEGIO] URL API:', apiUrl);

        const response = await fetch(apiUrl, {
            method: 'GET',
            headers: {
                'Authorization': `Bearer ${ALTEGIO_TOKEN}`,
                'X-Partner-ID': ALTEGIO_PARTNER_ID,
                'Accept': 'application/vnd.api.v2+json',
                'Content-Type': 'application/json'
            }
        });

        console.log(`üì• [ALTEGIO] –û—Ç–≤–µ—Ç: ${response.status} ${response.statusText}`);

        if (!response.ok) {
            const errorText = await response.text();
            console.error('‚ùå [ALTEGIO] –û—à–∏–±–∫–∞ API:', errorText);
            return res.status(response.status).json({ error: errorText });
        }

        const data = await response.json();
        console.log('üìÑ [ALTEGIO] –î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ');

        res.json(data);
    } catch (error) {
        console.error('‚ùå [ALTEGIO] –û—à–∏–±–∫–∞ –ø—Ä–æ–∫—Å–∏:', error);
        res.status(500).json({ error: error.message });
    }
});

// Proxy endpoint for getting nearest available slots
app.get('/api/nearest-slots', async (req, res) => {
    try {
        const { companyId, staffId, serviceId } = req.query;

        console.log('üì• [ALTEGIO] –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –±–ª–∏–∂–∞–π—à–∏—Ö —Å–ª–æ—Ç–æ–≤:', { companyId, staffId, serviceId });

        const apiUrl = `${ALTEGIO_BASE_URL}/book_staff_seances/${companyId}/${staffId}/?service_ids[]=${serviceId}`;

        console.log('üîó [ALTEGIO] URL –¥–ª—è –±–ª–∏–∂–∞–π—à–∏—Ö —Å–ª–æ—Ç–æ–≤:', apiUrl);

        const response = await fetch(apiUrl, {
            method: 'GET',
            headers: {
                'Authorization': `Bearer ${ALTEGIO_TOKEN}`,
                'X-Partner-ID': ALTEGIO_PARTNER_ID,
                'Accept': 'application/vnd.api.v2+json',
                'Content-Type': 'application/json'
            }
        });

        console.log(`üì• [ALTEGIO] –û—Ç–≤–µ—Ç: ${response.status} ${response.statusText}`);

        if (!response.ok) {
            const errorText = await response.text();
            console.error('‚ùå [ALTEGIO] –û—à–∏–±–∫–∞ API –¥–ª—è –±–ª–∏–∂–∞–π—à–∏—Ö —Å–ª–æ—Ç–æ–≤:', errorText);
            return res.status(response.status).json({ error: errorText });
        }

        const data = await response.json();
        console.log('üìÑ [ALTEGIO] –ë–ª–∏–∂–∞–π—à–∏–µ —Å–ª–æ—Ç—ã –ø–æ–ª—É—á–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ');

        res.json(data);
    } catch (error) {
        console.error('‚ùå [ALTEGIO] –û—à–∏–±–∫–∞ –ø—Ä–æ–∫—Å–∏ –¥–ª—è –±–ª–∏–∂–∞–π—à–∏—Ö —Å–ª–æ—Ç–æ–≤:', error);
        res.status(500).json({ error: error.message });
    }
});

// ===== TELEGRAM API ENDPOINTS =====

// Proxy endpoint for sending Telegram messages
app.post('/api/send-telegram', async (req, res) => {
    try {
        const { message } = req.body;

        console.log('üì§ [TELEGRAM] –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram');

        const telegramUrl = `https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`;
        
        const response = await fetch(telegramUrl, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                chat_id: TELEGRAM_CHAT_ID,
                text: message,
                parse_mode: 'Markdown'
            })
        });

        console.log(`üì• [TELEGRAM] –û—Ç–≤–µ—Ç –æ—Ç Telegram: ${response.status} ${response.statusText}`);

        if (!response.ok) {
            const errorText = await response.text();
            console.error('‚ùå [TELEGRAM] –û—à–∏–±–∫–∞ –æ—Ç Telegram API:', errorText);
            return res.status(response.status).json({ error: errorText });
        }

        const data = await response.json();
        console.log('‚úÖ [TELEGRAM] –°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ');

        res.json({ success: true, data });
    } catch (error) {
        console.error('‚ùå [TELEGRAM] –û—à–∏–±–∫–∞ –ø—Ä–æ–∫—Å–∏:', error);
        res.status(500).json({ error: error.message });
    }
});

// ===== HEALTH CHECK =====

// Health check endpoint
app.get('/api/health', (req, res) => {
    res.json({ 
        status: 'OK', 
        services: {
            altegio: 'Connected',
            telegram: 'Connected'
        },
        timestamp: new Date().toISOString()
    });
});

// ===== SERVER START =====

app.listen(PORT, () => {
    console.log(`üöÄ –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –ø—Ä–æ–∫—Å–∏-—Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
    console.log(`üì± –§–æ—Ä–º–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:${PORT}/booking-form.html`);
    console.log(`üîç Health check: http://localhost:${PORT}/api/health`);
    console.log('');
    console.log('üìä –î–æ—Å—Ç—É–ø–Ω—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã:');
    console.log('  ‚Ä¢ GET  /api/slots - –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ª–æ—Ç–æ–≤ ALTEGIO');
    console.log('  ‚Ä¢ GET  /api/nearest-slots - –±–ª–∏–∂–∞–π—à–∏–µ —Å–ª–æ—Ç—ã ALTEGIO');
    console.log('  ‚Ä¢ POST /api/send-telegram - –æ—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram');
    console.log('  ‚Ä¢ GET  /api/health - –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è');
});
