Altegio REST API (2.0.0)
This is an official document describing the interaction with the Altegio online booking service. API allows third-party developers to perform most operations with the Altegio platform. When designing methods, we tried to adhere to the REST architecture.

All interaction with protocol are transpire by TLS encryption (from 1.2 version)
Limits are 200 requests per minute or 5 requests per second per IP address
URL API: https://api.alteg.io/api/v1
If you encounter difficulties when working with the API, please carefully review the documentation, including the required headers, parameters, and the structure of the request body in the JSON example.

If you're having trouble resolving the issue on your own, feel free to contact us at api@alteg.io. Please include the request URL, headers, request body, and the response you received in your message.

Integration cases with Altegio
Data exchange with automation and accounting software
Integration of Online Booking into third-party websites and mobile applications. Allows embedding of Online Booking forms into external platforms, such as company catalogs, branded apps, and other partner services.
General description of data exchange with Altegio
The Altegio integration API includes two groups of methods:

Methods that require both user authorization and partner authorization
Methods that require partner authorization only (no user authorization)
API Request Authorization
Accessing both the first and second groups of methods requires partner authorization. I.e. passing the partner's unique hash key. API requests are authorized in accordance with RFC 6749 "Resource Owner Password Credentials Grant". When making API requests the HTTP authorization header must include the access key in the following format:

Authorization: Bearer <partner token>
To obtain this key, you need to register in the marketplace – it will be located in the 'Developer account' "Account settings" under "Account details" tab.

To get the user API key, use the auth method, or, if you are creating an integration application, use the key located in an application's settings under the "API Access" section. The key itself must also be sent in the request header (after the partner key, separated by a comma):

Authorization: Bearer <partner token>, User <user token>
Whether user authorization is required to work with specific entities is indicated in the data format descriptions and sample queries.

Date and time
All dates in the API are represented as strings in ISO 8601 format.

"2025-09-21T23:00:00.000+03:00"
Service durations and other time-related values are provided in seconds. For example, a 15-minute service should be represented as:

{ "length": 900 }
Core Concepts of the Altegio API
The API allows you to work with the main entities of the platform:

Company Represents a business entity within the system.

User Users can manage one or more companies, depending on their assigned access rights. Not all users have access to all settings. To modify specific settings, a user API key with the appropriate privileges is required.

Service category All services offered by a company are organized into service categories.

Service Appointments are typically made for specific services provided by employees within a company. Each service includes parameters such as a price range and duration.

Employee Appointments are usually booked with a specific employee or resource (e.g., yoga room or massage table).

Work Schedule Each employee has a work schedule - time intervals during which the employee works with clients.

Time Slots Available time intervals during which an appointment can be scheduled with an employee.

Appointment The time interval at which a particular employee provides services to a specific client. The employee is busy during an appointment.

Client The person who schedules or receives services from the company.

Altegio API Data Model
There are four main structures used for working with data in the Altegio API:

Entity An individual item with unique properties and parameters, such as those listed above. Entities can be retrieved, modified, or deleted.

Entity Collection A group of entities, such as a list of companies or a list of services offered by companies. Entities can be added to or removed from a collection.

Communication entity Defines relationships between entities—for example, the link between an employee and a service, indicating that the employee provides that specific service. Communication entities can also have their own properties, such as an individual service price set for a particular employee.

Collection of Communication Entities A set of relationships between entities, such as a list of services offered by an employee along with their associated properties. You can add or manage relationships within the collection.

Users
User management, in particular working with roles and permissions.

Getting a list of user roles

get
/company/{company_id}/users/roles
Returns a list of user roles along with permissions for each role.

Authorizations:
BearerPartnerUser
path Parameters
company_id
required
number
Example: 123
ID of a company.

query Parameters
include	
Array of strings
Items Value: "user_permissions"
Requested set of an included models.

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
Should be equal to application/vnd.api.v2+json

Content-Type
required
string
Example: application/json
Should be equal to application/json

Responses
200 OK
Response Schema: application/json
success	
boolean (Successful response status)
Response status.

data	
Array of objects (Model object "User role")
meta	
object (Empty meta object)
Additional response data.

401 Unauthorized
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

403 Forbidden
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

404 Not Found
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Empty meta object)
Additional response data.

Response samples
200401403404
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": [
{}
],
"meta": { }
}
Getting a list of user roles in the context of a company user

get
/company/{company_id}/users/{user_id}/roles
Returns a list of user roles along with permissions for each role. Allows to get the editable status for each permission of a company user (is_editable field). This status depends on the current user's permissions.

Authorizations:
BearerPartnerUser
path Parameters
company_id
required
number
Example: 123
ID of a company.

user_id
required
number
Example: 123
ID of a user.

query Parameters
include	
Array of strings
Items Value: "user_permissions"
Requested set of an included models.

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
Should be equal to application/vnd.api.v2+json

Content-Type
required
string
Example: application/json
Should be equal to application/json

Responses
200 OK
Response Schema: application/json
success	
boolean (Successful response status)
Response status.

data	
Array of objects (Model object "User role")
meta	
object (Empty meta object)
Additional response data.

401 Unauthorized
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

403 Forbidden
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

404 Not Found
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Empty meta object)
Additional response data.

Response samples
200401403404
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": [
{}
],
"meta": { }
}
Getting permission values and user role

get
/company/{company_id}/users/{user_id}/permissions
Return user role and list of permissions values.

Authorizations:
BearerPartnerUser
path Parameters
company_id
required
number
Example: 123
ID of a company.

user_id
required
number
Example: 123
User id.

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
Should be equal to application/vnd.api.v2+json

Content-Type
required
string
Example: application/json
Should be equal to application/json

Responses
200 OK
Response Schema: application/json
success	
boolean (Successful response status)
Response status.

data	
object (Model object "Permissions and user role")
Data on the permissions and user role

meta	
object (Empty meta object)
Additional response data.

401 Unauthorized
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

403 Forbidden
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

404 Not Found
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Empty meta object)
Additional response data.

Response samples
200401403404
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"is_editable": true,
"staff_id": 12345,
"user_role": "owner",
"user_permissions": []
},
"meta": { }
}
Updating permission values and user role

put
/company/{company_id}/users/{user_id}/permissions
Updates the role and permissions of the user, as well as the employee who is attached to this user.

Authorizations:
BearerPartnerUser
path Parameters
company_id
required
number
Example: 123
ID of a company.

user_id
required
number
Example: 123
User id.

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
Should be equal to application/vnd.api.v2+json

Content-Type
required
string
Example: application/json
Should be equal to application/json

Request Body schema: application/json
user_role	
string
Enum: "worker" "administrator" "accountant" "manager" "owner"
Name of role

user_permissions	
Array of items
List of user permissions values

staff_id	
number
Employee ID attached to user

Responses
200 OK
Response Schema: application/json
success	
boolean (Successful response status)
Response status.

data	
object (Model object "Permissions and user role")
Data on the permissions and user role

meta	
object (Empty meta object)
Additional response data.

401 Unauthorized
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

403 Forbidden
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

404 Not Found
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Empty meta object)
Additional response data.

422 Unprocessable Entity
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Request validation error message)
Additional response data.

Request samples
Payload
Content type
application/json

Copy
Expand allCollapse all
{
"user_role": "worker",
"user_permissions": [
{}
],
"staff_id": 0
}
Response samples
200401403404422
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"is_editable": true,
"staff_id": 12345,
"user_role": "owner",
"user_permissions": []
},
"meta": { }
}
Copy a User to Companies

post
/company/{company_id}/users/{user_id}/copy_to_companies
Copies an active user and their permissions to multiple companies at once. If the user does not yet exist in a company, they will be added as an active user. If the user has already been invited to the company, only their permissions will be updated — however, they will still need to accept the invitation.

Authorizations:
BearerPartnerUser
path Parameters
company_id
required
number
Example: 123
ID of a company.

user_id
required
number
Example: 123
User id.

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
Should be equal to application/vnd.api.v2+json

Content-Type
required
string
Example: application/json
Should be equal to application/json

Request Body schema: application/json
user_company_links
required
Array of objects non-empty unique
List of companies to copy the user to

Responses
200 OK
Response Schema: application/json
success	
boolean (Successful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Empty meta object)
Additional response data.

401 Unauthorized
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

403 Forbidden
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

404 Not Found
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Empty meta object)
Additional response data.

422 Unprocessable Entity
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Request validation error message)
Additional response data.

Request samples
Payload
Content type
application/json

Copy
Expand allCollapse all
{
"user_company_links": [
{}
]
}
Response samples
200401403404422
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": null,
"meta": { }
}
Removing a User from Companies

post
/company/{company_id}/users/{user_id}/remove_from_companies
Removes an active user from multiple companies at once.

Authorizations:
BearerPartnerUser
path Parameters
company_id
required
number
Example: 123
ID of a company.

user_id
required
number
Example: 123
User id.

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
Should be equal to application/vnd.api.v2+json

Content-Type
required
string
Example: application/json
Should be equal to application/json

Request Body schema: application/json
user_company_links
required
Array of objects non-empty unique
List of companies to remove the user from

Responses
200 OK
Response Schema: application/json
success	
boolean (Successful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Empty meta object)
Additional response data.

401 Unauthorized
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

403 Forbidden
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

404 Not Found
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Empty meta object)
Additional response data.

422 Unprocessable Entity
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Request validation error message)
Additional response data.

Request samples
Payload
Content type
application/json

Copy
Expand allCollapse all
{
"user_company_links": [
{}
]
}
Response samples
200401403404422
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": null,
"meta": { }
}
Schedules of Appointments and Events
This feature allows you to easily manage schedules for appointments (currently not supported) and events.

You can create multiple schedule series for different days of the week and customize each one to suit your needs. For each series, you can define specific staff, time slots, labels, resource instances, and more.

Search a Schedule by Event

get
/company/{company_id}/schedules/search/{entity_type}/{entity_id}
Search for a schedule based on the appointment or event linked to it, or based on the associated appointment or event.

Authorizations:
BearerPartnerUser
path Parameters
company_id
required
number
Example: 123
ID of a company.

entity_type
required
string
Enum: "record" "activity"
Example: activity
Type of an entity schedule is searched by:
record - individual appointment, currently not supported;
activity - group event.

entity_id
required
number
Example: 123
ID of an entity schedule is searched by.

query Parameters
include	
Array of strings
Items Enum: "days" "days.events_master" "days.events_labels" "days.events_resource_instances"
Requested set of an included models.

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
Should be equal to application/vnd.api.v2+json

Content-Type
required
string
Example: application/json
Should be equal to application/json

Responses
200 OK
Response Schema: application/json
success	
boolean (Successful response status)
Response status.

data	
object (Object of model "Schedule")
Data for an existing schedule in a company.

meta	
object (Empty meta object)
Additional response data.

401 Unauthorized
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

403 Forbidden
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

404 Not Found
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Empty meta object)
Additional response data.

Response samples
200401403404
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"id": 123,
"created_at": "2022-01-01 12:12:12",
"updated_at": "2022-01-01 12:12:12",
"deleted_at": null,
"original_entity_type": "activity",
"original_entity_id": 123,
"date_start": "2022-01-01",
"date_end": "2022-02-01",
"days": []
},
"meta": { }
}
Create a Schedule

post
/company/{company_id}/schedules
Creates a schedule for appointments or events based on the original associated entity.

Authorizations:
BearerPartnerUser
path Parameters
company_id
required
number
Example: 123
ID of a company.

query Parameters
include	
Array of strings
Items Value: "days"
Requested set of an included models.

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
Should be equal to application/vnd.api.v2+json

Content-Type
required
string
Example: application/json
Should be equal to application/json

Request Body schema: application/json
original_entity_type
required
string
Enum: "record" "activity"
Type of entity the schedule will be based on:
record - individual appointment, currently not supported;
activity - group event.

original_entity_id
required
number
ID of entity the schedule will be based on.

date_end
required
string <date>
Date of the schedule end.

days
required
Array of objects [ 1 .. 7 ] items
Each object represents schedule series settings for a specific day of the week. A minimum of 1 and a maximum of 7 schedule series can be defined (one for each day of the week).

Responses
201 Created
Response Schema: application/json
success	
boolean (Successful response status)
Response status.

data	
object (Object of model "Schedule")
Data for an existing schedule in a company.

meta	
object (Empty meta object)
Additional response data.

401 Unauthorized
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

403 Forbidden
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

404 Not Found
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Empty meta object)
Additional response data.

422 Unprocessable Entity
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Request validation error message)
Additional response data.

Request samples
Payload
Content type
application/json

Copy
Expand allCollapse all
{
"original_entity_type": "activity",
"original_entity_id": 123,
"date_end": "2022-02-01",
"days": [
{}
]
}
Response samples
201401403404422
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"id": 123,
"created_at": "2022-01-01 12:12:12",
"updated_at": "2022-01-01 12:12:12",
"deleted_at": null,
"original_entity_type": "activity",
"original_entity_id": 123,
"date_start": "2022-01-01",
"date_end": "2022-02-01",
"days": []
},
"meta": { }
}
Update a Schedule

patch
/company/{company_id}/schedules/{schedule_id}
Updates the settings of a schedule containing appointments or events.

Authorizations:
BearerPartnerUser
path Parameters
company_id
required
number
Example: 123
ID of a company.

schedule_id
required
number
Example: 123
ID of a schedule.

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
Should be equal to application/vnd.api.v2+json

Content-Type
required
string
Example: application/json
Should be equal to application/json

Request Body schema: application/json
date_end	
string <date>
Date of the schedule end.

Responses
200 OK
Response Schema: application/json
success	
boolean (Successful response status)
Response status.

data	
object (Object of model "Schedule")
Data for an existing schedule in a company.

meta	
object (Empty meta object)
Additional response data.

401 Unauthorized
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

403 Forbidden
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

404 Not Found
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Empty meta object)
Additional response data.

422 Unprocessable Entity
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Request validation error message)
Additional response data.

Request samples
Payload
Content type
application/json

Copy
{
"date_end": "2022-02-01"
}
Response samples
200401403404422
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"id": 123,
"created_at": "2022-01-01 12:12:12",
"updated_at": "2022-01-01 12:12:12",
"deleted_at": null,
"original_entity_type": "activity",
"original_entity_id": 123,
"date_start": "2022-01-01",
"date_end": "2022-02-01",
"days": []
},
"meta": { }
}
Delete a Schedule

delete
/company/{company_id}/schedules/{schedule_id}
Completely deletes a schedule along with all its series and the linked appointments or events.

path Parameters
company_id
required
number
Example: 123
ID of a company.

schedule_id
required
number
Example: 123
ID of a schedule.

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
Should be equal to application/vnd.api.v2+json

Content-Type
required
string
Example: application/json
Should be equal to application/json

Responses
204 No Content
Response Schema: application/json
success	
boolean (Successful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Empty meta object)
Additional response data.

401 Unauthorized
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

403 Forbidden
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

404 Not Found
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Empty meta object)
Additional response data.

Response samples
204401403404
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": null,
"meta": { }
}
Create a Schedule Series

post
/company/{company_id}/schedules/{schedule_id}/days
Adds a new series to an existing schedule of appointments or events.

Authorizations:
BearerPartnerUser
path Parameters
company_id
required
number
Example: 123
ID of a company.

schedule_id
required
number
Example: 123
ID of a schedule.

query Parameters
include	
Array of strings
Items Enum: "events_master" "events_labels" "events_resource_instances" "events"
Requested set of an included models.

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
Should be equal to application/vnd.api.v2+json

Content-Type
required
string
Example: application/json
Should be equal to application/json

Request Body schema: application/json
day_of_week
required
string
Enum: "mon" "tue" "wed" "thu" "fri" "sat" "sun"
The day of the week for the schedule series.

events_master_id
required
number
The ID of the staff member assigned to the events in the schedule series.

events_time
required
string
Start time of the events in the schedule series, formatted as HH:MM:SS.

events_duration
required
number
Duration of each event in the schedule series, in seconds.

events_capacity
required
number
The capacity of activities in the schedule series. For appointments, this should be set to 1.

labels_ids	
Array of numbers
An array of label IDs associated with the events in the schedule series.

resource_instances_ids	
Array of numbers
An array of resource instance IDs used in the events of the schedule series.

Responses
201 Created
Response Schema: application/json
success	
boolean (Successful response status)
Response status.

data	
object (Object of model "Schedule Series")
Data for an existing schedule series in a company.

meta	
object (Empty meta object)
Additional response data.

401 Unauthorized
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

403 Forbidden
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

404 Not Found
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Empty meta object)
Additional response data.

422 Unprocessable Entity
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Request validation error message)
Additional response data.

Request samples
Payload
Content type
application/json

Copy
Expand allCollapse all
{
"day_of_week": "mon",
"events_master_id": 123,
"events_time": "14:00:00",
"events_duration": 3600,
"events_capacity": 4,
"labels_ids": [
123
],
"resource_instances_ids": [
123
]
}
Response samples
201401403404422
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"id": 123,
"created_at": "2022-01-01 12:12:12",
"updated_at": "2022-01-01 12:12:12",
"deleted_at": null,
"timetable_event_schedule_id": 123,
"day_of_week": "mon",
"events_time": "14:00:00",
"events_duration": 3600,
"events_master": {},
"events_labels": [],
"events_resource_instances": [],
"events": []
},
"meta": { }
}
Update a schedule series

patch
/company/{company_id}/schedules/{schedule_id}/days/{day_id}
Updates the settings of a schedule series for appointments or events.

Authorizations:
BearerPartnerUser
path Parameters
company_id
required
number
Example: 123
ID of a company.

schedule_id
required
number
Example: 123
ID of a schedule.

day_id
required
number
Example: 123
ID of a schedule series.

query Parameters
include	
Array of strings
Items Enum: "events_master" "events_labels" "events_resource_instances" "events"
Requested set of an included models.

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
Should be equal to application/vnd.api.v2+json

Content-Type
required
string
Example: application/json
Should be equal to application/json

Request Body schema: application/json
force
required
boolean
Flag for force override of manual changes in scheduled appointments/events.

events_master_id	
number
The ID of the staff member assigned to the events in the schedule series.

events_time	
string
Start time of the events in the schedule series, formatted as HH:MM:SS.

events_duration	
number
Duration of each event in the schedule series, in seconds.

events_capacity	
number
The capacity of activities in the schedule series. For appointments, this should be set to 1.

labels_ids	
Array of numbers
An array of label IDs associated with the events in the schedule series.

resource_instances_ids	
Array of numbers
An array of resource instance IDs used in the events of the schedule series.

Responses
200 OK
Response Schema: application/json
success	
boolean (Successful response status)
Response status.

data	
object (Object of model "Schedule Series")
Data for an existing schedule series in a company.

meta	
object (Empty meta object)
Additional response data.

401 Unauthorized
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

403 Forbidden
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

404 Not Found
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Empty meta object)
Additional response data.

422 Unprocessable Entity
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Request validation error message)
Additional response data.

Request samples
Payload
Content type
application/json

Copy
Expand allCollapse all
{
"force": false,
"events_master_id": 123,
"events_time": "14:00:00",
"events_duration": 3600,
"events_capacity": 4,
"labels_ids": [
123
],
"resource_instances_ids": [
123
]
}
Response samples
200401403404422
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"id": 123,
"created_at": "2022-01-01 12:12:12",
"updated_at": "2022-01-01 12:12:12",
"deleted_at": null,
"timetable_event_schedule_id": 123,
"day_of_week": "mon",
"events_time": "14:00:00",
"events_duration": 3600,
"events_master": {},
"events_labels": [],
"events_resource_instances": [],
"events": []
},
"meta": { }
}
Delete a schedule series

delete
/company/{company_id}/schedules/{schedule_id}/days/{day_id}
Deletes a schedule series and all appointments or events linked to it.

path Parameters
company_id
required
number
Example: 123
ID of a company.

schedule_id
required
number
Example: 123
ID of a schedule.

day_id
required
number
Example: 123
ID of a schedule series.

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
Should be equal to application/vnd.api.v2+json

Content-Type
required
string
Example: application/json
Should be equal to application/json

Responses
204 No Content
Response Schema: application/json
success	
boolean (Successful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Empty meta object)
Additional response data.

401 Unauthorized
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

403 Forbidden
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

404 Not Found
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Empty meta object)
Additional response data.

Response samples
204401403404
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": null,
"meta": { }
}
Get a List of Scheduled Appointments and Events

get
/company/{company_id}/schedules/{schedule_id}/days/{day_id}/events
Prints a list of events of scheduled records/activities.

Authorizations:
BearerPartnerUser
path Parameters
company_id
required
number
Example: 123
ID of a company.

schedule_id
required
number
Example: 123
ID of a schedule.

day_id
required
number
Example: 123
ID of a schedule series.

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
Should be equal to application/vnd.api.v2+json

Content-Type
required
string
Example: application/json
Should be equal to application/json

Responses
200 OK
Response Schema: application/json
success	
boolean (Successful response status)
Response status.

data	
Array of objects (Object of model "Event of appointment/event in a Schedule")
meta	
object (Meta object with response results count)
Additional response data.

401 Unauthorized
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

403 Forbidden
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

404 Not Found
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Empty meta object)
Additional response data.

Response samples
200401403404
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": [
{}
],
"meta": {
"count": 10
}
}
Create a Client Schedule

post
/company/{company_id}/schedules/{schedule_id}/client_schedules
Creates a client schedule with a series of appointments for events, based on an existing schedule..

Authorizations:
BearerPartnerUser
path Parameters
company_id
required
number
Example: 123
ID of a company.

schedule_id
required
number
Example: 123
ID of a schedule.

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
Should be equal to application/vnd.api.v2+json

Content-Type
required
string
Example: application/json
Should be equal to application/json

Request Body schema: application/json
client_id
required
number
ID of client for creating a client schedule.

comer_id	
number
ID of client`s comer for creating a client schedule.

schedule_days_ids
required
Array of numbers [ 1 .. 7 ] items
IDs of schedule series, min of 1 series, max of 7 series.

Responses
201 Created
Response Schema: application/json
success	
boolean (Successful response status)
Response status.

data	
object (Object of model "Client schedule")
Data for an existing client schedule in a company.

meta	
object (Empty meta object)
Additional response data.

401 Unauthorized
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

403 Forbidden
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

404 Not Found
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Empty meta object)
Additional response data.

422 Unprocessable Entity
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Request validation error message)
Additional response data.

Request samples
Payload
Content type
application/json

Copy
Expand allCollapse all
{
"client_id": 123,
"comer_id": 123,
"schedule_days_ids": [
123
]
}
Response samples
201401403404422
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"id": 123,
"loyalty_abonement_id": null,
"final_day": "2022-01-01 12:12:12",
"days": []
},
"meta": { }
}
Update a Client Schedule

patch
/company/{company_id}/schedules/{schedule_id}/client_schedules/{client_schedule_id}
Updates the client schedule by attaching or detaching a schedule series, which results in appointments for future events being created or removed.

Authorizations:
BearerPartnerUser
path Parameters
company_id
required
number
Example: 123
ID of a company.

schedule_id
required
number
Example: 123
ID of a schedule.

client_schedule_id
required
number
Example: 123
ID of a client schedule.

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
Should be equal to application/vnd.api.v2+json

Content-Type
required
string
Example: application/json
Should be equal to application/json

Request Body schema: application/json
schedule_days_ids
required
Array of numbers [ 1 .. 7 ] items
IDs of schedule series, min of 1 series, max of 7 series.

Responses
200 OK
Response Schema: application/json
success	
boolean (Successful response status)
Response status.

data	
object (Object of model "Client schedule")
Data for an existing client schedule in a company.

meta	
object (Empty meta object)
Additional response data.

401 Unauthorized
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

403 Forbidden
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

404 Not Found
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Empty meta object)
Additional response data.

422 Unprocessable Entity
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Request validation error message)
Additional response data.

Request samples
Payload
Content type
application/json

Copy
Expand allCollapse all
{
"schedule_days_ids": [
123
]
}
Response samples
200401403404422
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"id": 123,
"loyalty_abonement_id": null,
"final_day": "2022-01-01 12:12:12",
"days": []
},
"meta": { }
}
Delete a Client Schedule

delete
/company/{company_id}/schedules/{schedule_id}/client_schedules/{client_schedule_id}
Deletes a client schedule, including all associated future appointments for scheduled events.

path Parameters
company_id
required
number
Example: 123
ID of a company.

schedule_id
required
number
Example: 123
ID of a schedule.

client_schedule_id
required
number
Example: 123
ID of a client schedule.

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
Should be equal to application/vnd.api.v2+json

Content-Type
required
string
Example: application/json
Should be equal to application/json

Responses
204 No Content
Response Schema: application/json
success	
boolean (Successful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Empty meta object)
Additional response data.

401 Unauthorized
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

403 Forbidden
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

404 Not Found
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Empty meta object)
Additional response data.

Response samples
204401403404
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": null,
"meta": { }
}
Marketplace
Setting up notifications via the wizard in the notification showcase involves several steps:

Partner integration requirements. The partner company must provide all necessary information for technical integration, including: Domain name, URL for user registration, URL for receiving event callbacks.
User authorization and registration. The Altegio user confirms acceptance of the integration terms, after which they are redirected to the partner’s registration page. A salon_id GET parameter is added to the URL to indicate the branch initiating the registration.
Returning to Altegio. After successful registration, the partner must redirect the user back to Altegio using the designated return route.
Service activation confirmation. Once the service has been successfully paid for, the partner must notify Altegio by sending a ping to the appropriate endpoint.
Redirect URL after user registration with the partner service

post
/marketplace/partner/callback/redirect
After completing registration, the user must be redirected to this URL in the browser, along with any required data needed by the partner service.

Authorizations:
bearer
Request Body schema: application/json
salon_id
required
number
Location ID.

application_id
required
number
Application ID.

api_key	
number
API-key for messaging module.

webhook_urls	
Array of strings
Webhooks array

Responses
301 Accepted, redirect
401 Unauthorized
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

403 Forbidden
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

422 Invalid parameters given
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Request validation error message)
Additional response data.

Request samples
Payload
Content type
application/json

Copy
Expand allCollapse all
{
"salon_id": 123,
"application_id": 123,
"api_key": "2f181e2a-5c22-4ae7-9d9b-07104f312c28",
"webhook_urls": [
"https://example.com/webhook"
]
}
Response samples
401403422
Content type
application/json

Copy
Expand allCollapse all
{
"success": false,
"data": null,
"meta": {
"message": "Authentication needed."
}
}
Application Installation for a Location

post
/marketplace/partner/callback
The integration settings of the partner service must be sent to this address. Once received, the application will be configured and installed for the corresponding location.

Authorizations:
bearer
Request Body schema: application/json
salon_id
required
number
Location ID.

application_id
required
number
Application ID.

api_key	
number
API-key for messaging module.

webhook_urls	
Array of strings
Webhooks array

Responses
201 All parameters installed
401 Unauthorized
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

403 Forbidden
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

422 Invalid parameters given
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Request validation error message)
Additional response data.

Request samples
Payload
Content type
application/json

Copy
Expand allCollapse all
{
"salon_id": 123,
"application_id": 123,
"api_key": "2f181e2a-5c22-4ae7-9d9b-07104f312c28",
"webhook_urls": [
"https://example.com/webhook"
]
}
Response samples
401403422
Content type
application/json

Copy
Expand allCollapse all
{
"success": false,
"data": null,
"meta": {
"message": "Authentication needed."
}
}
Notify Altegio of Successful Payment

post
/marketplace/partner/payment
A webhook notification must be sent to this address to inform Altegio of a successful payment made on the partner service’s side.

Authorizations:
bearer
Request Body schema: application/json
salon_id
required
number
Location ID.

application_id
required
number
Application ID.

currency_iso
required
string
Currency ISO (e.g.: USD, EUR, BYN)

payment_sum
required
number
Payment amount.

payment_date
required
string
Date and time of payment.

period_from
required
string
Date from which the paid period begins (inclusive).

period_to
required
string
Date from which the paid period ends (inclusive).

Responses
200 Webhook ok
Response Schema: application/json
success	
boolean (Status.)
Status.

data	
object
Data.

401 Unauthorized
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

403 Forbidden
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

422 Wrong parameters given
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Request validation error message)
Additional response data.

Request samples
Payload
Content type
application/json

Copy
{
"salon_id": 123,
"application_id": 123,
"currency_iso": "EUR",
"payment_sum": 990.99,
"payment_date": "2022-01-01 10:10:00",
"period_from": "2022-01-01 10:10:00",
"period_to": "2022-02-01 10:10:00"
}
Response samples
200401403422
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"id": 123
}
}
Notify Altegio of Available SMS Sender Names

post
/marketplace/partner/short_names
This endpoint is used to send the list of SMS sender names available to the user. The user will be able to choose from any of the provided sender names.

Authorizations:
bearer
Request Body schema: application/json
salon_id
required
number
Location ID.

application_id
required
number
Application ID

short_names
required
Array of strings
Array of SMS names

Responses
201 OK
401 Unauthorized
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

403 Forbidden
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

422 Invalid params given
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Request validation error message)
Additional response data.

Request samples
Payload
Content type
application/json

Copy
Expand allCollapse all
{
"salon_id": 123,
"application_id": 123,
"short_names": [
"Altegio",
"AL"
]
}
Response samples
401403422
Content type
application/json

Copy
Expand allCollapse all
{
"success": false,
"data": null,
"meta": {
"message": "Authentication needed."
}
}
Chargeback Notice

post
/marketplace/partner/payment/refund/{payment_id}
Chargeback Notice

Authorizations:
bearer
path Parameters
payment_id
required
number
Example: 123
Payment ID.

Responses
200 Refund confirmed
401 Unauthorized
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

403 Forbidden
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

422 Invalid parameters given
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Request validation error message)
Additional response data.

Response samples
401403422
Content type
application/json

Copy
Expand allCollapse all
{
"success": false,
"data": null,
"meta": {
"message": "Authentication needed."
}
}
Webhook from Altegio About Application Events

post
/marketplace_webhook
Note: This is not a callable endpoint.

This section describes how Altegio sends webhook notifications when specific events occur in the application-to-location lifecycle. The following event types are currently supported:

uninstall — Sent when the application is disabled on the Altegio side.
freeze — Sent when the integration is frozen due to service expiration.
You can configure the webhook URL for receiving these events in your Altegio Developer Account.

Request Body schema: application/json
salon_id
required
number
Location ID.

application_id
required
number
Application ID.

event
required
string
Enum: "uninstall" "freeze"
Event Slug.

partner_token
required
string
Bearer token of the developer's company (to verify the origin of the webhook)

Responses
200 From the side of the partner, a response code of successful processing (200-299) is expected.
Request samples
Payload
Content type
application/json

Copy
{
"salon_id": 123,
"application_id": 123,
"event": "uninstall",
"partner_token": "yasdfkjah2328aj"
}
Application Status Data for Any Location

get
/marketplace/salon/{salon_id}/application/{application_id}
This endpoint is used to retrieve information about the application's installation status in a specific location.

Authorizations:
bearer
path Parameters
salon_id
required
number
Location ID

application_id
required
number
Application ID

Responses
200 Info about application branch link
Response Schema: application/json
success	
boolean (Successful response status)
Response status.

data	
object
meta	
object (Empty meta object)
Additional response data.

401 No partner token given.
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

403 No application access
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

404 Application isn't installed
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Empty meta object)
Additional response data.

Response samples
200401403404
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"logs": [],
"payments": [],
"connection_status": {}
}
}
Application Uninstall

post
/marketplace/salon/{salon_id}/application/{application_id}/uninstall
This endpoint is used by the partner service to uninstall the application from a specific location.

Authorizations:
bearer
path Parameters
salon_id
required
number
Location ID

application_id
required
number
Application ID

Responses
200 successfully uninstalled
Response Schema: application/json
success	
boolean (Successful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Empty meta object)
Additional response data.

401 No partner token given.
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

403 No application access
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

404 Application isn't installed
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Empty meta object)
Additional response data.

Response samples
200401403404
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": null,
"meta": { }
}
Data About Locations Connected to the Application

get
/marketplace/application/{application_id}/salons
This endpoint retrieves a list of locations that have connected a specific application, along with detailed information about each.

Authorizations:
bearer
path Parameters
application_id
required
number
Application ID

query Parameters
page
required
number
Page number

count
required
number <= 1000
Number of elements per page

Responses
200 Salons Array
Response Schema: application/json
success	
boolean
Success status (true)

data	
Array of objects
Array of objects

meta	
Array of objects
Metadata (empty array)

401 No partner token given
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

403 No access to application.
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

Response samples
200401403
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": [
{},
{}
],
"meta": { }
}
Sending SMS Through Operators
To enable SMS sending, the operator must provide the API endpoint (url_operator) to which Altegio will send the relevant requests. API requests are authorized using the RFC 6749 Resource Owner Password Credentials Grant method. Each request must include an Authorization HTTP header containing an access token in the following format: Authorization: Bearer The authorization key (partner_token) must be configured in the company’s notification module settings.

Sending SMS

post
/
Send SMS
If an error occurs while sending an SMS, the response will include the appropriate HTTP status code. In some cases, a descriptive error message will also be included in the response body. All API methods may return the following error codes: |

Authorizations:
bearer
header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token

Request Body schema: */*
destination_params
required
object
an object containing the send ID and phone number parameters

from
required
string
Sender name

text
required
string
departure text

type
required
string
sending type (sms, viber)

dispatch_type
required
string
mailing type (service - service, adds - advertising)

delivery_callback_url
required
string
url to which message statuses are sent

Responses
200 OK
400 Bad Request
401 Unauthorized
404 Not Found
Response samples
200400401404
Content type
application/json

Copy
Expand allCollapse all
[
{
"id": "232674",
"ext_id": "609aff0fca92466d6a1747dd83f05943a8c9600d"
},
{
"id": "232674",
"error_code": 32,
"error_message": "explicit error message"
}
]
Authorization
Authorize User

post
/auth
When a user changes their password, their API key is regenerated. As a result, reauthorization is required using the new API key.

Attribute	Type	Description
login	string	The user's phone number in the format 380000000000, or their email address.
password	string	User password
Authorizations:
bearer
header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token

Request Body schema: application/json
login
required
string
Phone number or Email

password
required
string
Password

Responses
201 Created
Response Schema: application/json
id	
integer <int32>
User ID

user_token	
string
User_token of the user

name	
string
Username

phone	
string
User phone

login	
string
User login

email	
string
User mailing address

avatar	
string
Path to the user's avatar file

is_approved	
boolean
Is the user verified in the system

Request samples
Payload
Content type
application/json

Copy
{
"login": "testuser@alteg.io",
"password": "testpass"
}
Response samples
201
Content type
application/json

Copy
{
"id": 123456,
"user_token": "wec23fh8cDfFV4432fc352456",
"name": "James Smith",
"phone": "+1-315-555-0175",
"login": "j.smith",
"email": "j.smith@example.com",
"avatar": "https://assets.alteg.io/general/0/01/123456789098765_12345678909876.png",
"is_approved": true
}
Authorize Online Booking User

post
/booking/auth
When a user of an online account changes their password, their API key will change and a new authorization will be required

Attribute	Type	Description
login	string	The visitor's phone number in the format 380000000000, or their email address.
password	string	Visitor password
Authorizations:
bearer
header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token

Request Body schema: application/json
login
required
string
Phone number or Email

password
required
string
Password

Responses
201 Created
Response Schema: application/json
id	
integer <int32>
User ID

user_token	
string
User_token of the user

name	
string
Username

phone	
string
User phone

login	
string
User login

email	
string
User mailing address

avatar	
string
Path to the user's avatar file

Request samples
Payload
Content type
application/json

Copy
{
"login": "testuser@alteg.io",
"password": "testpass"
}
Response samples
201
Content type
application/json

Copy
{
"id": 123456,
"user_token": "wec23fh8cDfFV4432fc352456",
"name": "James Smith",
"phone": "+1-315-555-0175",
"login": "j.smith",
"email": "j.smith@example.com",
"avatar": "https://assets.alteg.io/general/0/01/123456789098765_12345678909876.png"
}
Online Booking
Get booking form settings

get
/bookform/{id}
Each Altegio client can create an unlimited number of Online Booking forms with different designs and booking scenarios.

Typically, the ID of a booking form is embedded in the subdomain. For example: https://b123.alteg.io, where 123 is the booking form ID. This ID can be used to retrieve all necessary parameters for implementing Online Booking and to determine whether the booking applies to a specific company or a company chain.

For chain widgets, you will also need to call the [GET] /companies method with the company_id filter to retrieve the list of companies available for booking.

The object containing the Online Booking form settings includes the following fields:

Field	Type	Description
steps	Array of objects	Booking form steps with custom settings
style	object	Booking form design settings
group_id	number	Company chain ID (0 - if the booking form is for a non-chain company)
company_id	number	Company ID (always returned, used to get additional settings)
phone_confirmation	boolean	Do I need to confirm the phone by SMS (if groupid = 0 (not a group form), otherwise look in the settings of each company separately)
language	string	Booking form language (code from langs array)
langs	array of object	List of widget languages
comment_required	boolean	Whether the field with a comment within booking is required
google_analytics_id	string	Google Analytics ID
facebook_pixel_id	string	Facebook Pixel ID
sms_enabled	boolean	Is sending SMS available?
comment_input_name	string (optional)	Title for the field with a comment to the booking (if not set, the default value is used)
booking_notify_text	string (optional)	The text of the notification that is displayed (if set) at the step of entering contact data
is_show_privacy_policy	boolean	Whether it is necessary to display the text of the agreement on the personal data processing policy to the user
specialization_display_mode	number	Display the specialization or position of the employee. 0 - Specialization, 1 - Position
The steps array consists of objects that have the following fields:

Field	Type	Description	For what steps is specified
step	string	Step city/company/service/specialist/datetime/contact/confirm	
title	string	Name of the step to display in the interface	For everyone
number	number	What number should this step be displayed on (starting from 1)	For everyone
default	string or number	The default value for this step, if set	For all but datetime
hidden	boolean	Hide this step when booking or not	For everyone
date_hidden	boolean	Hide this step when booking or not	For datetime
time_hidden	boolean	Hide this step when booking or not	For datetime
date_default	string	The default value for this step, if set	For datetime
time_default	number	The default value for this step, if set	For datetime
The style object has the following fields:

Field	Type	Description
show header	boolean	Show header and menu or not
logo	string	Path to logo image
header_background	string	Path to subtitle background image
menu_background	string	Path to menu background image
primaryPalette	string	The main color of the form (all colors from the list: red, pink, purple, deep-purple, indigo, blue, light-blue, cyan, teal, green, light-green, lime, yellow, amber, orange, deep-orange, brown , grey, blue-grey, white, black)
accentPalette	string	Form secondary color (subtitle semi-transparent cover)
warnPalette	string	Booking form buttons color
backgroundPalette	string	Booking form background color
Authorizations:
bearer
path Parameters
id
required
number
Example: 1
booking form id

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
object
Object with data

meta	
Array of objects
Metadata (empty array)

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"steps": [],
"style": {},
"group_id": 1,
"company_id": 1,
"phone_confirmation": false,
"lang": "en-US",
"langs": [],
"comment_required": false,
"metrika_counter_id": "50217133",
"google_analytics_id": "UA-125358345-1",
"facebook_pixel_id": "2218788388343154",
"app_metrika_id": "46ab3b93-1bc6-457d-82f0-c1b51f39b01e",
"sms_enabled": true
},
"meta": [ ]
}
Online appointment
Get internationalization options

get
/i18n/{langCode}
Translation is available in one of the languages:

Latvian - 'lv-LV'
English - 'en-US'
Estonian - 'ee-EE'
Lithuanian - 'lt-LT'
German - 'de-DE'
Ukrainian - 'uk-UK'
Authorizations:
bearer
path Parameters
langCode
required
string
Example: en-US
Language code. One of the set 'lv-LV', 'en-US', 'ee-EE', 'lt-LT', 'de-DE', 'uk-UK'

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token

Responses
200 OK
Response Schema: application/json
404	
object
action	
object
tips	
object
payment-status	
object
user-data-form	
object
and	
string
terms-of-agreement	
string
data-processing	
string
license-agreement	
string
personal-data	
string
buy-for	
string
group_booking	
object
geo	
object
tooltips	
object
prepaid	
object
back	
string
backCity	
string
backFilials	
string
backRecordType	
string
filials	
string
my_profile	
string
about_us	
string
record	
object
at	
string
on	
string
h	
string
m	
string
from	
string
dist_m	
string
dist_km	
string
yesterday	
string
today	
string
tomorrow	
string
Close	
string
Yes	
string
No	
string
refresh	
string
online_record_disabled	
string
online_record_disabled_long_text	
string
address	
object
common	
object
notification	
object
header	
object
loyalty	
object
save	
string
proceed	
string
profile	
object
registration	
object
menu	
object
footer	
object
city	
object
company	
object
steps	
object
master	
object
cart	
object
reviews	
object
date	
object
time	
object
service	
object
confirm	
object
login	
object
Jan	
string
Feb	
string
March	
string
Mar	
string
Apr	
string
May	
string
Jun	
string
Jul	
string
Aug	
string
Sep	
string
Oct	
string
Nov	
string
Dec	
string
activity	
object
button	
object
landscape	
string
Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"404": {
"not-found": "It seems that this page does not exist.",
"not-found-record": "Such an entry does not exist.",
"go-home": "To main"
},
"action": {
"send": "send"
},
"tips": {
"terms": {},
"review-sent": "Review sent",
"your-mark": "your mark",
"leave-a-review": "Leave a review",
"leave-a-tip-to-a-specialist": "Leave a tip for a specialist",
"credited": "Tip credited",
"visit-amount": "Visit amount",
"will-be-written-off": "Will be written off",
"at-time": "v",
"rate-specialist-to-sent-feedback": "Rate a specialist to send feedback",
"title": "Tips",
"tips-required": "Please select a tip amount",
"review-or-tips-required": "It seems that there is nothing to send to a specialist yet",
"enter-sum": "Enter amount",
"custom-sum": "Own amount",
"cancel-tips": "Cancel tip",
"bad-sum": "Tipping must be indicated by the amount"
},
"payment-status": {
"payment-error": "Payment error. Try again",
"payment-redirect": "You should be directed to the payment system.",
"payment-config-error": "Error in setting up the payment system",
"contact-us-for-questions": "Contact us if you have any questions.",
"contacts": "Contacts",
"order-registered": "Application completed",
"order-paid": "Order has been paid",
"retry": "Repeat",
"order-created-successfully": "The order has been successfully created. Our representative will contact you to clarify the details.",
"order-is-being-processed": "Operation is being processed",
"get-payment-data": "Receiving payment data",
"transaction-number": "Transaction number",
"payment-transaction-info-1": "If you received a check, then the purchase was successfully completed. Check the email address you provided when purchasing.",
"payment-transaction-info-2": "    If the receipt did not arrive, please try again or contact us using the contacts below.",
"order-number-info": "Provide this number at the time of your visit to redeem your certificate or pass."
},
"user-data-form": {
"loyalty-phone-tip": "Provide this number at the time of your visit to redeem your certificate or pass.",
"name-required": "Name required",
"email-required": "Email required",
"loyalty-email": "E-mail for receipt and purchase",
"agreement-link": "with the terms of the agreement",
"data-processing-link": "data processing",
"terms-prefix": "By clicking on the button you agree",
"proceed": "Checkout",
"pay": "Pay",
"phone-code": "The code",
"phone": "Telephone",
"invalid-phone": "Invalid number"
},
"and": "and",
"terms-of-agreement": "Terms of agreement",
"data-processing": "Data processing",
"license-agreement": "License agreement",
"personal-data": "Your data",
"buy-for": "Buy for",
"group_booking": {
"personal_booking": "Individual services",
"group_booking": "Group events",
"choose_group_event": "Choose an event",
"group_events_available": "Registration available for group events",
"places": "Places",
"group_events_is_not_available": "There are no group events for the selected day",
"group_events_is_not_available_filial": "Group events are not configured in this branch yet",
"repeat": "Sign up again",
"duration": "Duration",
"no_space": "No places",
"not_found": "There are no events for the selected filters. Try changing your filter options"
},
"geo": {
"geo_timeout_error": "Unable to determine your location. You may be out of GPS coverage",
"geo_timeout_error_android": "Unable to determine your location. You may be out of GPS coverage. If you have geolocation disabled, you need to enable it and restart the application.",
"geo_access_error": "No access to your location. The application cannot show branches near you. If you have geolocation disabled, you need to enable it and restart the application."
},
"tooltips": {
"change_filial": "Now you will always start recording from this branch. You can change the branch through the menu item",
"change_filial_back_button": "You can also use the back button to change branch"
},
"prepaid": {
"required": "prepayment required",
"allowed": "prepayment is optional",
"prepaid_sum": "To pay online:",
"postpaid_sum": "Payment on the spot:"
},
"back": "Back",
"backCity": "Cities",
"backFilials": "Branches",
"backRecordType": "Record Type",
"filials": "Branches",
"my_profile": "Cabinet",
"about_us": "About Us",
"record": {
"show_details": "View details",
"is_canceled": "Recording canceled",
"is_canceled_success": "Recording canceled successfully",
"record": "Recording",
"place": "Place",
"master": "Employee",
"service": "Service",
"services": "Services",
"date": "date",
"past": "Passed",
"through": "Across",
"time": "Time",
"clients_count": "Number of seats:",
"book_visit": "Make a visit",
"add_service": "+ Add service",
"add_master": "+ Add wizard",
"add_datetime": "+ Add date and time",
"cancel_record": "Cancel entry",
"cancel_record_warning": "Once canceled, the recording will not be recoverable.",
"confirm_cancel_record": "Are you sure you want to cancel the recording?",
"error_cancel_record": "You cannot unsubscribe",
"error_cancel_record_new1": "It is not possible to cancel an appointment online. Please contact the administrator.",
"error_cancel_record_new2_1": "Unable to cancel online booking",
"error_cancel_record_new2_2": "before visiting. Please contact the administrator.",
"add_to_google_calendar": "Add to google calendar",
"booking_success": "You have successfully signed up!",
"create_new_record": "Sign up more",
"future_records": "Upcoming sessions",
"past_records": "Past",
"change_record_time": "Transfer entry",
"error_change_record_time": "Unable to reschedule online. Please contact the administrator.",
"error_change_record_time2_1": "Unable to reschedule online appointment",
"error_change_record_time2_2": "before visiting. Please contact the administrator.",
"selected_services": "Selected services",
"calculate_services": "Services available...",
"change_record_fail": "Error transferring recording, please try another time",
"continue_booking": "Continue recording",
"go_to_registration": "Go to Altegio website",
"repeat": "Repeat recording",
"is_deleted": "Your entry has been deleted."
},
"at": "v",
"on": "on the",
"h": "h.",
"m": "min.",
"from": "from",
"dist_m": "m",
"dist_km": "km",
"yesterday": "yesterday",
"today": "today",
"tomorrow": "tomorrow",
"Close": "close",
"Yes": "Yes",
"No": "Not",
"refresh": "Refresh",
"online_record_disabled": "Online registration is disabled. <br> We apologize for the inconvenience caused.",
"online_record_disabled_long_text": "Online registration is temporarily unavailable. You can still manage your online records in your account, transfer them and delete them.",
"address": {
"about": "About company",
"address": "The address",
"phone": "Telephone",
"phones": "Phones",
"schedule": "Working hours",
"site": "Site",
"date_and_time": "date and time",
"photos": "Photos",
"details": "More about the salon"
},
"common": {
"information": "information",
"reviews": "reviews",
"contacts": "contacts"
},
"notification": {
"your_city": "What is your city <%- city_name %>?",
"yes_my_city": "Yes, this is my city",
"no_my_city": "No, choose a city",
"read_all": "Read",
"delete_all": "Delete",
"deleted_record": "Deleting an entry",
"record": "Recording",
"news": "news",
"review": "Feedback about the master",
"notify": "Notification",
"sent": "Sent"
},
"header": {
"loyalty_cards": "Loyalty Cards",
"widget_settings": "Widget settings",
"settings": "Settings",
"select_town": "Choose city",
"select_company": "Choose branch",
"select_date": "Date picker",
"select_master": "Employee selection",
"select_time": "Timing",
"select_service": "Service selection",
"input_personal": "Entering contact details",
"online_record": "Online appointment",
"selection_of": "Choice",
"contacts_form": "Registration",
"record_created": "Post created!",
"login": "entrance",
"profile": "Personal Area",
"my_records": "My notes",
"record_create_disabled": "Online registration is temporarily unavailable.",
"master-info": "About employee",
"notification": "Notifications",
"my_notifications": "My notifications",
"none_notifications": "No notifications",
"cart": "Proof of payment",
"change_record": "Record transfer",
"you_booking": "Your order",
"you_data": "Your data",
"record": "Recording",
"actions": "Actions",
"cancel-record": "Cancel recording",
"booking_again": "Sign up again",
"choose_time": "Pick a time",
"choose_staff": "Choose a specialist",
"about_service": "About the service",
"records": "Entries",
"confirmation": "Confirmation"
},
"loyalty": {
"empty-list": "There is nothing here yet",
"points": {},
"no_cards": "You don't have any cards.",
"no_certificate": "You do not have any certificate.",
"no_subscription": "You don't have any subscription.",
"discount": "discount",
"cashback": "cashback",
"paid_amount": "Paid",
"sold_amount": "Sales",
"visit_count": "Visits",
"balance": "Accumulated (cashback)",
"certificate": {},
"subscription": {},
"subscriptions": {},
"programs": {}
},
"save": "Save",
"proceed": "Continue",
"profile": {
"name": {},
"noFutureRecords": "You have no upcoming sessions",
"noPastRecords": "You have no past sessions",
"phone": {},
"email": {},
"password": {},
"error": "An error occurred while saving data",
"saved": "Changes to your personal data are saved",
"contactsDetails": "Contact details",
"your_records": "Your entries in the salon."
},
"registration": {
"registration": "registration",
"form": {}
},
"menu": {
"account": "Personal data",
"change_filial": "Change Branch",
"change_city": "Change city",
"online_record": "Online booking",
"about": "About company",
"change_lang": "Change the language",
"hide_menu": "Hide menu",
"login": "To come in",
"myRecords": "My notes",
"on-line": "Online appointment",
"logout": "Log off",
"my": "Personal Area",
"favorite": "Favorites",
"change_password": "password change",
"header": "Menu",
"profile": "Profile",
"loyalty": "My cards",
"loyalty_subscriptions": "Subscriptions",
"loyalty_certificates": "Certificates"
},
"footer": {
"worked_on": "Works for",
"worked_on_company_name": "Altegio"
},
"city": {
"town_abbreviation": "G.",
"service_count": "Number of branches:",
"select_filial": "Branch selection",
"not_found_cities": "No cities found for your request",
"search_cities": "Find cities",
"affiliate": {}
},
"company": {
"list": "List",
"on_map": "On the map",
"no_companies_text_1": "You do not have any active company. To set up companies, go to",
"lk": "Personal account Altegio",
"no_companies_text_2": "After setting, press the button",
"no_companies": "No companies",
"near_session": "The closest available recording session is:",
"active_master": "Active professionals:",
"at_o_clock": "v",
"find_companies": "Find branches",
"not_found_companies": "No branches found for your search",
"look_at_the_map": "View on the map"
},
"steps": {
"date_and_time": "date and time",
"staff": {},
"service": "Service",
"time": "Time"
},
"master": {
"master": "Specialist",
"skip_select_master": "Skip employee selection",
"skip_select": "Skip selection",
"near_session": "Upcoming sessions",
"nearest_time": "Next time to sign up",
"no_record": "There are no free sessions for the selected day",
"no_record_new": "There is no free time for this date. Choose another date or another specialist",
"no_master": "The employee was fired or no longer works at this branch",
"any_master": "Irrelevant",
"record_is_available": "You can sign up",
"reviews": {},
"prepaid": {}
},
"cart": {
"title": "Services selected for payment",
"confirm": "Confirm Entry",
"go-to-pay": "Proceed to checkout",
"confirmed": "Entry Paid",
"pay-success": "Payment was successful!"
},
"reviews": {
"cancelAddReview": "Cancel",
"later": "Rate later",
"addReview": "Leave feedback",
"yourReviewMark": "your mark",
"reviewFieldLabelText": "your feedback",
"reviewTitle": "Please rate the quality of the application",
"reviewMessage": "Write suggestions for improvements",
"reviewRequestStoreTitle": "Would you like to rate the store?",
"reviewButton": "Estimate",
"thanksForReview": "Thanks for the feedback"
},
"date": {
"day_of": "Day off",
"no_record": "Working, no record",
"have_record": "Working, there is a record",
"by_month_num": {},
"by_month_short": {}
},
"time": {
"hourCased": {},
"weekCased": {},
"monthCased": {},
"yearCased": {},
"dayCased": {},
"minuteCased": {},
"secondCased": {},
"at_o_clock": "v",
"noTimes": "There are no free sessions for the selected day",
"the_part_of_day": {},
"by_week_day": {},
"by_full_week_day": {}
},
"service": {
"selected": "Selected",
"selected_service_count": "Selected services:",
"noServicesAndEvents": "No promotions or services found for your search",
"noMoreServices": "There are no services that can be booked together with the selected services",
"noMoreService": "There are no services that can be booked together with the selected service",
"search": "Search...",
"sale": "Stock",
"services": "Services",
"add": "Add a service",
"add_short": "Add",
"currency_short": "R.",
"services_pref": {},
"order_on": "Order for",
"price": "price",
"price_not_available": "Price not specified",
"price_from": "from",
"price_to": "before",
"unavailable_service": "no longer available for online registration. Would you like to choose another?",
"unavailable_services": "are no longer available for online booking. Would you like to choose others?"
},
"confirm": {
"confirm": "Sign up",
"show_order_details": "View order details",
"order_details": "Order Details",
"smsNotify": "Reminder",
"dontSend": "Do not send",
"order_on": "Service order",
"service_sale": "Promotion Services",
"license_text": "Duis placerat lectus et justo mollis, nec sodales orci congue. Vestibulum semper non urna ac suscipit. Vestibulum tempor, ligula id laoreet hendrerit, massa augue iaculis magna, sit amet dapibus tortor ligula non nibh.",
"accept": "By clicking the \"Register\" button, you agree to",
"i_accept": "I accept",
"i_agree": "I agree",
"accept_inline": "By clicking the \"Register\" button, you agree",
"accept_personal_data_inline": "processing of personal data",
"and_accept": "and accept",
"terms_of_agreement": "terms of the user agreement",
"terms_of_agreement_inline": "user agreement terms",
"how_my_personal_data_will_be_processed": "how my personal data will be processed",
"first_name": "Name",
"phone": "Telephone",
"will_be_used_to_confirm": "Will be used for confirmation",
"comment": "A comment",
"email": "Email",
"recording": "Sign up",
"code_and_phone_num": "Code and phone number",
"phone_confirm_short": "Confirm number",
"phone_already_exists": "The specified number is already in use.",
"phone_confirm": "Verify phone number",
"phone_confirm_button": "Confirm",
"defaultError": "System error:",
"you_want_to_book": "Do you want to enroll",
"your_master": "your master",
"waiting_for_you_at_the_address": "We are waiting for you at",
"untilVisit": {},
"orderErrorsActions": {},
"orderErrors": {},
"errors": {}
},
"login": {
"login": "entrance",
"sms_auth": "SMS authorization",
"input_code_confirm": "Enter the code received by SMS to the number",
"input_phone_num": "Enter your phone number, we will send an SMS to it with an access code to your personal account",
"input_login_and_password": "If you already have a username and password, enter them below",
"code_confirm": "confirmation code",
"come_in": "To come in",
"sms_not_send_with_colon": "If the SMS did not arrive, you can request a second code via:",
"sms_not_send": "If the SMS did not arrive, you can request a second code via",
"sms_not_send_next_try": "If the SMS did not arrive, you can",
"request_new_sms_code": "Request code again",
"change_phone_num": "Change phone number",
"get_code": "to get the code",
"or": "or",
"authorized_as": "You are logged in as",
"come_in_with_login_and_pass": "Log in with username and password",
"phone_or_email": "Phone or email",
"pass": "Password",
"come_in_with_sms_authorise": "Log in via SMS authorization",
"errors": {}
},
"Jan": "January",
"Feb": "February",
"March": "Martha",
"Mar": "Martha",
"Apr": "April",
"May": "May",
"Jun": "June",
"Jul": "July",
"Aug": "august",
"Sep": "September",
"Oct": "October",
"Nov": "november",
"Dec": "December",
"activity": {
"places_left": "Remaining places",
"filters": {}
},
"button": {
"select": "Select",
"select_time": "Choose time",
"all_right": "That's right",
"get_sms": "Receive SMS",
"back": "Return",
"add_more": "Add more",
"remove-from-record": "Remove from order",
"continue": "Continue",
"confirm": "Confirm",
"canceling": "Cancel",
"more_reviews": "More reviews"
},
"landscape": "It will be more convenient if you turn the device vertically"
}
Send SMS verification code for phone number

post
/book_code/{company_id}
Request body
phone (required, string, '79991234567') - phone to which the code will be sent
fullname (option, sring, James) - Client name
Authorizations:
bearer
path Parameters
company_id
required
number
Example: 4564
Company ID

header Parameters
Accept
required
string
application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token

Request Body schema: application/json
phone	
string
Customer phone number

fulname	
string
Client name

Responses
201 Created
Response Schema: application/json
success	
boolean
Execution success status (true)

meta	
object
metadata

Request samples
Payload
Content type
application/json

Copy
{
"phone": "+1-315-555-0175",
"fulname": "James Smith"
}
Response samples
201
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"meta": {
"message": "Created"
}
}
Check Booking Options

post
/book_check/{company_id}
After generating the appointment parameters, you can validate them to ensure the appointment can be successfully created.

The JSON object containing the Online Booking parameters includes the following fields:

Field	Type	Mandatory	Description
appointments	Array of objects	YES	Booking options (services, specialists...)
The appointments array consists of objects that have the following fields:

Field	Type	Mandatory	Description
id	number	Yes	Booking ID for post-save feedback (see response to request).
services	array of numbers	NO	Array of IDs of the services the client wants to sign up for
staff_id	number	YES	ID of the specialist the client wants to book with (0 if Any specialist is selected)
datetime	datetime	YES	Session date and time in ISO8601 format (passed for each session in the book_times resource)
In response to the parameter check request, an empty response with the code 201 will be returned if the booking parameters are in order and bookings can be created:

If the response is JSON with an HTTP code other than 201, then the booking parameters are out of order, and bookings cannot be created.

The server may return the following errors during appointment creation:

Selected time slot is already taken. Returned with HTTP status code 422 and error code 433.

No employees available for booking. Occurs if a default employee was selected but none are available. Returned with HTTP status code 422 and error code 436.

Booking time conflict within the same request. One of the selected booking times overlaps with another booking created in the same request. Returned with HTTP status code 422 and error code 437, including the conflicting booking’s id in the appointments array.

Service not available for booking The selected service is no longer available (e.g. removed by the company). Returned with HTTP status code 422 and error code 438.

Authorizations:
bearer
path Parameters
company_id
required
number
Company ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token

Request Body schema: application/json
appointments
required
Array of objects
Booking options (services, specialists...)

Responses
201 Created
Response Schema: application/json
success	
boolean
Execution success status (true)

meta	
object
metadata

422 Unprocessable Entity
Response Schema: application/json
success	
boolean
Execution success status (true)

meta	
object
metadata

Request samples
Payload
Content type
application/json

Copy
Expand allCollapse all
{
"appointments": [
{},
{}
]
}
Response samples
201422
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"meta": {
"message": "Created"
}
}
Create a Session Entry

post
/book_record/{company_id}
To create a session entry, provide a JSON object containing the online booking parameters. The object includes the following fields:

Field	Type	Mandatory	Description
phone	string	YES	Client's phone number (eg 79161502239)
full name	string	YES	Client name
email	string	NO	Postal address of the client
appointments	Array of objects	YES	Booking options (services, specialists...)
code	string	NO	Phone number confirmation code sent via SMS (only needed if you need to confirm the number)
notify_by_sms	number	NO	Number of hours in advance to send an SMS reminder for the appointment (set to 0 to disable reminders).
notify_by_email	number	NO	Number of hours in advance to send an email reminder for the appointment (set to 0 to disable the reminder).
comment	string	NO	Appointment Comment
api_id	string	NO	External Appointment ID
The appointments array consists of objects that have the following fields:

Field	Type	Mandatory	Description
id	number	Yes	Booking ID for post-save feedback (see response to request).
services	array of numbers	NO	Array of IDs of the services the client wants to sign up for
staff_id	number	YES	ID of the specialist the client wants to book with (0 if any specialist is selected)
datetime	datetime	YES	Session date and time in ISO8601 format (passed for each session in the book_times resource)
custom_fields	key-value object	NO	Additional field values that are returned with the appointment
Additional fields in the appointments array

When additional appointment fields are created (see the "Additional Fields" section), you can pass custom values for them during appointment creation. These fields are unique to each company. Once the additional fields are set up, their values can be included in the optional custom_fields parameter. This should be passed as a key–value object, where each key corresponds to the code of the additional field. Example:

Company created an additional appointment field with code="my_custom_field" type="number", and a second field code="some_another_field" type="list"
When creating an appointment, another attribute was passed in the appointments array element: "" appointments: [{ ... }, { ... custom_fields: { "my_custom_field": 123, "some_another_field": ["first value", "second value"] } }]"
When this appointment is received by the GET method later, the same value of additional fields will be returned in the response
In response to the request to create an appointment, an array of objects will come (the number of objects is equal to the number of objects in the appointments array) with the following fields:

Field	Type	Description
id	number	The appointment ID as passed in the original appointments array
record_id	number	The unique identifier of the appointment created in the system
record_hash	string	A temporary ID used for deleting the appointment immediately after creation
Errors to be handled:

Incorrect SMS verification code. Returned with HTTP status 422 and error code 432. The SMS verification code entered by the user is invalid.

Selected time slot is already taken. Returned with HTTP status 422 and error code 433. The selected appointment time is unavailable. The response includes the id of the conflicting appointment from the appointments array.

User is blacklisted. Returned with HTTP status 403 and error code 434. The user with the specified phone number is blacklisted and cannot book an appointment.

Invalid phone number format. Returned with HTTP status 422 and error code 431. The user's phone number is not in a valid format.

Missing client name. Returned with HTTP status 422 and error code 435. The client's name was not provided.

No available employees. Returned with HTTP status 422 and error code 436. No employees are available at the selected time (commonly occurs when using a default employee setting).

Overlapping appointments in request. Returned with HTTP status 422 and error code 437. One of the selected times overlaps with another appointment in the same request. The response includes the id of the conflicting appointment from the appointments array.

Authorizations:
bearer
path Parameters
company_id
required
number
Company ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token

Request Body schema: application/json
phone
required
string
Customer phone

fullname
required
string
Client name

email	
string
Postal address of the client

code	
number
SMS confirmation code for verifying the phone number. This field is required if the company has phone_confirmation = true

comment	
string
Commentary on the post

type	
string
Appointment source

notify_by_sms	
number
Specifies how many hours before the visit an SMS reminder should be sent to the client. Set to 0 if no reminder is needed.

notify_by_email	
number
Specifies how many hours before the visit an email reminder should be sent to the client. Set to 0 if no reminder is needed.

api_id	
number
Appointment ID from external system

appointments	
Array of objects
Appointment options (session, services, specialist)

Responses
201 Created
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
Array of objects
Data (array of objects)

meta	
Array of objects
Metadata (empty array)

Request samples
Payload
Content type
application/json

Copy
Expand allCollapse all
{
"phone": "+1-315-555-0175",
"fullname": "James Smith",
"email": "j.smith@example.com",
"code": "38829",
"comment": "test entry!",
"type": "mobile",
"notify_by_sms": 6,
"notify_by_email": 24,
"api_id": "777",
"appointments": [
{},
{}
]
}
Response samples
201
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": [
{},
{}
],
"meta": [ ]
}
Move Appointment to Session

put
/book_record/{company_id}/{record_id}
Authorizations:
bearer
path Parameters
company_id
required
number
Company ID

record_id
required
number
ID of the appointment to be migrated

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token

Request Body schema: application/json
datetime	
string <date-time>
Date and time to which we want to move the appointment

comment	
string
Appointment Comment

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
object
Data (object)

Request samples
Payload
Content type
application/json

Copy
{
"datetime": "2025-09-21T23:00:00.000+03:00",
"comment": "DODO!"
}
Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"id": 30358,
"services": [],
"company": {},
"staff": {},
"date": "2025-09-21T23:00:00.000+03:00",
"create_date": "2025-09-21T23:00:00.000+03:00",
"comment": "",
"deleted": true,
"length": 3600,
"notify_by_sms": 0,
"notify_by_email": 0,
"master_requested": false,
"online": true,
"api_id": "0"
}
}
Get an appointment for a session

get
/book_record/{company_id}/{record_id}/{record_hash}
Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

record_id
required
number
Example: 22123
Post ID (enough to view the post if the user is logged in)

record_hash
required
string
Example: 'dawd4fs09rhf0s9fafef0'
HASH appointments (required to view the appointment if the user is not authorized)

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
200 OK
Response Schema: application/json
id	
number
Appointment ID

services	
Array of objects
Service ID List

company	
object
Company parameters

staff	
object
Employee parameters

clients_count	
integer <int32>
date	
string <date-time>
04-02T12:00:00Z' (required, string) - Session date

datetime	
string <date-time>
Session date in ISO

create_date	
string <date-time>
04-02T12:00:00Z' (required, string) - Appointment creation date

comment	
string
Appointment Comment

deleted	
boolean
Whether the appointment was made (true if removed)

attendance	
number
2 - the user confirmed the appointment, 1 - the user came, the services were provided, 0 - the user was waiting, -1 - the user did not show'

length	
number
Session duration

notify_by_sms	
number
Specifies how many hours in advance an SMS reminder should be sent before the appointment. Set to 0 to disable SMS reminders

notify_by_email	
number
Specifies how many hours in advance an email reminder should be sent before the appointment. Set to 0 to disable email reminders

master_requested	
boolean
Indicates whether a specific specialist was selected for the appointment. Set to false if the "Any specialist" option was chosen.

online	
boolean
Indicates whether the appointment was created online by the client (true) or manually by an administrator (false)

api_id	
string
External entry ID

last_change_date	
string <date-time>
The date and time when the appointment was last modified

prepaid	
boolean
Indicates whether online payment is available for the appointment

prepaid_confirmed	
boolean
Online payment status

activity_id	
number
group event ID

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"id": 13132699,
"services": [
{}
],
"company": {
"id": 4564,
"title": "Nail correction salon",
"country_id": 1,
"country": "United States",
"city_id": 2,
"city": "New York",
"phone": "+1-315-555-0175",
"phones": [ ],
"timezone": 12,
"address": "New York, 787 Jackson Drive",
"coordinate_lat": "40.730610",
"coordinate_lon": "-73.935242",
"allow_delete_record": true,
"allow_change_record": true,
"site": "www.example.com",
"currency_short_title": "USD",
"allow_change_record_delay_step": 0,
"allow_delete_record_delay_step": 0
},
"staff": {
"id": 55436,
"name": "Natalia",
"specialization": "Master of manicure and pedicure",
"position": {},
"show_rating": 1,
"rating": 4.84,
"votes_count": 0,
"avatar": "http://example.com/image.png",
"comments_count": 37
},
"clients_count": 1,
"date": "2025-09-21T23:00:00.000+03:00",
"datetime": "2017-10-24T17:30:00+0000",
"create_date": "2017-10-20T21:40:24+0000",
"comment": "",
"deleted": true,
"attendance": 0,
"length": 1800,
"notify_by_sms": 0,
"notify_by_email": 0,
"master_requested": false,
"online": true,
"api_id": "",
"last_change_date": "2017-10-24T23:54:02+0000",
"prepaid": false,
"prepaid_confirmed": false,
"activity_id": 0
}
Create an Appointment in a Group Event

post
/activity/{company_id}/{activity_id}/book
Authorizations:
bearer
path Parameters
company_id
required
number
Company ID

activity_id
required
number
Group Event ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Request Body schema: */*
fullname
required
string
Client name

phone
required
string
Customer phone (for example 79161502239)

email	
string
Postal address of the client

code	
number
SMS confirmation code for verifying the phone number. This field is required if the company has phone_confirmation = true

comment	
string
Appointment Comment

notify_by_sms	
integer <int32>
Specifies how many hours in advance an SMS reminder should be sent before the appointment. Set to 0 to disable SMS reminders.

notify_by_email	
integer <int32>
Specifies how many hours in advance an email reminder should be sent before the appointment. Set to 0 to disable email reminders

type	
string
Appointment source

api_id	
number
Appointment ID from external system

clients_count	
number
number of seats

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
object
Object with data

meta	
Array of objects
Metadata (empty array)

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"id": 28417878,
"hash": "9e6a54a1a9b118b65cc39ab6f3c3b5b4"
},
"meta": [ ]
}
Get a list of dates available for booking

get
/book_dates/{company_id}
The dates available for booking object has the following fields:

Field	Type	Description
working_days	array of working days grouped by month	Working days of an employee/organization
working_dates	array of dates	An array of dates when the employee/organization works
booking_days	array of days when there are free sessions	Array of days that are available for booking for the specified services
booking_dates	array of dates	An array of dates when there are free sessions for the service to the selected employee/organization
working days and booking_days have the same format: month:[array of days in this month]

For example, this booking_days: "9": [ "4", "5"] "10": [ "14", "25"] Means that on September 4 and 5, and on October 14 and 25 there are free sessions for booking

The following filters are available:

service_ids: Array of service IDs. If you need dates when you can book the specified services
staff_id: Employee ID. If you need dates when you can book the specified specialist
date: Date within a month, if you need dates for a specific month
Authorizations:
bearer
path Parameters
company_id
required
number
Company ID

query Parameters
service_ids[]	
string
Service ID. Filter by the list of service identifiers

staff_id	
number
Example: staff_id=0
Employee ID. Filter by employee ID Default: 0

date	
string
Example: date=2015-09-01
date in iso8601 format. Filter by month of booking.

date_from	
string
Example: date_from=2015-09-01
date in iso8601 format. Start of dates to search. Must be used together with the "date_to" param and overrides the "date" param.

date_to	
string
Example: date_to=2015-09-30
date in iso8601 format. End of dates to search. Must be used together with the "date_from" param and overrides the "date" param.

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
object
Data (object)

meta	
Array of objects
Metadata (empty array)

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"booking_days": {},
"booking_dates": [],
"working_days": {},
"working_dates": []
},
"meta": [ ]
}
Get a List of Services Available for Booking

get
/book_services/{company_id}
The object of services available for booking has the following fields:

Field	Type	Description
categories	array of objects	Array of service categories (you can't book a category)
services	array of objects	Services available for booking by category
An object from the categories array, has the following fields:

Field	Type	Description
id	number	Category ID
title	string	Category name
sex	number	Category belonging to gender (1 - male, 2 - female, 0 - not specified)
weight	number	Category weight. Categories are sorted by weight, heavier ones first
api_id	string	External Category ID
An object from the services array, has the following fields:

Field	Type	Description
id	number	Service ID
title	string	Service name
category_id	number	Identifier of the category to which the service belongs
weight	number	Category weight. Services are sorted by weight, heavier ones first
price_min	number	The minimum cost of the service
price_max	number	Maximum cost of the service
discount	number	Service discount
comment	string	Comment on the service
active	number	Is the service active
prepaid	string	Online payment status
sex	number	Gender for which the service is provided
session_length	number	Service duration in seconds (only if filter by employee is set)
image	string	Image services
If you need to get the services provided by a specific specialist, then you need to use the filter by specialist. The following filters are available:

staff_id: Employee ID. If you need services that only the selected employee provides
datetime: date (in iso8601 format). Specifies the desired appointment date. Use this parameter to retrieve services that can be booked with the selected specialist on that specific date.
service_ids: An array of service IDs. If a specialist is already selected and the time and service(s) are part of an existing appointment, this parameter should be used to select an additional service.
Authorizations:
bearer
path Parameters
company_id
required
number
Example: 4564
Company ID

query Parameters
staff_id	
number
Example: staff_id=0
Employee ID. Filter by employee ID Default: 0

datetime	
number
Example: datetime=``
date (in iso8601 format). Filter by service booking date (for example '2005-09-09T18:30') Default: ''

service_ids[]	
Array of numbers
Service ID. Filter by the list of identifiers of already selected (within one appointment) services. It makes sense if a filter by specialist and date is set.

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token

Responses
200 OK
Response Schema: application/json
success	
boolean
Success status (true)

data	
object
Object with data

meta	
Array of objects
Metadata (empty array)

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"events": [ ],
"services": [],
"category": []
},
"meta": [ ]
}
Get a list of the nearest available sessions

get
/book_staff_seances/{company_id}/{staff_id}/
The employee's nearest sessions object has the following fields:

Field	Type	Description
session_date	string	Next date with available sessions
sessions	array	List of available sessions
The following filters are available:

service_ids: Array of service IDs. If you need sessions, when can you book these services
datetime: date (in iso8601 format) for which you want to get the next sessions
Authorizations:
bearer
path Parameters
company_id
required
number
Company ID

staff_id
required
number
Employee ID

query Parameters
service_ids[]	
Array of numbers
Service ID. Filter by the list of service identifiers

datetime	
number
date in iso8601 format. Filter by date

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
object
Object with data

meta	
Array of objects
Metadata (empty array)

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"seance_date": "2025-09-21T23:00:00.000+03:00",
"seances": []
},
"meta": [ ]
}
Get a list of employees available for booking

get
/book_staff/{company_id}
Each object from the array of employees available for booking has the following fields:

Field	Type	Description
id	number	Employee ID
name	string	Employee name
specialization	string	Employee specialization
position	object	Employee position
bookable	boolean	Does the employee have sessions available for booking
weight	number	Employee weight. When withdrawing, employees are sorted by weight, heavier first
show_rating	number	Whether to show employee's rating (1 - show, 0 - don't show)
rating	number	Employee rating
votes_count	number	Number of votes rated employee
comments_count	number	Number of comments to an employee
avatar	string	Path to employee avatar file
information	string	Additional information about the employee (HTML format)
session_date	string	Date of the next day that there are available sessions (only for bookable = true)
The following filters are available:

service_ids: Array of service IDs. If you need employees who provide only the selected service
datetime: date (in iso8601 format). If you need employees who have sessions for the specified service at the specified time
Authorizations:
bearer
path Parameters
company_id
required
number
Example: 4564
Company ID

query Parameters
service_ids[]	
Array of numbers
Service ID. Filter by the list of service identifiers

datetime	
number
date in iso8601 format. Filter by service booking date (for example '2005-09-09T18:30')

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
Array of objects
Array of objects with data

meta	
Array of objects
Metadata (empty array)

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": [
{},
{}
],
"meta": [ ]
}
Get a List of Sessions Available for Booking

get
/book_times/{company_id}/{staff_id}/{date}
The sessions available for booking object has the following fields:

Field	Type	Description
time	string	Session time (17:30 for example)
session_length	number	Session duration in seconds
datetime	datetime	Date and time of the session in ISO8601 format (must be passed when creating the appointment)
The following filters are available:

service_ids: Array of service IDs. If you need sessions, when can you book these services
Authorizations:
bearer
path Parameters
company_id
required
number
Company ID

date
required
string
date in iso8601 format. Filter by booking date (eg '2015-09-30')

staff_id
required
number
Example: 0
Employee ID. Filter by employee ID Default: 0

query Parameters
service_ids[]	
string
Service ID. Filter by the list of service identifiers

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
Array of objects
Array of objects with data

meta	
Array of objects
Metadata (empty array)

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": [
{},
{},
{},
{},
{}
],
"meta": [ ]
}
User Appointments
Log in with phone number and code

post
/user/auth
To access both online and offline (e.g., phone-made) appointments, the user must log in by verifying their phone number. This is done by requesting a confirmation code to be sent via SMS using the "SMS phone number verification code" endpoint.

Authorizations:
bearer
header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token

Request Body schema: application/json
login
required
string
Phone number or Email

password
required
string
Password

Responses
201 Created
Response Schema: application/json
user_token	
string
User_token of the user

Request samples
Payload
Content type
application/json

Copy
{
"login": "testuser@alteg.io",
"password": "testpass"
}
Response samples
201
Content type
application/json

Copy
{
"user_token": "wec23fh8cDfFV4432fc352456"
}
Delete User Appointment

delete
/user/records/{record_id}/{record_hash}
Authorizations:
(beareruser)
path Parameters
record_id
required
number
Example: 22123
Appointment ID (enough to delete the appointment if the user is authorized)

record_hash
required
string
Example: 'dawd4fs09rhf0s9fafef0'
HASH appointments (required to delete the record if the user is not authorized)

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
200 OK
Online Booking Users
Authorize Online Booking User

post
/booking/auth
When a user of an online account changes their password, their API key will change and a new authorization will be required

Attribute	Type	Description
login	string	The visitor's phone number in the format 380000000000, or their email address.
password	string	Visitor password
Authorizations:
bearer
header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token

Request Body schema: application/json
login
required
string
Phone number or Email

password
required
string
Password

Responses
201 Created
Response Schema: application/json
id	
integer <int32>
User ID

user_token	
string
User_token of the user

name	
string
Username

phone	
string
User phone

login	
string
User login

email	
string
User mailing address

avatar	
string
Path to the user's avatar file

Request samples
Payload
Content type
application/json

Copy
{
"login": "testuser@alteg.io",
"password": "testpass"
}
Response samples
201
Content type
application/json

Copy
{
"id": 123456,
"user_token": "wec23fh8cDfFV4432fc352456",
"name": "James Smith",
"phone": "+1-315-555-0175",
"login": "j.smith",
"email": "j.smith@example.com",
"avatar": "https://assets.alteg.io/general/0/01/123456789098765_12345678909876.png"
}
Send SMS verification code for phone number to change data

get
/booking/user/phone_confirmation
The request must contain one of two parameters: company_id or group_id

Authorizations:
(beareruser)
query Parameters
company_id
required
integer
Company ID

group_id
required
integer
Chain ID

phone
required
string
Phone number

header Parameters
Accept
required
string
application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
202 Accepted
Response samples
202
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"meta": {
"message": "Accepted"
}
}
Online Booking User Password Update

put
/booking/user/password
Updating the password of an online booking user.

The response comes with a new user token.

Authorizations:
(beareruser)
header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Request Body schema: application/json
old_password	
string
Current Password

new_password	
string
New password

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
object
Object with data

meta	
Array of objects
Metadata (empty array)

Request samples
Payload
Content type
application/json

Copy
{
"old_password": "qwerty123",
"new_password": "example!"
}
Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"user_token": "4de9d8cc108c0"
},
"meta": [ ]
}
Updating User Data in Online Booking

put
/booking/user
Updating a specialist’s data in online booking.

When updating a phone number, the confirmation_code field must be included in the request. This code should be obtained using the SMS confirmation code of the phone number to change data

Authorizations:
(beareruser)
header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Request Body schema: application/json
name	
string
Name

email	
string
mail

phone	
string
Phone number

confirmation_code	
string
SMS confirmation code (when changing phone number)

Responses
202 Accepted
Request samples
Payload
Content type
application/json

Copy
{
"name": "James Smith",
"email": "j.smith@example.com",
"phone": "+1-315-555-0175",
"confirmation_code": "1234"
}
Response samples
202
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"meta": {
"message": "Accepted"
}
}
Retrieving Online Booking User Data

get
/booking/user/data
Retrieve online booking user data.

Authorizations:
(beareruser)
header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
200 OK
Response Schema: application/json
0	
string
User Token

id	
integer <int32>
User ID

user_token	
string
User Token

name	
string
Username

phone	
string
User phone

login	
string
User login

email	
string
User mail

avatar	
string
User avatar

Response samples
200
Content type
application/json

Copy
{
"0": "152afb01134237bc844d7e",
"id": 32132133,
"user_token": "152afb01134237bc844d7e",
"name": "James",
"phone": "+1-315-555-0175",
"login": "j.smith",
"email": "j.smith@example.com",
"avatar": "https://api.alteg.io/images/avatar.png"
}
Companies
Get a list of companies

get
/companies
Get a list of companies with data

Authorizations:
bearer
query Parameters
id	
number
Example: id=4564
Filter by company ID

group_id	
number
Example: group_id=83
Filter by company chain ID Default: 83

my	
number
Example: my=1
For authorized user only. If you need companies that the user has rights to manage

active	
number
Example: active=1
If you need to get only companies with an active license and an available booking

moderated	
number
Example: moderated=1
If you need to get only moderated companies, whose content is checked for publication

forBooking	
number
Example: forBooking=1
Include date and time of the next free session in the company (ISO8601)

show_groups	
number
Example: show_groups=1
Include in the company object a list of chains that this company belongs to

city_id	
number
Example: city_id=2
Filter by city ID (cities getting method)

showBookforms	
number
Example: showBookforms=1
Include in the company object a list of company online booking forms

min_id	
number
Example: min_id=1000
Filter by minimum company ID

show_deleted	
number
Example: show_deleted=1
Include deleted companies

hide_record_type_single	
number
Example: hide_record_type_single=1
Hide companies with individual booking

hide_record_type_activity	
number
Example: hide_record_type_activity=1
Hide companies with group booking

hide_record_type_mixed	
number
Example: hide_record_type_mixed=1
Hide companies with mixed booking

business_group_id	
number
Example: business_group_id=1
Filter by business group ID

business_type_id	
number
Example: business_type_id=1
Filter by business type ID

include	
Array of strings
Items Enum: "staff" "positions" "accounts" "storages" "expenses"
Example: include=staff&include=positions
Include additional data in the company object

count	
number
Number of companies per page

page	
number
Page number

header Parameters
Accept
required
string
Must be application/vnd.api.v2+json

Content-Type
required
string
Must be application/json

Authorization
required
string
Bearer partner_token

Responses
200 OK
Response Schema: application/json
success	
boolean
Success status (true)

data	
Array of objects
Array of objects

meta	
Array of objects
Metadata (empty array)

401 Unauthorized
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

Response samples
200401
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": [
{},
{}
],
"meta": { }
}
Create a company

post
/companies
Create new company

Authorizations:
(beareruser)
header Parameters
Accept
required
string
Must be application/vnd.api.v2+json

Content-Type
required
string
Must be application/json

Authorization
required
string
Bearer partner_token, User user_token

Request Body schema: application/json
title	
string
Company name

country_id	
number
ID of the country in which the company is located (method to get a list of countries)

city_id	
number
Identifier of the city in which the company is located (method to get a list of cities)

address	
string
Company address

site	
string
Company website

coordinate_lat	
number <float>
Latitude

coordinate_lot	
number <float>
Longitude

business_type_id	
number
Business type

short_descr	
string
Company category

Responses
201 Created
Response Schema: application/json
success	
boolean
Success status (true)

data	
object
data object

meta	
Array of objects
Metadata (empty array)

401 Unauthorized
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

404 Not Found
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Empty meta object)
Additional response data.

Request samples
Payload
Content type
application/json

Copy
{
"title": "James Smith LLC",
"country_id": 1,
"city_id": 2,
"address": "New York, 787 Jackson Drive",
"site": "james-smith-company.com",
"coordinate_lat": "40.730610",
"coordinate_lot": "-73.935242",
"business_type_id": 1,
"short_descr": "Beauty salon"
}
Response samples
201401404
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"id": "1050",
"title": "James Smith LLC",
"short_descr": "Beauty salon",
"logo": "https://app.alteg.io/images/no-master.png",
"active": "1",
"phone": "+1-315-555-0175",
"country_id": 7,
"schedule": "",
"country": "United States",
"city_id": 181,
"city": "New York",
"timezone_name": "America/New_York",
"address": "New York, 787 Jackson Drive",
"coordinate_lat": "40.730610",
"coordinate_lon": "-73.935242",
"phone_confirmation": true,
"active_staff_count": 2,
"app_ios": "",
"app_android": "",
"currency_short_title": "R"
},
"meta": { }
}
Get company

get
/company/{id}/
Getting information about the company.

Authorizations:
(beareruser)
path Parameters
id
required
number
Example: 37532
The ID of the company to get information about.

query Parameters
my	
number
Example: my=1
For authorized user only. If you need additional data for the company that the user has rights to manage

forBooking	
number
Example: forBooking=1
Date and time of the next free session in the company (ISO8601).

show_groups	
number
Example: show_groups=1
Include in the company object a list of chains that this company belongs to

showBookforms	
number
Example: showBookforms=1
Show company online booking forms (widgets)

bookform_id	
number
Example: bookform_id=19203
Show url of online booking form with specified ID

header Parameters
Accept
required
string
Must be application/vnd.api.v2+json

Content-Type
required
string
Must be application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
200 OK
Response Schema: application/json
success	
boolean
Success status (true)

data	
object
Object with data

meta	
Array of objects
Metadata (empty array)

401 Unauthorized
Response Schema: application/json
errors	
object (Response error message)
Additional response data.

meta	
object (Response error message)
Additional response data.

404 Not Found
Response Schema: application/json
errors	
object (Response error message)
Additional response data.

meta	
object (Response error message)
Additional response data.

Response samples
200401404
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"id": 37532,
"title": "James Smith LLC",
"country_id": 7,
"country": "United States",
"city_id": 181,
"city": "New York",
"timezone_name": "America/New_York",
"address": "New York, 787 Jackson Drive",
"zip": 11435,
"coordinate_lat": "40.730610",
"coordinate_lon": "-73.935242",
"short_descr": "Beauty salon",
"social": {},
"site": "james-smith-company.com",
"business_type_id": 1,
"description": "The <strong>James Smith</strong> company",
"phone_confirmation": true,
"active_staff_count": 2,
"next_slot": "2023-03-23T10:10:00+0300",
"group_priority": 900,
"push_notification_phone_confirm": 1,
"main_group_id": 9206,
"main_group": {},
"groups": {},
"bookforms": [],
"online_sales_form_url": "https://o1.alteg.io",
"access": { }
},
"meta": { }
}
Change Company

put
/company/{id}/
Change company data

Authorizations:
(beareruser)
path Parameters
id
required
number
Example: 37532
Company ID

header Parameters
Accept
required
string
Must be application/vnd.api.v2+json

Content-Type
required
string
Must be application/json

Authorization
required
string
Bearer partner_token, User user_token

Request Body schema: application/json
title	
string
Company name

country_id	
number
Country ID (has higher priority then country)

country	
string
Country

city_id	
number
City ID (has higher priority then city)

city	
string
City

address	
string
Company address

zip	
string
Zip code

phones	
Array of strings
Company phone numbers

social	
object
Company social media

site	
string
Company website

coordinate_lat	
number <float>
Latitude

coordinate_lon	
number <float>
Longitude

description	
string <html>
Description

business_type_id	
number <int32>
Business type

short_descr	
string
Business category

Responses
200 OK
Response Schema: application/json
id	
number
Company ID

title	
string
Company name

country_id	
number
Country ID

country	
string
Country name

city_id	
number
City ID

city	
string
City name

timezone_name	
string
Timezone name

address	
string
Company address

zip	
number
Zip code

social	
object
Company social media

site	
string
Company website

coordinate_lat	
number <float>
Latitude

coordinate_lon	
number <float>
Longitude

description	
string <html>
Description

business_type_id	
number <int32>
Business type

short_descr	
string
Business category

phone_confirmation	
boolean
Do I need to confirm my phone number via SMS when booking?

group_priority	
integer <int32>
The higher the priority, the higher the company when displayed in the list of chain branches

push_notification_phone_confirm	
boolean
Confirm client number to send push notifications

access	
object
Access rights list

401 Unauthorized
Response Schema: application/json
errors	
object (Response error message)
Additional response data.

meta	
object (Response error message)
Additional response data.

404 Not Found
Response Schema: application/json
errors	
object (Response error message)
Additional response data.

meta	
object (Response error message)
Additional response data.

Request samples
Payload
Content type
application/json

Copy
Expand allCollapse all
{
"title": "James Smith LLC",
"country": "United States",
"city": "New York",
"address": "New York, 787 Jackson Drive",
"zip": 11435,
"phones": [
"12125357710",
"12125357711"
],
"social": {
"instagram": "instagram.com/james_smith_company/"
},
"site": "james-smith-company.com",
"coordinate_lat": "40.730610",
"coordinate_lon": "-73.935242",
"description": "The <strong>James Smith</strong> company",
"business_type_id": 1,
"short_descr": "Beauty salon"
}
Response samples
200401404
Content type
application/json

Copy
Expand allCollapse all
{
"id": 37532,
"title": "James Smith LLC",
"country_id": 7,
"country": "United States",
"city_id": 181,
"city": "New York",
"timezone_name": "Europe/Moscow",
"address": "New York, 787 Jackson Drive",
"zip": 11435,
"coordinate_lat": "40.730610",
"coordinate_lon": "-73.935242",
"short_descr": "Beauty salon",
"social": {
"facebook": "",
"instagram": "instagram.com/james_smith_company/",
"telegram": "",
"whatsapp": "",
"viber": ""
},
"site": "james-smith-company.com",
"business_type_id": 1,
"description": "The <strong>James Smith</strong> company",
"phone_confirmation": true,
"group_priority": 900,
"push_notification_phone_confirm": 1,
"access": { }
}
Delete company

delete
/company/{id}/
Delete a company.

Authorizations:
(beareruser)
path Parameters
id
required
number
Example: 37532
Company ID

header Parameters
Accept
required
string
Must be application/vnd.api.v2+json

Content-Type
required
string
Must be application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
202 Accepted
401 Unauthorized
Response Schema: application/json
errors	
object (Response error message)
Additional response data.

meta	
object (Response error message)
Additional response data.

404 Not Found
Response Schema: application/json
errors	
object (Response error message)
Additional response data.

meta	
object (Response error message)
Additional response data.

Response samples
401404
Content type
application/json

Copy
Expand allCollapse all
{
"errors": {
"code": 401,
"message": "Authentication needed"
},
"meta": {
"message": "Authentication needed."
}
}
Service category
Create a service category

post
/service_categories/{company_id}
Authorizations:
(beareruser)
header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Request Body schema: application/json
title	
string
Service category name

api_id	
string
External Category ID

weight	
number
Category weight (used to sort categories when displayed)

staff	
Array of numbers
List of IDs of employees providing services from the category

Responses
201 Created
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
object
Object with data

meta	
Array of objects
Metadata (empty array)

Request samples
Payload
Content type
application/json

Copy
Expand allCollapse all
{
"title": "Haircut very feminine",
"api_id": "adw322",
"weight": 111,
"staff": [
5006,
8901
]
}
Response samples
201
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"id": 3,
"title": "Haircut very feminine",
"api_id": "adw322",
"weight": 111,
"staff": []
},
"meta": [ ]
}
Get service category

get
/service_category/{company_id}/{id}
Authorizations:
bearer
path Parameters
company_id
required
number
Company ID

id
required
number
Service Category ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-type
required
string
application/json

Authorization
required
string
Bearer partner_token

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
Array of objects
Array of objects

meta	
object
Metadata (number of categories)

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"id": 3,
"salon_service_id": 15,
"title": "Haircuts for women",
"weight": 12,
"staff": []
},
"meta": [ ]
}
Change service category

put
/service_category/{company_id}/{id}
Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

id
required
number
Service Category ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Request Body schema: application/json
title	
string
Service category name

api_id	
string
External Category ID

weight	
number
Category weight (used to sort categories when displayed)

staff	
Array of numbers
List of IDs of employees providing services from the category

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
Array of objects
Array of objects

meta	
object
Metadata (number of categories)

Request samples
Payload
Content type
application/json

Copy
Expand allCollapse all
{
"title": "Haircut very feminine",
"api_id": "adw322",
"weight": 111,
"staff": [
5006,
8901
]
}
Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"id": 3,
"salon_service_id": 15,
"title": "Haircuts for women",
"weight": 15,
"staff": []
},
"meta": [ ]
}
Delete service category

delete
/service_category/{company_id}/{id}
Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

id
required
number
Service Category ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Conetnt-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
204 No Content
Get a list of chain service categories

get
/chain/{chain_id}/service_categories
Authorizations:
(beareruser)
path Parameters
chain_id
required
integer
Chain ID

query Parameters
include	
string
Value: "services"
Include additional resources in response

header Parameters
Accept
required
string
application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
200 OK
Response Schema: application/json
Array 
id	
integer <int32>
Service Category ID

title	
string
Service category name

services	
Array of objects (Root Type for ServiceTitle)
Services in the category (on request)

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
[
{
"id": 41,
"title": "Service category",
"services": []
}
]
Get a list of service categories

get
/company/{company_id}/service_categories/{id}
Options
company_id (required, number) - company ID
id (optional, number) - service category ID (to work with a specific category)
staff_id (optional, number) - employee ID (to get categories associated with an employee)
Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

id
required
number
Service Category ID

query Parameters
staff_id	
number
Employee ID (to get categories associated with an employee)

header Parameters
Accept
required
string
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
Array of objects
Array of objects

meta	
object
Metadata (number of categories)

403 Forbidden
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
string
is null

meta	
object
Metadata (error message)

404 Not Found
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
string
is null

meta	
object
Metadata (contains possible error messages)

Response samples
200403404
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": [
{},
{}
],
"meta": {
"total_count": 2
}
}
Deprecated. Get a list of service categories Deprecated

get
/service_categories/{company_id}/{id}
Get a list of service categories

Authorizations:
bearer
path Parameters
company_id
required
number
Company ID

id
required
number
Service category identifier

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
Array of objects
Array of objects

meta	
object
Metadata (number of categories)

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": [
{},
{}
],
"meta": [ ]
}
Services
Create a service

post
/services/{company_id}
Method to create a service

Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorizarion
required
string
Bearer partner_token, User user_token

Request Body schema: application/json
title	
string
Service name

category_id	
number
Service Category ID

price_min	
number <float>
The minimum cost of the service

price_max	
number <float>
Maximum cost of the service

duration	
number <float>
Service duration, default is 3600 seconds

discount	
number <float>
Service discount

comment	
string
Comment on the service

weight	
number
Service weight (used to sort services when displayed)

active	
number
Is the service available for online booking? 1 - available, 0 not available.

api_id	
string
External Service ID

staff	
Array of objects
Employees who provide the service, along with the duration of the service for each employee

Responses
201 Created
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
object
Object with data

meta	
Array of objects
Metadata (empty array)

Request samples
Payload
Content type
application/json

Copy
Expand allCollapse all
{
"title": "Men's haircut",
"category_id": 83167,
"price_min": 1300,
"price_max": 1300,
"duration": 3600,
"discount": 0,
"comment": "",
"weight": 6,
"active": 1,
"api_id": "00000000042",
"staff": [
{},
{},
{},
{},
{},
{},
{}
]
}
Response samples
201
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"id": 83169,
"title": "Men's haircut",
"category_id": 83167,
"price_min": 1300,
"price_max": 1300,
"duration": 3600,
"discount": 0,
"comment": "",
"weight": 6,
"active": 1,
"api_id": "00000000042",
"staff": []
},
"meta": [ ]
}
Get a list of services / specific service

get
/company/{company_id}/services/{service_id}
Parameter
company_id (required, number, 1) - company ID
service_id (optional, number, 1) - service ID
Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

service_id
required
number
Service ID, if you need to work with a specific service.

query Parameters
staff_id	
number
Employee ID, if you want to filter by employee

category_id	
number
Category ID, if you want to filter by category

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
Array of objects
Array of objects with data

meta	
object
Metadata (contains the number of services found)

403 Forbidden
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
string
is null

meta	
object
Metadata (error message)

404 Not Found
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
string
is null

meta	
object
Metadata (contains possible error messages)

Response samples
200403404
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": [
{},
{}
],
"meta": {
"total_count": 2
}
}
Change service

patch
/services/{company_id}/services/{service_id}
Method to change the service

Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

service_id
required
number
Service ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Request Body schema: application/json
title
required
string
Service name

booking_title
required
string
Service name for booking

category_id
required
number
ID service category

price_min
required
number <float>
Minimum cost of the service

price_max
required
number <float>
Maximum cost of the service

duration
required
number
Service duration, default value is 3600

discount	
number <float>
Service discount

comment	
string
Comment on the service

is_multi
required
boolean
false - Appointment, true - Event

tax_variant
required
number
Bill ID

vat_id
required
number
VAT ID

is_need_limit_date
required
boolean
The service is available for a limited time

seance_search_start
required
number
Start of period is the booking available, in seconds

seance_search_finish
required
number
End of period is the booking available, in seconds

step
required
number
Display interval of slots, in seconds

seance_search_step
required
number
Search interval of slots, in seconds

weight	
number
Service weight (used to sort services when displayed)

active	
number
1 - available for online recording, 0 - not available

api_id	
string
External Service ID

staff	
Array of objects
List of employees providing the service and session duration

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
object
meta	
Array of objects
Metadata (empty array)

Request samples
Payload
Content type
application/json

Copy
Expand allCollapse all
{
"title": "Men's haircut",
"booking_title": "Men's haircut",
"category_id": 83167,
"price_min": 1300,
"price_max": 1300,
"duration": 3600,
"discount": 0,
"tax_variant": 1,
"vat_id": 3,
"is_multi": false,
"is_need_limit_date": true,
"date_from": "2022-09-19",
"date_to": "2022-09-30",
"seance_search_start": 36000,
"seance_search_finish": 84600,
"step": 300,
"seance_search_step": 900,
"comment": "",
"weight": 6,
"active": 1,
"api_id": "00000000042",
"staff": [
{},
{},
{},
{},
{},
{},
{}
]
}
Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"booking_title": "Men's haircut",
"tax_variant": 0,
"vat_id": 2,
"print_title": "Men's haircut",
"service_type": 1,
"api_service_id": 0,
"repeat_visit_days_step": "null",
"seance_search_start": 1800,
"seance_search_finish": 84600,
"seance_search_step": 900,
"step": 300,
"is_need_limit_date": "true",
"date_from": "2022-09-19",
"date_to": "2022-09-30",
"schedule_template_type": 2,
"online_invoicing_status": 0,
"is_abonement_autopayment_enabled": 0,
"autopayment_before_visit_time": 0,
"abonement_restriction_value": 0,
"is_chain": "false",
"is_price_managed_only_in_chain": "false",
"is_comment_managed_only_in_chain": "false",
"price_prepaid_amount": 0,
"price_prepaid_percent": 100,
"id": 10832934,
"salon_service_id": 12192004,
"title": "Men's haircut",
"category_id": 10832928,
"price_min": 250,
"price_max": 1200,
"discount": 0,
"comment": "",
"weight": 0,
"active": 1,
"api_id": "0",
"prepaid": "forbidden",
"is_multi": "false",
"capacity": 0,
"image_group": [ ],
"staff": [],
"dates": [],
"duration": 3600,
"resources": [ ],
"is_online": true
},
"meta": [ ]
}
Deprecated. Get a list of services / specific service Deprecated

get
/services/{company_id}/{service_id}
Authorizations:
bearer
path Parameters
company_id
required
number
Company ID

service_id
required
number
Service ID, if you need to work with a specific service.

query Parameters
staff_id	
number
Employee ID, if you want to filter by employee

category_id	
number
Category ID, if you want to filter by category

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
Array of objects
Array of objects with data

meta	
object
Metadata (contains the number of services found)

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": [
{},
{}
],
"meta": [ ]
}
Deprecated. Change Service Deprecated

put
/services/{company_id}/{service_id}
Deprecated. Method to change the service

Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

service_id
required
number
Service ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Request Body schema: application/json
title	
string
Service name

category_id	
number
Service Category ID

price_min	
number <float>
The minimum cost of the service

price_max	
number <float>
Maximum cost of the service

duration	
number <float>
Service duration, default is 3600 seconds

discount	
number <float>
Service discount

comment	
string
Comment on the service

weight	
number
Service weight (used to sort services when displayed)

active	
number
Is the service available for online booking? 1 - available, 0 not available.

api_id	
string
External Service ID

staff	
Array of objects
Employees who provide the service, along with the duration of the service for each employee

Responses
201 Created
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
object
Object with data

meta	
Array of objects
Metadata (empty array)

Request samples
Payload
Content type
application/json

Copy
Expand allCollapse all
{
"title": "Men's haircut",
"category_id": 83167,
"price_min": 1300,
"price_max": 1300,
"duration": 3600,
"discount": 0,
"comment": "",
"weight": 6,
"active": 1,
"api_id": "00000000042",
"staff": [
{},
{},
{},
{},
{},
{},
{}
]
}
Response samples
201
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"id": 83169,
"title": "Men's haircut",
"category_id": 83167,
"price_min": 1300,
"price_max": 1300,
"duration": 3600,
"discount": 0,
"comment": "",
"weight": 6,
"active": 1,
"api_id": "00000000042",
"staff": []
},
"meta": [ ]
}
Delete a service

delete
/services/{company_id}/{service_id}
Method to remove a service

Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

service_id
required
number
Service ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
204 No Content
Linking an Employee to a Provided Service

post
/company/{company_id}/services/{service_id}/staff
Creates an employee service link with provided duration and bill of materials.

Authorizations:
BearerPartnerUser
path Parameters
company_id
required
number
Example: 123
ID of a company.

service_id
required
number
Example: 123
ID of service.

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
Should be equal to application/vnd.api.v2+json

Content-Type
required
string
Example: application/json
Should be equal to application/json

Request Body schema: application/json
master_id
required
number
ID of an employee who provides the service.

seance_length
required
number
Duration of service provision by the specified employee in seconds,
minimum 300 seconds (5 minutes), maximum 86100 seconds (23 hours 55 minutes).

technological_card_id
required
number or null
ID of bill of materials used while providing the service.

Responses
201 Created
Response Schema: application/json
success	
boolean (Successful response status)
Response status.

data	
object (Object of model "Service Staff")
meta	
object (Empty meta object)
Additional response data.

401 Unauthorized
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

403 Forbidden
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

404 Not Found
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Empty meta object)
Additional response data.

422 Unprocessable Entity
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Request validation error message)
Additional response data.

Request samples
Payload
Content type
application/json

Copy
{
"master_id": 123,
"seance_length": 3600,
"technological_card_id": 123
}
Response samples
201401403404422
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"service_id": 123,
"master_id": 123,
"length": 3600,
"technological_card_id": 123
},
"meta": { }
}
Updating Employee Service Link Settings

put
/company/{company_id}/services/{service_id}/staff/{master_id}
Updates an employee service link with provided duration and bill of materials.

Authorizations:
BearerPartnerUser
path Parameters
company_id
required
number
Example: 123
ID of a company.

service_id
required
number
Example: 123
ID of service.

master_id
required
number
Example: 123
ID of staff.

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
Should be equal to application/vnd.api.v2+json

Content-Type
required
string
Example: application/json
Should be equal to application/json

Request Body schema: application/json
seance_length
required
number
Duration of service provision by the specified employee in seconds,
minimum 300 seconds (5 minutes), maximum 86100 seconds (23 hours 55 minutes).

technological_card_id
required
number or null
ID of bill of materials used while providing the service.

Responses
200 OK
Response Schema: application/json
success	
boolean (Successful response status)
Response status.

data	
object (Object of model "Service Staff")
meta	
object (Empty meta object)
Additional response data.

401 Unauthorized
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

403 Forbidden
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

404 Not Found
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Empty meta object)
Additional response data.

422 Unprocessable Entity
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Request validation error message)
Additional response data.

Request samples
Payload
Content type
application/json

Copy
{
"seance_length": 3600,
"technological_card_id": 123
}
Response samples
200401403404422
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"service_id": 123,
"master_id": 123,
"length": 3600,
"technological_card_id": 123
},
"meta": { }
}
Deleting an Employee Service Link

delete
/company/{company_id}/services/{service_id}/staff/{master_id}
Deletes an employee service link.

Authorizations:
BearerPartnerUser
path Parameters
company_id
required
number
Example: 123
ID of a company.

service_id
required
number
Example: 123
ID of service.

master_id
required
number
Example: 123
ID of staff.

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
Should be equal to application/vnd.api.v2+json

Content-Type
required
string
Example: application/json
Should be equal to application/json

Responses
204 No Content
Response Schema: application/json
success	
boolean (Successful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Empty meta object)
Additional response data.

401 Unauthorized
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

403 Forbidden
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

404 Not Found
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Empty meta object)
Additional response data.

Response samples
204401403404
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": null,
"meta": { }
}
User
Get a list of rights

get
/user/permissions/{company_id}
Parameter
company_id (required, number, 1) - company ID
Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
object
Object with access rights categories

meta	
Array of objects
Metadata (empty array)

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"timetable": {},
"record_form": {},
"finances": {},
"clients": {},
"dashboard": {},
"notification": {},
"loyalty": {},
"storages": {},
"settings": {},
"other": {}
},
"meta": [ ]
}
Create and Send an Invitation

post
/user/invite/{salon_id}
An invitation to manage a location is sent via email or phone as a link. By following the link and completing registration, the user gains access to manage the location according to the permissions assigned. Permission assignment is performed in a separate request after the invitation is sent.

Authorizations:
BearerPartnerUser
path Parameters
company_id
required
number
Example: 123
ID of a company.

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
Should be equal to application/vnd.api.v2+json

Content-Type
required
string
Example: application/json
Should be equal to application/json

Request Body schema: application/json
invites
required
Array of objects
Array of invites

Responses
202 Accepted
Response Schema: application/json
success	
boolean
Send success status (true)

data	
string
Is null

meta	
object
Metadata (contains a message that the data has been saved)

401 Unauthorized
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

403 Forbidden
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

404 Not Found
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Empty meta object)
Additional response data.

422 Unprocessable Entity
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Request validation error message)
Additional response data.

Request samples
Payload
Content type
application/json

Copy
Expand allCollapse all
{
"invites": [
{}
]
}
Response samples
202401403404422
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"meta": {
"message": "Saved"
}
}
Clients
Get a list of clients

post
/company/{company_id}/clients/search
Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

header Parameters
Accept
required
string
application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Request Body schema: application/json
page	
number
Page number

page_size	
number
The number of output lines per page. Maximum 200. (Default 25)

fields	
Array of strings
Fields to be returned in the response

order_by	
string
Enum: "id" "name" "phone" "email" "discount" "first_visit_date" "last_visit_date" "sold_amount" "visit_count"
What field to sort by

order_by_direction	
string
Enum: "ASC" "DESC"
How to sort (ascending / descending)

operation	
string
Enum: "AND" "OR"
Type of transaction

filters	
Array of objects
Filters for searching by customers

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
Array of objects
Array of objects with data

meta	
object
Metadata (contains the number of clients found)

400 Bad Request
Response Schema: application/json
success	
boolean
Execution success status (false)

data	
string
Contains null

meta	
object
Metadata (contains an error message)

402 Payment Required
Response Schema: application/json
success	
boolean
Execution success status (false)

data	
string
Contains null

meta	
object
Metadata (contains an error message)

404 When a branch is specified not as an integer
Response Schema: application/json
success	
boolean
Execution success status (false)

meta	
object
Metadata (contains an error message)

Request samples
Payload
Content type
application/json

Copy
Expand allCollapse all
{
"page": 1,
"page_size": 3,
"fields": [
"id",
"name"
],
"order_by": "name",
"order_by_direction": "desc",
"operation": "AND",
"filters": [
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{},
{}
]
}
Response samples
200400402404
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": [
{},
{},
{}
],
"meta": {
"total_count": 908
}
}
Deprecated. Get a list of clients Deprecated

get
/clients/{company_id}
Parameter
company_id (required, number, 1) - company ID
page (number, 1) - Page number
count (number, 20) - Number of clients per page
Client filtering
fullname:Joh (optional, string) - Name (part of name) to filter clients
phone:7916 (optional, string) - Phone (part of the number) for filtering clients
email:test@ (optional, string) - Email (part) for client filtering
card:5663rt (optional, string) - Card (part) for filtering customers by loyalty card number
paid_min:100 (optional, number) - Minimum paid to the cashier, to filter customers by the amount of payments
paid_max:0 (optional, number) - Maximum paid to the cashier, to filter customers by the amount of payments
paid_max:0 (optional, number) - Maximum paid to the cashier, to filter customers by the amount of payments
id:66 (optional, number) - ID of one client for filtering clients
id[]: 66 (optional, array) - IDs of multiple clients to filter
changed_after: '2000-01-01T00:00:00' (optional, string) - Filtering clients changed/created since a specific date and time
changed_before: '2020-12-31T23:59:59' (optional, string) - Filtering clients changed/created before a specific date and time
Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

query Parameters
fullname	
string
Example: fullname=Joh
Name (part of the name) for client filtering

phone	
string
Example: phone=7916
Phone (part of the number) for customer filtering

email	
string
Example: email=test@
Email (part) for customer filtering

paid_min	
number
Example: paid_min=1
Minimum paid to the cashier, to filter customers by the amount of payments

paid_max	
number
Example: paid_max=1
Maximum paid to the cashier, to filter customers by the amount of payments

page	
number
Example: page=1
Page number

count	
number
Example: count=20
Number of customers per page

id	
number
Example: id=66
ID of one or more clients to filter clients

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
Array of objects
Array of objects with data

meta	
object
Metadata (contains the page number and number of clients per page)

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": [
{},
{}
],
"meta": {
"page": 1,
"total_count": 8
}
}
Adding a Client

post
/clients/{company_id}
Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Request Body schema: */*
name
required
string
Client name

surname	
string
Client surname

patronymic	
string
Client middle name

phone
required
string
Customer phone

email	
string
Client Email

sex_id	
number
Gender of the client (1 - male, 2 - female, 0 - unknown)

importance_id	
number
Client priority level (0 - none, 1 - bronze, 2 - silver, 3 - gold)

discount	
number
Customer Discount

card	
string
Client card number

birth_date	
string
Date of birth of the client in the format yyyy-mm-dd

comment	
string
A comment

spent	
number
How much money spent in the company at the time of adding

balance	
number
Client balance

sms_check	
number
1 - Happy Birthday by SMS, 0 - do not congratulate

sms_not	
number
1 - Exclude the client from SMS mailings, 0 - do not exclude

categories	
object
Array of customer category IDs

custom_fields	
object
Array of additional client fields as "api-key": "value" pairs

Responses
201 Created
Response samples
201
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"id": 1121412,
"name": "James",
"surname": "Smith",
"patronymic": "Martel",
"phone": 79211234567,
"email": "j.smith@example.com",
"categories": [ ],
"sex": "Male",
"sex_id": 1,
"discount": 15,
"importance_id": 1,
"importance": "Bronze",
"card": "555888666",
"birth_date": 952041600,
"comment": "throws show-off",
"sms_check": 0,
"sms_not": 0,
"spent": 1000,
"balance": -1200,
"visits": 0,
"last_change_date": "2020-05-01T12:00:00+0400",
"custom_fields": {}
},
"meta": [ ]
}
Bulk adding clients

post
/clients/{company_id}/bulk
Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Request Body schema: */*
name
required
string
Client name

surname	
string
Client surname

patronymic	
string
Client middle name

phone
required
string
Customer phone

email	
string
Client Email

sex_id	
number
Gender of the client (1 - male, 2 - female, 0 - unknown)

importance_id	
number
Client priority level (0 - none, 1 - bronze, 2 - silver, 3 - gold)

discount	
number
Customer Discount

card	
string
Client card number

birth_date	
string
Date of birth of the client in the format yyyy-mm-dd

comment	
string
A comment

spent	
number
How much money spent in the company at the time of adding

balance	
number
Client balance

sms_check	
number
1 - Happy Birthday by SMS, 0 - do not congratulate

sms_not	
number
1 - Exclude the client from SMS mailings, 0 - do not exclude

categories	
object
Array of customer category IDs

Responses
200 OK
Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"created": [],
"errors": []
},
"meta": [ ]
}
Sample Request to Get a List of Client Files

get
/company/{company_id}/clients/files/{client_id}
A list of uploaded client files can be retrieved by providing both the location ID and the client ID in the request. The client ID can be obtained from the client collection.

The response returns an array of client files.

Each client file has the following structure:

| Field | Type | Description | | -----------------| ------- | -------------------------------------------------- ------------------------ | | id | number | File ID | | client_id | number | Client ID | | name | string | Filename with extension | | description | string | File description | | extension | string | File name extension | | mime | string | MIME file type | | link | string | File download link | | date_create | string | File upload date in ISO8601 format | | size | string | Formatted file size string | | username | string | The name of the user who uploaded the file | | user_avatar | string | Avatar of the user who uploaded the file | | can_edit | boolean | Is there a right to change and delete the file? true - there is a right, false - there is no right |

Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

client_id
required
number
Client ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
Array of objects
Array of objects with data

meta	
object
Metadata (contains the number of files)

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": [
{},
{}
],
"meta": {
"count": 2
}
}
Delete request example

delete
/company/{company_id}/clients/files/{client_id}/{file_id}
Authorizations:
bearer
path Parameters
company_id
required
number
Company ID

client_id
required
number
Client ID

file_id
required
number
File ID

header Parameters
Accept	
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Responses
202 Accepted
Response samples
202
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"meta": {
"message": "Accepted"
}
}
Search by customer history

post
/company/{company_id}/clients/visits/search
Displays the client’s visit history.This method returns the client’s appointment and product purchase history, grouped by visit. Data is filtered based on visit status and paid status. The client is identified using either the client_id or client_phone parameter. All other parameters are optional. Results are sorted by visit date and paginated in batches of 25 items. If multiple visits share the same date as the last item on the page, they will be included on the current page to ensure complete grouping. To retrieve the next page, use the from and to values provided in the meta field of the current response.

Authorizations:
BearerPartnerUser
path Parameters
company_id
required
number
Example: 123
ID of a company.

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
Should be equal to application/vnd.api.v2+json

Content-Type
required
string
Example: application/json
Should be equal to application/json

Request Body schema: application/json
client_id
required
number or null
Client ID.

client_phone
required
string or null
Customer phone number.

from
required
string or null <date>
Period start date.

to
required
string or null <date>
Period end date.

payment_statuses
required
Array of strings
Items Enum: "not_paid" "paid_not_full" "paid_full" "paid_over"
Visit payment status:
not_paid - the visit is not paid, no payments were made for the visit;
paid_not_full - the visit is partially paid;
paid_full - the visit is paid in full, there is no overpayment;
paid_over - there is an overpayment for the visit.
If the filter by payment status is not required, then an empty array [] must be passed.

attendance
required
number or null
Enum: -1 0 1 2
Visit status:
-1: - the client did not come;
0: - waiting for the client;
1: - the client has arrived;
2: - the client has confirmed the appointment.

Responses
200 OK
Response Schema: application/json
success	
boolean (Successful response status)
Response status.

data	
object (Customer History Model Object)
Data on customer visits, including appointments and product sales.

meta	
object (An object of date-based pagination information.)
Page navigation information containing information about the current, next, and previous pages. The data is sorted and paginated by date in descending order.

401 Unauthorized
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

404 Not Found
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Empty meta object)
Additional response data.

422 Unprocessable Entity
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Request validation error message)
Additional response data.

Request samples
Payload
Content type
application/json

Copy
Expand allCollapse all
{
"client_id": 123,
"client_phone": "79998887766",
"from": "2022-01-31",
"to": "2022-02-01",
"payment_statuses": [
"not_paid"
],
"attendance": -1
}
Response samples
200401404422
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"goods_transactions": [],
"records": []
},
"meta": {
"dateCursor": {}
}
}
List of a comments for a client

get
/clients/{company_id}/clients/{client_id}/comments
Returns a list of a comments for a client and a files in a client details uploads history.

Authorizations:
BearerPartnerUser
path Parameters
company_id
required
number
Example: 123
ID of a company.

client_id
required
number
Example: 123
ID of a company client.

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
Should be equal to application/vnd.api.v2+json

Content-Type
required
string
Example: application/json
Should be equal to application/json

Responses
200 OK
Response Schema: application/json
success	
boolean (Successful response status)
Response status.

data	
Array of objects (Object of model "Comment for a client")
meta	
object (Meta object with response results count)
Additional response data.

401 Unauthorized
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

403 Forbidden
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

404 Not Found
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Empty meta object)
Additional response data.

Response samples
200401403404
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": [
{}
],
"meta": {
"count": 10
}
}
Add a comment for a client

post
/clients/{company_id}/clients/{client_id}/comments
Creates a new text comment for a client.

Authorizations:
BearerPartnerUser
path Parameters
company_id
required
number
Example: 123
ID of a company.

client_id
required
number
Example: 123
ID of a company client.

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
Should be equal to application/vnd.api.v2+json

Content-Type
required
string
Example: application/json
Should be equal to application/json

Request Body schema: application/json
text
required
string
Text of a comment for a client.

Responses
201 Created
Response Schema: application/json
success	
boolean (Successful response status)
Response status.

data	
object (Object of model "Comment for a client")
Data for an existing comment for a client.

meta	
object (Empty meta object)
Additional response data.

401 Unauthorized
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

403 Forbidden
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

404 Not Found
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Empty meta object)
Additional response data.

422 Unprocessable Entity
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Request validation error message)
Additional response data.

Request samples
Payload
Content type
application/json

Copy
{
"text": "Comment for a client"
}
Response samples
201401403404422
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"id": 123,
"create_date": "2023-01-01 12:12:12",
"update_date": "2023-01-01 12:12:12",
"type": "default",
"text": "Comment for a client",
"files": [ ],
"user": {}
},
"meta": { }
}
Delete a comment for a client

delete
/clients/{company_id}/clients/{client_id}/comments/{comment_id}
Deletes a comment for a client; does not delete files uploaded that triggered creation of a comment.

Authorizations:
BearerPartnerUser
path Parameters
company_id
required
number
Example: 123
ID of a company.

client_id
required
number
Example: 123
ID of a company client.

comment_id
required
number
Example: 123
ID of a comment for client.

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
Should be equal to application/vnd.api.v2+json

Content-Type
required
string
Example: application/json
Should be equal to application/json

Responses
204 No Content
Response Schema: application/json
success	
boolean (Successful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Empty meta object)
Additional response data.

401 Unauthorized
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

403 Forbidden
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

404 Not Found
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Empty meta object)
Additional response data.

Response samples
204401403404
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": null,
"meta": { }
}
Get a client

get
/client/{company_id}/{id}
Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

id
required
number
Client ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
200 OK
Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"id": 16,
"name": "James",
"surname": "Smith",
"patronymic": "Martel",
"phone": 79112345679,
"email": "",
"categories": [ ],
"sex": "unknown",
"discount": 0,
"importance": "No importance class",
"card": "",
"birth_date": 0,
"comment": "",
"sms_check": 0,
"sms_not": 0,
"spent": 0,
"balance": 0,
"visits": 3,
"last_change_date": "2020-03-01T12:00:00+0400",
"custom_fields": [ ]
},
"meta": [ ]
}
Edit client

put
/client/{company_id}/{id}
Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

id
required
number
Client ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Request Body schema: */*
name
required
string
Client name

surname	
string
Client surname

patronymic	
string
Client middle name

phone
required
string
Customer phone

email	
string
Client Email

sex_id	
number
Gender of the client (1 - male, 2 - female, 0 - unknown)

importance_id	
number
Client priority level (0 - none, 1 - bronze, 2 - silver, 3 - gold)

discount	
number
Customer Discount

card	
string
Client card number

birth_date	
string
Date of birth of the client in the format yyyy-mm-dd

comment	
string
A comment

spent	
number
How much money spent in the company at the time of adding

balance	
number
Client balance

sms_check	
number
1 - Happy Birthday by SMS, 0 - do not congratulate

sms_not	
number
1 - Exclude the client from SMS mailings, 0 - do not exclude

labels	
object
Array of customer category IDs

custom_fields	
object
Array of additional client fields as "api-key": "value" pairs

Responses
200 OK
Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"id": 1121412,
"name": "James",
"surname": "Smith",
"patronymic": "Martel",
"phone": 79211234567,
"email": "j.smith@example.com",
"categories": [ ],
"sex": "Male",
"sex_id": 1,
"discount": 15,
"importance_id": 1,
"importance": "Bronze",
"card": "555888666",
"birth_date": 952041600,
"comment": "throws show-off",
"sms_check": 0,
"sms_not": 0,
"spent": 1000,
"balance": -1200,
"visits": 0,
"last_change_date": "2020-06-01T12:00:00+0400",
"custom_fields": {}
},
"meta": [ ]
}
Delete client

delete
/client/{company_id}/{id}
Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

id
required
number
Client ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
204 No Content
Appointments
Get list of appointments

get
/records/{company_id}
Filtering Appointments
staff_id: Employee ID.
Use this to retrieve appointments for a specific employee

client_id: Client ID
Use this to retrieve appointments for a specific client

created_user_id: User ID
User who created the appointment

Use this to filter appointments created by a specific user

start_date: Session start date (inclusive)
Returns appointments with a session starting on or after this date

end_date: Session end date (inclusive)
Returns appointments with a session ending on or before this date

c_start_date: Appointment creation date from
Returns appointments created on or after this date

c_end_date: Appointment creation date until
Returns appointments created on or before this date

changed_after: Modified or created after this datetime
Returns appointments created or modified after the specified date and time

changed_before: Modified or created before this datetime
Returns appointments created or modified before the specified date and time

Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

query Parameters
page	
number
Example: page=1
Page number

count	
number
Example: count=50
Number of appointments per page

staff_id	
number
Example: staff_id=7572
Employee ID, if you only need appointments for a specific employee

client_id	
number
Example: client_id=572
Client ID. If you need appointments for a specific client

created_user_id	
number
Example: created_user_id=7572
The ID of the user who created the appointment. If you need appointments created by a specific user

start_date	
string
Example: start_date=2025-01-21
Session date starting at (filter by session date). If you need appointments for a session starting from a specific date

end_date	
string
Example: end_date=2025-01-21
Session date to. If you need appointments for a session before a specific date

c_start_date	
string
Example: c_start_date=2025-01-21
Appointment creation date starting from(filter by appointment creation date). If you need appointments created since a specific date

c_end_date	
string
Example: c_end_date=2025-01-21
Appointment creation date by (filter by appointment creation date).

changed_after	
string
Example: changed_after=2025-01-21T23:00:00
The date the appointment was modified/created. If you need appointments created/modified starting from a specific date and time

changed_before	
string
Example: changed_before=2025-01-21T23:00:00
The date the appointment was modified/created. If you need appointments created/modified before a specific date and time

include_consumables	
number
Example: include_consumables=0
Flag for including a list of consumables by appointments in the response

include_finance_transactions	
number
Example: include_finance_transactions=0
Flag to include in the response financial transactions by appointments

with_deleted	
boolean
Include deleted appointments in output (with_deleted=1 will return deleted appointments as well)

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
Array of objects
Array of objects with data

meta	
object
Metadata (contains the page number and the number of entries per page)

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": [
{},
{}
],
"meta": {
"page": 1,
"total_count": 10
}
}
Entries
Create a New Appointment

post
/records/{company_id}
When creating an appointment for a group event, the event_id parameter becomes mandatory. In this case, the following parameters become optional:

staff_id
services
datetime
session_length
Additional fields You can pass custom values using additional fields created specifically for your company (see the "Additional Fields" section for setup details). Once created, these fields can be included in the custom_fields object when creating an appointment. Each key in this object must match the code of the corresponding additional field. Example:

If your company has the following additional fields: my_custom_field with type="number" some_another_field with type="list"

You can pass their values during appointment creation as follows: custom_fields:

{ "my_custom_field": 123, "some_another_field": ["first value", "second value"] }

When this appointment is later retrieved using the GET method, the same custom field values will be returned in the response.
Authorizations:
(beareruser)
path Parameters
company_id
required
number
Example: 24699
Company ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Request Body schema: application/json
staff_id	
number
Employee ID

services	
Array of objects
Service parameters (id, cost, discount)

client	
object
Client parameters (phone, name, email)

save_if_busy	
boolean
Whether to keep the appointment if the time is busy or non-working, or give an error

datetime	
string <date-time>
Date and time of appointment

seance_length	
number
Appointment duration in seconds

send_sms	
boolean
Whether to send SMS with the details of the appointment to the client

comment	
string
Appointment Comment

sms_remain_hours	
number
Specifies how many hours before the visit an SMS reminder should be sent to the client. Set to 0 if no reminder is needed.

email_remain_hours	
number
Specifies how many hours before the visit an email reminder should be sent to the client. Set to 0 if no reminder is needed.

attendance	
number
Appointment status (2 - User confirmed the appointment, 1 - User came, services provided, 0 - user waiting, -1 - user did not show)

api_id	
string
External system ID

custom_color	
string
Appointment color

record_labels	
Array of strings
Array of post category IDs

custom_fields	
object
Additional appointment fields

Responses
201 Created
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
Array of objects
Array of objects with data

meta	
object
Metadata (contains the page number and the number of entries per page)

Request samples
Payload
Content type
application/json

Copy
Expand allCollapse all
{
"staff_id": 8886,
"services": [
{},
{}
],
"client": {
"phone": "+1-315-555-0175",
"name": "James Smith",
"email": "j.smith@example.com"
},
"save_if_busy": false,
"datetime": "2025-09-21T23:00:00.000+03:00",
"seance_length": 3600,
"send_sms": true,
"comment": "test entry!",
"sms_remain_hours": 6,
"email_remain_hours": 24,
"attendance": 1,
"api_id": "777",
"custom_color": "f44336",
"record_labels": [
"67345",
"104474"
],
"custom_fields": {
"my_custom_field": 123,
"some_another_field": []
}
}
Response samples
201
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": [
{},
{}
],
"meta": {
"page": 1,
"total_count": 10
}
}
Get a List of Partner Appointments

get
/records/partner/
Filtering appointments
salon_id: Location ID
Use this to filter appointments for a specific location

start_date: Visit date from
Filters appointments with a visit date starting from the specified date (inclusive)

end_date: Visit date until
Filters appointments with a visit date up to the specified date (inclusive)

created_start_date: Appointment creation date from
Filters appointments created on or after this date

created_end_date: Appointment creation date until
Returns appointments created on or before this date

user_id: User ID
Filters appointments created by a specific user

Authorizations:
(beareruser)
query Parameters
page	
number
Example: page=1
Page number

editable_length	
number
Example: editable_length=50
Number of appointments per page, maximum 100

salon_id	
number
Example: salon_id=1
Location ID

start_date	
string
Example: start_date='17.01.2025'
Filter by visit date from

end_date	
string
Example: end_date='17.01.2025'
Filter by visit date by

created_start_date	
string
Example: created_start_date='17.01.2025'
Filter by appointment creation date from

created_end_date	
string
Example: created_end_date='17.01.2025'
Filter by appointment creation date by

user_id	
number
Example: user_id=1
User ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
200 OK
Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": [
{}
],
"meta": {
"count": 1
}
}
Get an Appointment

get
/record/{company_id}/{record_id}
Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

record_id
required
number
Appointment ID

query Parameters
include_consumables	
number
Example: include_consumables=0
include_finance_transactions	
number
Example: include_finance_transactions=0
header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
object
Object with data

meta	
Array of objects
Metadata (empty array)

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"id": 2,
"company_id": 4564,
"staff_id": 9,
"services": [],
"goods_transactions": [ ],
"staff": {},
"client": {},
"clients_count": 1,
"date": "2025-09-21T23:00:00.000+03:00",
"datetime": "2025-09-21T23:00:00.000+03:00",
"create_date": "2019-01-17T19:41:44+0900",
"comment": "do not write down",
"visit_attendance": 0,
"attendance": 0,
"confirmed": 1,
"seance_length": 3600,
"length": 3600,
"sms_before": 0,
"sms_now": 0,
"sms_now_text": "",
"email_now": 0,
"notified": 0,
"master_request": 0,
"api_id": "",
"from_url": "",
"review_requested": 0,
"visit_id": "8263004",
"created_user_id": 1073232,
"deleted": false,
"paid_full": 0,
"prepaid": false,
"prepaid_confirmed": false,
"last_change_date": "2019-01-17T19:44:14+0900",
"custom_color": "f44336",
"custom_font_color": "#ffffff",
"record_labels": [],
"activity_id": 0,
"custom_fields": [ ],
"documents": [],
"sms_remain_hours": 5,
"email_remain_hours": 1,
"bookform_id": 0,
"record_from": "",
"is_mobile": 0,
"is_sale_bill_printed": false,
"consumables": [],
"finance_transactions": []
},
"meta": [ ]
}
Edit Appointment

put
/record/{company_id}/{record_id}
When an appointment is changed in a group event, the event_id parameter becomes required, staff_id, services, datetime, session_length parameters become optional

Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

record_id
required
number
Appointment ID

query Parameters
include_consumables	
number
Example: include_consumables=0
include_finance_transactions	
number
Example: include_finance_transactions=0
header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Request Body schema: application/json
staff_id	
number
Employee ID

services	
Array of objects
Service parameters (id, cost, discount)

client	
object
Client parameters (phone, name, email)

save_if_busy	
boolean
Whether to keep the appointment if the time is busy or non-working, or give an error

datetime	
string <date-time>
Date and time of appointment

seance_length	
number
Appointment duration in seconds

send_sms	
boolean
Whether to send SMS with the details of the appointment to the client

comment	
string
Appointment Comment

sms_remain_hours	
number
Specifies how many hours before the visit an SMS reminder should be sent to the client. Set to 0 if no reminder is needed.

email_remain_hours	
number
Specifies how many hours before the visit an email reminder should be sent to the client. Set to 0 if no reminder is needed.

attendance	
number
Appointment status (2 - User confirmed the appointment, 1 - User came, services provided, 0 - user waiting, -1 - user did not show)

api_id	
string
External system ID

custom_color	
string
Appointment color

record_labels	
Array of strings
Array of post category IDs

custom_fields	
object
Additional appointment fields

Responses
201 Created
Response Schema: application/json
success	
boolean
Success status (true)

data	
object
Object with data

meta	
Array of objects
Metadata (empty array)

Request samples
Payload
Content type
application/json

Copy
Expand allCollapse all
{
"staff_id": 8886,
"services": [
{},
{}
],
"client": {
"phone": "+1-315-555-0175",
"name": "James Smith",
"email": "j.smith@example.com"
},
"save_if_busy": false,
"datetime": "2025-09-21T23:00:00.000+03:00",
"seance_length": 3600,
"send_sms": true,
"comment": "test entry!",
"sms_remain_hours": 6,
"email_remain_hours": 24,
"attendance": 1,
"api_id": "777",
"custom_color": "f44336",
"record_labels": [
"67345",
"104474"
],
"custom_fields": {
"my_custom_field": 123,
"some_another_field": []
}
}
Response samples
201
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"id": 999,
"services": [],
"client": {},
"clients_count": 1,
"staff": {},
"datetime": "2025-09-21T23:00:00.000+03:00",
"seance_length": 3600,
"create_date": "2025-09-21T23:00:00.000+03:00",
"comment": "test entry!",
"visit_attendance": 1,
"confirmed": 1,
"sms_before": 6,
"sms_now": 1,
"sms_now_text": "",
"email_now": 1,
"notified": 0,
"master_request": 1,
"api_id": "",
"from_url": "",
"review_requested": 0,
"activity_id": 0,
"documents": []
},
"meta": [ ]
}
Delete Appointment

delete
/record/{company_id}/{record_id}
Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

record_id
required
number
Appointment ID

query Parameters
include_consumables	
number
Example: include_consumables=0
include_finance_transactions	
number
Example: include_finance_transactions=0
header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
204 No Content
Visits
Get a visit

get
/visits/{visit_id}
Authorizations:
(beareruser)
path Parameters
visit_id
required
number
Example: Visit ID
header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
object
Object with data

meta	
Array of objects
Metadata (empty array)

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"attendance": 1,
"datetime": "2025-09-21T23:00:00.000+03:00",
"comment": 0,
"records": []
},
"meta": [ ]
}
Get Visit Details

get
/visit/details/{salon_id}/{record_id}/{visit_id}
Block "kkm_transaction_details_container"

Flag "last_operation_type"

Meaning	Description
0	Print return receipt
1	Print sales receipt
Types of all transactions with cash register

Meaning	Description
0	Sales operation – Active for documents of type Visit
1	Sale return operation – Active for documents of type Visit
2	Correction operation
4	Shift opening operation – Opens a new POS shift
5	Shift closing operation – Closes the current POS shift
9	Get POS status – Retrieves the current status of the POS device
11	Get POS team status – Retrieves the status of all POS devices connected to the team
12	Correction operation
13	Print X-report – Prints a non-fiscal summary report of the current shift
6	Cash deposit – Registers a cash-in transaction in the POS
7	Cash withdrawal – Registers a cash-out transaction in the POS
Statuses of All POS Operations

Meaning	Description
0	Connection error with POS – Unable to establish a connection with the POS device
1	Success – Operation completed successfully
2	Sent for printing – The request has been sent to the POS and is waiting for print completion
3	Runtime error – An error occurred while processing the operation on the POS device
4	Status check error – Failed to retrieve the current status of the POS
5	Waiting for POS readiness – Operation is pending until the POS device becomes ready
Document Types

Meaning	Description
1	Sale of products
2	Provision of services
3	Arrival of products
4	Products write-off
5	Transfer of products
6	Inventory
7	Visit
8	Consumables write-off
Authorizations:
(beareruser)
path Parameters
salon_id
required
number
Example: Location ID
record_id
required
number
Example: Appointment ID
visit_id
required
number
Example: Visit ID
header Parameters
Accept
required
string
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer access_token, User user_token

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
object
Object with data

meta	
Array of objects
Metadata (empty array)

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"payment_transactions": [],
"loyalty_transactions": [],
"kkm_transaction_details_container": {},
"items": []
},
"meta": [ ]
}
Edit Visit

put
/visits/{visit_id}/{record_id}
Authorizations:
(beareruser)
path Parameters
visit_id
required
number
Example: Visit ID
record_id
required
number
Example: Appointment ID
header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Request Body schema: */*
attendance
required
number
Visit status (2 - The user confirmed the appointment, 1 - The user came, the services were provided, 0 - the user is waiting, -1 - the user did not show)

comment
required
string
A comment

new_transactions	
Array of objects
Array of objects of new commodity transactions

deleted_transaction_ids	
Array of objects
Array of instance IDs

goods_transactions	
Array of objects
Array of commodity transactions objects

services	
Array of objects
Array of objects with services

fast_payment	
number
Quick payment 1 - cash, 2 - cashless, 129 - cash and print, 130 - cashless and print

Responses
200 OK
Check PDF for the visit

get
/attendance/receipt_print/{visit_id}
Authorizations:
(beareruser)
path Parameters
visit_id
required
number
Example: Visit ID
header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
200 OK
Response samples
200
Content type
application/pdf

Copy
Group events
Create a group event

post
/activity/{company_id}
Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Request Body schema: application/json
date
required
string <date-time>
date and time

service_id
required
number
Service ID

staff_id
required
number
Employee ID

capacity
required
number
Capacity

resource_instance_ids	
Array of numbers
Array of resource instance IDs

force
required
boolean
Ignore errors (busy master/resources, etc.)

length	
number
Event duration in seconds

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
object
Object with data

meta	
Array of objects
Metadata (empty array)

Request samples
Payload
Content type
application/json

Copy
Expand allCollapse all
{
"date": "2017-10-10 15:30",
"service_id": 1185299,
"staff_id": 26427,
"length": 3600,
"capacity": 9,
"resource_instance_ids": [
3127
],
"force": false
}
Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"id": 108,
"salon_id": 4564,
"service_id": 1185299,
"staff_id": 26427,
"date": "2025-09-21T23:00:00.000+03:00",
"length": 3600,
"capacity": 9,
"records_count": 0,
"color": "",
"font_color": "",
"service": {},
"staff": {},
"resource_instances": []
},
"meta": [ ]
}
Reading a Group Event

get
/activity/{company_id}/{activity_id}
Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

activity_id
required
number
group event ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
object
Object with data

meta	
Array of objects
Metadata (empty array)

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"id": 108,
"salon_id": 4564,
"service_id": 1185299,
"staff_id": 26427,
"date": "2025-09-21T23:00:00.000+03:00",
"length": 3600,
"capacity": 9,
"records_count": 0,
"color": "",
"font_color": "",
"service": {},
"staff": {},
"resource_instances": []
},
"meta": [ ]
}
Group event update

put
/activity/{company_id}/{activity_id}
Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

activity_id
required
number
Group Event ID

header Parameters
Accept
required
string
application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Request Body schema: application/json
date
required
string <date-time>
date and time

service_id
required
number
Service ID

staff_id
required
number
Employee ID

capacity
required
number
Capacity

resource_instance_ids	
Array of numbers
Array of resource instance IDs

force
required
boolean
Ignore errors (busy master/resources, etc.)

length	
number
Event duration in seconds

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
object
Object with data

meta	
Array of objects
Metadata (empty array)

Request samples
Payload
Content type
application/json

Copy
Expand allCollapse all
{
"date": "2017-10-10 15:30",
"service_id": 1185299,
"staff_id": 26427,
"length": 3600,
"capacity": 9,
"resource_instance_ids": [
3127
],
"force": false
}
Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"id": 108,
"salon_id": 4564,
"service_id": 1185299,
"staff_id": 26427,
"date": "2025-09-21T23:00:00.000+03:00",
"length": 3600,
"capacity": 9,
"records_count": 0,
"color": "",
"font_color": "",
"service": {},
"staff": {},
"resource_instances": []
},
"meta": [ ]
}
Deleting a Group Event

delete
/activity/{company_id}/{activity_id}
Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

activity_id
required
number
group event ID

header Parameters
Accept
required
string
application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
202 Accepted
Response samples
202
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"meta": {
"message": "Accepted"
}
}
Group events search filters

get
/activity/{company_id}/filters/
Authorizations:
BearerPartner
path Parameters
company_id
required
number
Example: 123
ID of a company.

query Parameters
service_ids	
Array of integers
Example: service_ids=123
Filter by services IDs.

staff_ids	
Array of integers
Example: staff_ids=456
Filter by staff IDs.

resource_ids	
Array of integers
Example: resource_ids=789
Filter by resources IDs.

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
Should be equal to application/vnd.api.v2+json

Content-Type
required
string
Example: application/json
Should be equal to application/json

Responses
200 OK
Response Schema: application/json
success	
boolean (Successful response status)
Response status.

data	
Array of objects (Object "Group events search filter")
meta	
object (Meta object with response results count)
Additional response data.

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": [
{},
{},
{},
{}
],
"meta": {
"count": 4
}
}
Finding dates range for group events

get
/activity/{company_id}/search_dates_range/
Authorizations:
BearerPartner
path Parameters
company_id
required
number
Example: 123
ID of a company.

query Parameters
service_ids	
Array of integers
Example: service_ids=123
Filter by services IDs.

staff_ids	
Array of integers
Example: staff_ids=456
Filter by staff IDs.

resource_ids	
Array of integers
Example: resource_ids=789
Filter by resources IDs.

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
Should be equal to application/vnd.api.v2+json

Content-Type
required
string
Example: application/json
Should be equal to application/json

Responses
200 OK
Response Schema: application/json
success	
boolean (Successful response status)
Response status.

data	
object (Object "Dates range for group events search")
Dates range for group events search.

meta	
object (Empty meta object)
Additional response data.

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"min_date": "2023-06-01",
"max_date": "2023-07-15"
},
"meta": [ ]
}
Finding dates for group events

get
/activity/{company_id}/search_dates/
Authorizations:
BearerPartner
path Parameters
company_id
required
number
Example: 123
ID of a company.

query Parameters
from
required
string
Example: from=2023-06-01
Search start date (YYYY-MM-DD format).

till
required
string
Example: till=2023-07-15
Search end date (YYYY-MM-DD format).

service_ids	
Array of integers
Example: service_ids=123
Filter by services IDs.

staff_ids	
Array of integers
Example: staff_ids=456
Filter by staff IDs.

resource_ids	
Array of integers
Example: resource_ids=789
Filter by resources IDs.

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
Should be equal to application/vnd.api.v2+json

Content-Type
required
string
Example: application/json
Should be equal to application/json

Responses
200 OK
Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": [
"2023-06-01",
"2023-06-02",
"2023-06-08",
"2023-07-04",
"2023-07-15"
],
"meta": [ ]
}
Group Event Search

get
/activity/{company_id}/search/
Authorizations:
BearerPartner
path Parameters
company_id
required
number
Example: 123
ID of a company.

query Parameters
from
required
string
Example: from=2023-06-01
Search start date (YYYY-MM-DD format).

till
required
string
Example: till=2023-07-15
Search end date (YYYY-MM-DD format).

service_ids	
Array of integers
Example: service_ids=123
Filter by services IDs.

staff_ids	
Array of integers
Example: staff_ids=456
Filter by staff IDs.

resource_ids	
Array of integers
Example: resource_ids=789
Filter by resources IDs.

page	
number
Example: page=1
Page number (default 1).

count	
number
Example: count=25
Page size (default 25).

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
Should be equal to application/vnd.api.v2+json

Content-Type
required
string
Example: application/json
Should be equal to application/json

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
Array of objects
Array of objects with data

meta	
object
Metadata (contains the number of events found)

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": [
{}
],
"meta": {
"count": 1
}
}
Search for group services

get
/activity/{company_id}/services?staff_id=1&term=test
Authorizations:
(beareruser)
path Parameters
company_id
required
number
Example: 4564
Company ID

query Parameters
staff_id	
number
Employee ID to filter

term	
string
Search by name or part of the service name

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Request Body schema: application/json
staff_id	
number
Employee ID to filter

term	
string
Search by name or part of the service name

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
Array of objects
Array of objects with data

meta	
object
Metadata (contains the number of services found)

Request samples
Payload
Content type
application/json

Copy
{
"staff_id": 1,
"term": "test"
}
Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": [
{}
],
"meta": {
"count": 1
}
}
Getting Duplication Strategies for Group Events

get
/activity/{company_id}/duplication_strategy
Duplication of events occurs based on a set of parameters combined in the "duplication strategy" entity

Field	Type	Description
title	string	Strategy name
repeat_mode_id	integer	Repeat mode
days	integer[]	List of days of the week: 0 Sun, 6 Fri
interval	integer	Break in searching for dates, in units of type
content_type	integer	Duplicate appointments? 1 - no, 2 - yes
The repeat mode can take the values

Meaning	Description	Break unit
1	Daily	Day
2	Weekdays	-
3	Mon Wed Fri	-
4	Tue Thu	-
5	Every week	Week
6	Every month	Month
7	Every year	Year
The days field is relevant only for mode 5 - week, for specifying specific days of repetition If you specify repeat_mode = 5, days = [1,4], interval = 2, then the event will be repeat every 3rd week on mon and thurs

Authorizations:
(beareruser)
path Parameters
company_id
required
number
Example: 4564
Company ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
200 OK
Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": [
{}
],
"meta": {
"count": 1
}
}
Create a Duplicate Group Event Template

post
/activity/{company_id}/duplication_strategy
Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Request Body schema: */*
title
required
string
Name

days	
Array of objects
Recurrence Days for Weekly Mode

repeat_mode_id
required
number
Repeat Mode

interval	
number
Break in searching for dates

content_type	
number
Duplicate appointments? 1 - no, 2 - yes

Responses
200 OK
Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"id": 3,
"company_id": 4564,
"title": "Test duplication strategy",
"repeat_mode_id": 5,
"repeat_mode": {},
"days": [],
"interval": 2,
"content_type": 1
},
"meta": [ ]
}
Group Event Duplicate Template Update

post
/activity/{company_id}/duplication_strategy/{strategy_id}
Authorizations:
(beareruser)
path Parameters
company_id
required
number
Example: 4564
Company ID

strategy_id
required
number
Example: 3
Replication strategy ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Request Body schema: */*
title
required
string
Name

days	
Array of objects
Recurrence Days for Weekly Mode

repeat_mode_id
required
number
Repeat Mode

interval	
number
Break in searching for dates

content_type	
number
Duplicate appointments? 1 - no, 2 - yes

Responses
200 OK
Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"id": 3,
"company_id": 4564,
"title": "New test duplication strategy",
"repeat_mode_id": 5,
"repeat_mode": {},
"days": [],
"interval": 3,
"content_type": 1
},
"meta": [ ]
}
Group Event Duplicate Request

post
/activity/{company_id}/{activity_id}/duplicate/
A request for duplication can be made in 3 ways:

Specifying a list of dates and times to duplicate

Specifying the id of the repetition strategy

By specifying all repetition parameters

Authorizations:
(beareruser)
path Parameters
company_id
required
number
Example: 1
activity_id
required
number
Example: 2
header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Request Body schema: application/json
object
Responses
200 OK
409 Conflict
Request samples
Payload
Content type
application/json

Copy
{ }
Response samples
200409
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": [
{}
],
"meta": {
"count": 2
}
}
Dates in the Appointment Calendar
Get a list of dates for Appointment Calendar

get
/timetable/dates/{company_id}/{date}
The Appointment Calendar dates are returned as an array of date strings, for example: ["2015-10-26", "2015-10-30"]. To retrieve this list, you must provide a reference date. The response will return the available working dates of the specified location or employee relative to that date

Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

date
required
string
date in iso8601 format. Filter by booking date (eg '2015-09-30')

query Parameters
staff_id	
number
Employee ID.

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
200 OK
Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": [
"2025-09-21T23:00:00.000+03:00",
"2025-09-21T23:00:00.000+03:00",
"2025-09-21T23:00:00.000+03:00",
"2025-09-21T23:00:00.000+03:00",
"2025-09-21T23:00:00.000+03:00",
"2025-09-21T23:00:00.000+03:00",
"2025-09-21T23:00:00.000+03:00"
],
"meta": [ ]
}
Comments
Get comments

get
/comments/{company_id}/
The comment object has the following fields:

Field	Type	Description
id	number	Comment ID
salon_id	number	Company ID
type	number	1 - comment to the specialist, 0 - to the salon
master_id	number	Specialist ID if type = 1
text	string	Comment text
date	string	Date when the comment was left
rating	number	Rating (from 1 to 5)
user_id	number	Id of the user who left the comment
username	string	Name of the user who left the comment
user_avatar	string	Avatar of the user who left the comment
record_id	number	ID of the post after which the review was left (the value will be non-zero if the review was left through a link asking for a review after the visit)
Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

query Parameters
start_date	
string
date in iso8601 format. Filter by date since (for example '2015-09-30')

end_date	
string
date in iso8601 format. Filter by date by (for example '2015-09-30')

staff_id	
number
Employee ID

rating	
number
Rating score. Filter by reviews with a specific rating.

page	
number
Page number

count	
number
Number of reviews per page

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
Array of objects
Array of objects with data

meta	
Array of objects
Metadata (empty array)

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": [
{}
],
"meta": [ ]
}
Leave a Comment

post
/comments/{company_id}/{staff_id}
Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

staff_id
required
number
Employee ID, specify when creating a review for an employee

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Request Body schema: application/json
mark
required
number
Rating from 1 to 5

text
required
string
Feedback text

name
required
string
Username to be displayed on the review page

Responses
201 Created
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
Array of objects
Array of objects with data

meta	
Array of objects
Metadata (empty array)

Request samples
Payload
Content type
application/json

Copy
{
"mark": "4",
"text": "Everything is very bad!",
"name": "Victor"
}
Response samples
201
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"type": "1",
"master_id": "8864",
"id": "18437",
"text": "Everything is very bad!",
"date": "2025-09-21T23:00:00.000+03:00",
"rating": "4",
"user_id": "157169",
"user_name": "Victor",
"user_avatar": "/images/no-master.png"
},
"meta": [ ]
}
Company users
Deprecated. Get company users Deprecated

get
/company_users/{company_id}
Company User object

Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
Array of objects
Array of objects with data

meta	
Array of objects
Metadata (empty array)

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": [
{},
{}
],
"meta": [ ]
}
Get company users

get
/company/{company_id}/users
The method allows you to get users of the company.
Company User object:

Attribute	Type	Description
id	number	User ID
name	string	User name
phone	string	User phone
email	string	User email
information	string	User information
is_approved	boolean	Whether the user accepted the invitation to manage the company
is_non_deletable	boolean	Whether the user is non-deletable
Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

query Parameters
filter[is_approved]	
number
Example: filter[is_approved]=1
Whether the user accepted the invitation to manage the company. 1 - accepted, 0 - not accepted

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
200 OK
Response Schema: application/json
success	
boolean
Response status.

data	
Array of objects
Response data.

meta	
object
Additional response data.

401 Unauthorized
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

403 Forbidden
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

404 Not Found
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Empty meta object)
Additional response data.

Response samples
200401403404
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": [
{},
{}
],
"meta": {
"count": 2
}
}
Remove the user from the company

delete
/company/{company_id}/users/{user_id}
Authorizations:
BearerPartnerUser
path Parameters
company_id
required
number
Example: 123
ID of a company.

user_id
required
number
User ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
Should be equal to application/vnd.api.v2+json

Content-Type
required
string
Example: application/json
Should be equal to application/json

Responses
204 No Content
401 Unauthorized
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

403 Forbidden
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

404 Not Found
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Empty meta object)
Additional response data.

Response samples
401403404
Content type
application/json

Copy
Expand allCollapse all
{
"success": false,
"data": null,
"meta": {
"message": "Authentication needed."
}
}
Checkout
Get company cash registers

get
/accounts/{company_id}
The company checkout object has the following fields:

Field	Type	Description
id	number	Checkout ID
title	string	Title
type	number	1 - for non-cash payments, 0 for cash
comment	string	Description to the checkout
Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
Array of objects
Array of objects with data

meta	
Array of objects
Metadata (empty array)

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": [
{},
{},
{}
],
"meta": [ ]
}
Inventories
Get company inventories

get
/storages/{company_id}
The company inventory object has the following fields:

Field	Type	Description
id	number	Inventory ID
title	string	Title
for_services	number	1 - if used for automatic write-off of consumables
for_sale	number	1 - if the default inventory for selling products
comment	string	Description of the inventory
Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
Array of objects
Array of objects with data

meta	
Array of objects
Metadata (empty array)

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": [
{},
{},
{}
],
"meta": [ ]
}
SMS mailing
Send SMS to the list of clients

post
/sms/clients/by_id/{company_id}
The object for creating SMS mailing has the following fields:

Field	Type	Description
client_ids	array of numbers	Array of client IDs
text	string	SMS text message
Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Request Body schema: application/json
client_ids	
Array of numbers
Array of client IDs

text	
string
SMS text message

Responses
201 Created
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
string
Is null

meta	
object
An object containing a 201 status code message

Request samples
Payload
Content type
application/json

Copy
Expand allCollapse all
{
"client_ids": [
1,
2,
3,
4,
5
],
"text": "Dear clients, we congratulate you on being our clients! You are very lucky!"
}
Response samples
201
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"meta": {
"message": "Accepted"
}
}
Send SMS campaigns to customers matching the filters

post
/sms/clients/by_filter/{company_id}
The object for creating SMS mailing has the following fields:

Field	Type	Description
text	string	SMS text message
Client filtering
fullname:'Joh' (optional, string) - Name (part of name) to filter clients
phone:'7916' (optional, string) - Phone (part of the number) to filter clients
email:'test@' (optional, string) - Email (part) for client filtering
card:'5663rt' (optional, string) - Card (part) to filter customers by loyalty card number
Attention: If there are no filters, SMS mailing will go to the entire database!

Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

query Parameters
fullname	
string
Example: fullname='Joh'
Name (part of the name) for client filtering

phone	
string
Example: phone='7916'
Phone (part of the number) for customer filtering

email	
string
Example: email='test@'
Email (part) for customer filtering

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Request Body schema: application/json
text	
string
SMS text message

Responses
201 Created
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
string
Is null

meta	
object
An object containing a 201 status code message

Request samples
Payload
Content type
application/json

Copy
{
"text": "Dear clients, we congratulate you on being our clients! You are very lucky!"
}
Response samples
201
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"meta": {
"message": "Accepted"
}
}
Email newsletter
Send Email newsletter according to the list of clients

post
/email/clients/by_id/{company_id}
The object for creating an Email campaign has the following fields:

Field	Type	Description
client_ids	array of numbers	Array of client IDs
text	string	Text Email Message
subject	string	Email Subject
Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Request Body schema: application/json
client_ids
required
Array of numbers
Array of client IDs

subject
required
string
Email Subject

text
required
string
Email text

Responses
201 Created
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
string
Is null

meta	
object
An object containing a 201 status code message

Request samples
Payload
Content type
application/json

Copy
Expand allCollapse all
{
"client_ids": [
1,
2,
3,
4,
5
],
"subject": "Important!",
"text": "Dear clients, we congratulate you on being our clients! You are very lucky!"
}
Response samples
201
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"meta": {
"message": "Accepted"
}
}
Send email campaigns for clients matching the filters

post
/email/clients/by_filter/{company_id}
The object for creating an Email campaign has the following fields:

Field	Type	Description
text	string	Text Email Message
subject	string	Email Subject
Client filtering
fullname:'Joh' (optional, string) - Name (part of name) to filter clients
phone:'7916' (optional, string) - Phone (part of the number) to filter clients
email:'test@' (optional, string) - Email (part) for client filtering
card:'5663rt' (optional, string) - Card (part) to filter customers by loyalty card number
Attention: If there are no filters, email distribution will go to the entire database!

Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

query Parameters
fullname	
string
Example: fullname='Joh'
Name (part of the name) for client filtering

phone	
string
Example: phone='7916'
Phone (part of the number) for customer filtering

email	
string
Example: email='test@'
Email (part) for customer filtering

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Request Body schema: application/json
subject
required
string
Email Subject

text
required
string
Email text

Responses
201 Created
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
string
Is null

meta	
object
An object containing a 201 status code message

Request samples
Payload
Content type
application/json

Copy
{
"subject": "Important!",
"text": "Dear clients, we congratulate you on being our clients! You are very lucky!"
}
Response samples
201
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"meta": {
"message": "Accepted"
}
}
Financial Transactions
Get transactions

get
/transactions/{company_id}
Transaction filtering
page: Page number

count: Number of customers per page

account_id: Checkout ID

supplier_id: Supplier ID

client_id: Client ID

user_id: user ID

master_id: Employee ID

type: transaction type

real_money: Indicates whether this is a real-money (fiat) transaction

deleted: whether the transaction was deleted

start_date: start date of the period

end_date: end date of the period

balance_is: 0 - any balance, 1 - positive, 2 - negative

document_id: document ID

Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

query Parameters
page	
number
Example: page=1
Page number

count	
number
Example: count=50
Number of customers per page

account_id	
number
Example: account_id=0
Checkout ID

supplier_id	
number
Example: supplier_id=0
Supplier ID

client_id	
number
Example: client_id=0
Client ID

user_id	
number
Example: user_id=0
User ID

master_id	
number
Example: master_id=0
Employee ID

type	
number
Example: type=0
transaction type

real_money	
number
Example: real_money=0
Indicates whether this is a real-money (fiat) transaction

deleted	
number
Example: deleted=0
whether the transaction was deleted

start_date	
number
Example: start_date=''
period start date

end_date	
number
Example: end_date=''
period end date

balance_is	
number
Example: balance_is=0
0 - any balance, 1 - positive, 2 - negative

document_id	
number
Example: document_id=0
document ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
Array of objects
Array of objects with data

meta	
Array of objects
Metadata (empty array)

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": [
{}
],
"meta": [ ]
}
Get Transactions by Visit or Appointment ID

get
/timetable/transactions/{company_id}
Transaction filtering
record_id: record ID

visit_id: ID of the visit

Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

query Parameters
record_id	
number
Example: record_id=0
Appointment ID

visit_id	
number
Example: visit_id=0
Visit ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
Array of objects
Array of objects with data

meta	
Array of objects
Metadata (empty array)

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": [
{}
],
"meta": [ ]
}
Create a Financial Transaction

post
/finance_transactions/{company_id}
Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Request Body schema: application/json
expense_id	
number
Payment item

amount	
number <float>
Transaction amount

account_id	
number
Checkout ID

client_id	
number
Client ID

supplier_id	
number
Supplier ID

master_id	
number
Employee ID

comment	
number
A comment

date	
string <date-time>
Transaction creation date

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
object
Object with data

meta	
Array of objects
Metadata (empty array)

Request samples
Payload
Content type
application/json

Copy
{
"expense_id": 2640,
"amount": 100,
"account_id": 39105,
"client_id": 4240788,
"supplier_id": 0,
"master_id": 0,
"comment": "Transaction comment",
"date": "2025-09-21T23:00:00.000+03:00"
}
Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"id": 277016617,
"document_id": 0,
"date": "2025-09-21T23:00:00.000+03:00",
"type_id": 5,
"expense_id": 5,
"account_id": 774020,
"amount": 100,
"client_id": 51520012,
"master_id": 921395,
"supplier_id": 0,
"comment": "Transaction comment",
"item_id": 0,
"target_type_id": 0,
"record_id": 0,
"goods_transaction_id": 0,
"expense": {},
"account": {},
"client": {},
"master": {},
"supplier": [ ]
},
"meta": [ ]
}
Receiving a financial transaction

get
/finance_transactions/{company_id}/{transaction_id}
Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

transaction_id
required
number
transaction ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
Array of objects
Array of objects with data

meta	
Array of objects
Metadata (empty array)

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": [
{}
],
"meta": [ ]
}
Financial Transaction Update

put
/finance_transactions/{company_id}/{transaction_id}
Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

transaction_id
required
number
transaction ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Request Body schema: */*
expense_id	
number
Payment item

amount	
number <float>
Transaction amount

account_id	
number
Checkout ID

client_id	
number
Client ID

supplier_id	
number
Supplier ID

master_id	
number
Employee ID

comment	
number
A comment

date	
string <date-time>
Transaction creation date

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
Array of objects
Array of objects with data

meta	
Array of objects
Metadata (empty array)

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": [
{}
],
"meta": [ ]
}
Deleting a transaction

delete
/finance_transactions/{company_id}/{transaction_id}
Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

transaction_id
required
number
transaction ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
202 Accepted
Loyalty Cards
Get a list of card types available at the location

get
/loyalty/card_types/salon/{company_id}
Returns a list of card types that are valid for the given location.

The attributes and their descriptions match those defined in the "Collection of Card Types Available to the Client" method described above.

Authorizations:
(beareruser)
path Parameters
company_id
required
number
Example: 12345
Company ID

Responses
200 OK
Response Schema: application/json
Array 
id	
integer <int32>
Card type identifier

title	
string
Card type name

salon_group_id	
integer <int32>
ID of the chain where the card type was created

salon_group	
object
An object that contains the "id" and "title" fields: the identifier of the chain where the card type was created and the name of this chain

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
[
{
"id": 10992,
"title": "Cashback",
"salon_group_id": 145071,
"salon_group": {}
},
{
"id": 8230,
"title": "Referral program",
"salon_group_id": 145071,
"salon_group": {}
}
]
Get a List of Customer Cards by Phone Number

get
/loyalty/cards/{phone}/{group_id}/{company_id}
Returns a list of customer cards with programs that are active in this location

Attribute	Type	Description
id	int	Loyalty card ID
balance	decimal	Loyalty card balance
paid_amount	decimal	Amount "Paid"
sold_amount	decimal	Amount "Sold"
visits_count	int	Number of visits
number	string	Card number
type_id	int	Loyalty card type identifier
salon_group_id	int	ID of the chain where the card was created
type	object	Object that contains the "id" and "title" fields: card type identifier and name
salon_group	object	Object that contains the "id" and "title" fields: identifier of the chain where the card type was created and the name of this chain
programs	array	Array with information about promotions linked to a loyalty card
rules	array	Array with information about the rules configured in the action
The programs array consists of objects with the following fields:

Attribute	Type	Description
id	int	Promotion ID
title	string	Action name
loyalty_type_id	int	Promotion type ID
item_type_id	int	Is cashback accrued from products
value_unit_id	int	Bonus field — Discount % or Fixed amount
group_id	int	ID of the chain where the action was created
loyalty_type	object	Object with information about the action
The rules array consists of objects with the following fields:

Attribute	Type	Description
id	int	Rule ID
loyalty_program_id	int	Identifier of the promotion to which the rule is attached
loyalty_type_id	int	Promotion type ID
value	decimal	Value from which the rule will work
Authorizations:
(beareruser)
path Parameters
phone
required
string
Customer phone number in the format 380000000000

group_id
required
number
Chain ID

company_id
required
number
Location ID

header Parameters
Accept
required
string
application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
200 OK
Response Schema: application/json
id	
integer <int32>
Loyalty card ID

balance	
number <float>
Loyalty card balance

points	
integer <int32>
paid_amount	
number <float>
Amount Paid

sold_amount	
number <float>
Amount "Sold"

visits_count	
integer <int32>
Number of visits

number	
string
Card number

type_id	
integer <int32>
Loyalty card type identifier

salon_group_id	
integer <int32>
ID of the chain where the card was created

type	
object
An object that contains the "id" and "title" fields: card type identifier and card type name, respectively

salon_group	
object
An object that contains the "id" and "title" fields: the identifier of the chain where the card type was created and the name of this chain

programs	
Array of objects
An array with information about promotions linked to a loyalty card

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"id": 9210520,
"balance": 100,
"points": 0,
"paid_amount": 1000,
"sold_amount": 1000,
"visits_count": 1,
"number": 14507109210520,
"type_id": 10992,
"salon_group_id": 145071,
"type": {
"id": 10992,
"title": "5+2",
"salon_group_id": 145071
},
"salon_group": {
"id": 145071,
"title": "Dough chain1."
},
"programs": [
{}
]
}
Get a List of Customer Cards by ID

get
/loyalty/client_cards/{client_id}
Returns a list of customer cards with programs that are active in this location

The attributes in the response to the request completely match the "Get a list of issued cards by phone number" method described above

Authorizations:
(beareruser)
path Parameters
client_id
required
number
Client ID

header Parameters
Accept
required
string
application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
200 OK
Response Schema: application/json
id	
integer <int32>
Loyalty card ID

balance	
number <float>
Loyalty card balance

points	
integer <int32>
paid_amount	
number <float>
Amount Paid

sold_amount	
number <float>
Amount "Sold"

visits_count	
integer <int32>
Number of visits

number	
string
Card number

type_id	
integer <int32>
Loyalty card type identifier

salon_group_id	
integer <int32>
ID of the chain where the card was created

type	
object
An object that contains the "id" and "title" fields: card type identifier and card type name, respectively

salon_group	
object
An object that contains the "id" and "title" fields: the identifier of the chain where the card type was created and the name of this chain

programs	
Array of objects
An array with information about promotions linked to a loyalty card

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"id": 9210520,
"balance": 100,
"points": 0,
"paid_amount": 1000,
"sold_amount": 1000,
"visits_count": 1,
"number": 14507109210520,
"type_id": 10992,
"salon_group_id": 145071,
"type": {
"id": 10992,
"title": "5+2",
"salon_group_id": 145071
},
"salon_group": {
"id": 145071,
"title": "Dough chain1."
},
"programs": [
{}
]
}
Get User Loyalty Cards

get
/user/loyalty_cards/{group_id}
Returns a list of cards of an authorized user with programs, filtering cards by salon chain / location

Authorizations:
(beareruser)
path Parameters
group_id
required
number
Chain ID

header Parameters
Accept
required
string
application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
200 OK
Response Schema: application/json
id	
integer <int32>
Loyalty card ID

balance	
number <float>
Loyalty card balance

points	
integer <int32>
paid_amount	
number <float>
Amount Paid

sold_amount	
number <float>
Amount "Sold"

visits_count	
integer <int32>
Number of visits

number	
string
Card number

type_id	
integer <int32>
Loyalty card type identifier

salon_group_id	
integer <int32>
ID of the chain where the card was created

type	
object
An object that contains the "id" and "title" fields: card type identifier and card type name, respectively

salon_group	
object
An object that contains the "id" and "title" fields: the identifier of the chain where the card type was created and the name of this chain

programs	
Array of objects
An array with information about promotions linked to a loyalty card

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"id": 9210520,
"balance": 100,
"points": 0,
"paid_amount": 1000,
"sold_amount": 1000,
"visits_count": 1,
"number": 14507109210520,
"type_id": 10992,
"salon_group_id": 145071,
"type": {
"id": 10992,
"title": "5+2",
"salon_group_id": 145071
},
"salon_group": {
"id": 145071,
"title": "Dough chain1."
},
"programs": [
{}
]
}
Issue a Loyalty Card

post
/loyalty/cards/{company_id}
| Attribute | Type | Description | |----------------------|--------|----------------- ------------------------------| | loyalty_card_number | number | Loyalty card number | | loyalty_card_type_id | number | Loyalty card type identifier | | phone | number | Customer phone number in the format 70001234567 |

Authorizations:
(beareruser)
path Parameters
company_id
required
number
Location ID

header Parameters
Accept
required
string
application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Request Body schema: application/json
loyalty_card_number	
string
Loyalty card number

loyalty_card_type_id	
string
Loyalty card type identifier

phone	
number
Customer phone number in the format 70001234567

Responses
200 OK
Response Schema: application/json
id	
integer <int32>
Loyalty card ID

balance	
number <float>
Loyalty card balance

points	
integer <int32>
paid_amount	
number <float>
Amount Paid

sold_amount	
number <float>
Amount "Sold"

visits_count	
integer <int32>
Number of visits

number	
string
Card number

type_id	
integer <int32>
Loyalty card type identifier

salon_group_id	
integer <int32>
ID of the chain where the card was created

type	
object
An object that contains the "id" and "title" fields: card type identifier and card type name, respectively

salon_group	
object
An object that contains the "id" and "title" fields: the identifier of the chain where the card type was created and the name of this chain

programs	
Array of objects
An array with information about promotions linked to a loyalty card

Request samples
Payload
Content type
application/json

Copy
{
"loyalty_card_number": 9090909,
"loyalty_card_type_id": "8230",
"phone": 79091552422
}
Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"id": 9250498,
"balance": 0,
"points": 0,
"paid_amount": 16300,
"sold_amount": 19320,
"visits_count": 5,
"number": "01010101",
"type_id": 8230,
"salon_group_id": 145071,
"type": {
"id": 8230,
"title": "cashmesh",
"salon_group_id": 145071
},
"salon_group": {
"id": 145071,
"title": "Dough chain1."
},
"programs": [
{}
]
}
Remove a Loyalty Card

delete
/loyalty/cards/{company_id}/{card_id}
Authorizations:
(beareruser)
path Parameters
company_id
required
number
Location ID

card_id
required
number
loyalty card ID

Responses
204 No Content
Manual withdraw/deposit to loyalty card in chain

post
/chain/{chain_id}/loyalty/cards/{card_id}/manual_transaction
Manual withdraw/deposit to loyalty card in chain

Authorizations:
BearerPartnerUser
path Parameters
chain_id
required
number
Example: 123
ID of a chain.

card_id
required
number
Loyalty card ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
Should be equal to application/vnd.api.v2+json

Content-Type
required
string
Example: application/json
Should be equal to application/json

Request Body schema: application/json
amount
required
number
Withdraw/deposit amount. Positive for deposit, negative for withdraw.

title	
string
Optional comment

Responses
200 OK
Response Schema: application/json
success	
boolean (Successful response status)
Response status.

data	
object (loyalty_card)
Loyalty card

meta	
object (Empty meta object)
Additional response data.

403 Forbidden
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

404 Not Found
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Empty meta object)
Additional response data.

Request samples
Payload
Content type
application/json

Copy
{
"amount": 100.5,
"title": "string"
}
Response samples
200403404
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"id": 0,
"balance": 0,
"points": 0,
"paid_amount": 0,
"sold_amount": 0,
"visits_count": 0,
"number": "string",
"type_id": 0,
"salon_group_id": 0,
"max_discount_percent": 0,
"max_discount_amount": 0
},
"meta": { }
}
Get a List of Card Types Available at the Chain

get
/chain/{chain_id}/loyalty/card_types
Authorizations:
(beareruser)
path Parameters
chain_id
required
integer
Chain ID

header Parameters
Accept
required
string
application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
200 OK
Response Schema: application/json
Array 
id	
integer <int32>
Card type identifier

title	
string
Card type name

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
[
{
"id": 123,
"title": "Loyalty card type"
}
]
Manual withdraw/deposit to loyalty card in company

post
/company/{company_id}/loyalty/cards/{card_id}/manual_transaction
Manual withdraw/deposit to loyalty card in company

Authorizations:
BearerPartnerUser
path Parameters
company_id
required
number
Example: 123
ID of a company.

card_id
required
number
Loyalty card ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
Should be equal to application/vnd.api.v2+json

Content-Type
required
string
Example: application/json
Should be equal to application/json

Request Body schema: application/json
amount
required
number
Withdraw/deposit amount. Positive for deposit, negative for withdraw.

title	
string
Optional comment

Responses
200 OK
Response Schema: application/json
success	
boolean (Successful response status)
Response status.

data	
object (loyalty_card)
Loyalty card

meta	
object (Empty meta object)
Additional response data.

403 Forbidden
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Response error message)
Additional response data.

404 Not Found
Response Schema: application/json
success	
boolean (Unsuccessful response status)
Response status.

data	
object or null (No data in response)
Response data.

meta	
object (Empty meta object)
Additional response data.

Request samples
Payload
Content type
application/json

Copy
{
"amount": 100.5,
"title": "string"
}
Response samples
200403404
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"id": 0,
"balance": 0,
"points": 0,
"paid_amount": 0,
"sold_amount": 0,
"visits_count": 0,
"number": "string",
"type_id": 0,
"salon_group_id": 0,
"max_discount_percent": 0,
"max_discount_amount": 0
},
"meta": { }
}
Get a List of Card Types Available for Issuance to the Client

get
/loyalty/card_types/client/{company_id}/{phone}
Returns a list of card types that are available for issuance to a location client.

Attribute	Type	Description
id	int	Card type identifier
title	string	Card type name
salon_group_id	int	ID of the chain where the card type was created
salon_group	object	An object that contains the "id" and "title" fields: identifier of the chain where the card type was created and the name of this chain
Authorizations:
(beareruser)
path Parameters
company_id
required
number
Example: 12345
Company ID

phone
required
number
Example: 70001234567
Customer phone number

header Parameters
Accept
required
string
application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
200 OK
Response Schema: application/json
Array 
id	
integer <int32>
Card type identifier

title	
string
Card type name

salon_group_id	
integer <int32>
ID of the chain where the card type was created

salon_group	
object
An object that contains the "id" and "title" fields: the identifier of the chain where the card type was created and the name of this chain

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
[
{
"id": 10992,
"title": "Cashback",
"salon_group_id": 145071,
"salon_group": {}
},
{
"id": 8230,
"title": "Referral program",
"salon_group_id": 145071,
"salon_group": {}
}
]
Application of loyalty in a visit
Apply a Discount Promotion in a Visit

post
/visit/loyalty/apply_discount_program/{company_id}/{card_id}/{program_id}
Applying a promotion to a visit, it only makes sense if there is a visit

Authorizations:
(beareruser)
path Parameters
company_id
required
number
Location ID

card_id
required
number
Client card ID

program_id
required
number
ID of the promotion linked to the card

header Parameters
Accept
required
string
application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Request Body schema: application/json
record_id
required
number
Appointment ID

visit_id
required
number
Visit ID

Responses
200 OK
Response Schema: application/json
payment_transactions	
Array of objects
Array with information about the financial transactions of the appointment

loyalty_transactions	
Array of objects
An array with information about applied loyalty transactions in a visit

kkm_transaction_details_container	
object
An object that holds details about transactions recorded by the POS system

items	
Array of objects
Array with information about products and services of the appointment

Request samples
Payload
Content type
application/json

Copy
{
"record_id": 0,
"visit_id": 0
}
Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"payment_transactions": [ ],
"loyalty_transactions": [
{}
],
"kkm_transaction_details_container": {
"last_operation_type": 1,
"transactions": [ ]
},
"items": [
{},
{}
]
}
Cancel the Application of the Discount Promotion in the Visit

post
/visit/loyalty/cancel_discount_program/{company_id}/{card_id}/{program_id}
Cancellation of the promotion applied to the visit.

Authorizations:
(beareruser)
path Parameters
company_id
required
number
Location ID

card_id
required
number
Client card ID

program_id
required
number
ID of the promotion linked to the card

header Parameters
Accept
required
string
application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Request Body schema: */*
record_id
required
number
Appointment ID

visit_id
required
number
Visit ID

Responses
200 OK
Response Schema: application/json
payment_transactions	
Array of objects
Array with information about the financial transactions of the appointment

loyalty_transactions	
Array of objects
An array with information about applied loyalty transactions in a visit

kkm_transaction_details_container	
object
An object that holds details about transactions recorded by the POS system

items	
Array of objects
Array with information about products and services of the appointment

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"payment_transactions": [ ],
"loyalty_transactions": [ ],
"kkm_transaction_details_container": {
"last_operation_type": 1,
"transactions": [ ]
},
"items": [
{},
{}
]
}
Apply Deduction from the Loyalty Card in the Visit

post
/visit/loyalty/apply_card_withdrawal/{company_id}/{card_id}
The amount deducted will not exceed the available bonus balance. If the value is set to 0, no write-off transaction will occur

Authorizations:
(beareruser)
path Parameters
company_id
required
number
Location ID

card_id
required
number
Client card ID

header Parameters
Accept
required
string
application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Request Body schema: */*
record_id
required
number
Appointment ID

visit_id
required
number
Visit ID

amount
required
number
Number of points to redeem

Responses
200 OK
Response Schema: application/json
payment_transactions	
Array of objects
Array with information about the financial transactions of the appointment

loyalty_transactions	
Array of objects
An array with information about applied loyalty transactions in a visit

kkm_transaction_details_container	
object
An object that holds details about transactions recorded by the POS system

items	
Array of objects
Array with information about products and services of the appointment

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"payment_transactions": [ ],
"loyalty_transactions": [
{}
],
"kkm_transaction_details_container": {
"last_operation_type": 1,
"transactions": [ ]
},
"items": [
{},
{}
]
}
Cancel Withdrawal from the Loyalty Card During the Visit

post
/visit/loyalty/cancel_card_withdrawal/{company_id}/{card_id}
Cancellation of write-off from the loyalty card.

Authorizations:
(beareruser)
path Parameters
company_id
required
number
Location ID

card_id
required
number
Client card ID

header Parameters
Accept
required
string
application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Request Body schema: */*
record_id
required
number
Appointment ID

visit_id
required
number
Visit ID

Responses
200 OK
Response Schema: application/json
payment_transactions	
Array of objects
Array with information about the financial transactions of the appointment

loyalty_transactions	
Array of objects
An array with information about applied loyalty transactions in a visit

kkm_transaction_details_container	
object
An object that holds details about transactions recorded by the POS system

items	
Array of objects
Array with information about products and services of the appointment

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"payment_transactions": [ ],
"loyalty_transactions": [ ],
"kkm_transaction_details_container": {
"last_operation_type": 1,
"transactions": [ ]
},
"items": [
{},
{}
]
}
Apply Referral Program During a Visit

post
/visit/loyalty/apply_referral_program/{company_id}/{group_id}
Applying a referral program to a visit

Authorizations:
(beareruser)
path Parameters
company_id
required
number
Location ID

group_id
required
number
ID of the chain where the referral program is configured

header Parameters
Accept
required
string
application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Request Body schema: */*
record_id
required
number
Appointment ID

visit_id
required
number
Visit ID

referrer_phone
required
number
Phone number of the inviter

Responses
200 OK
Response Schema: application/json
payment_transactions	
Array of objects
Array with information about the financial transactions of the appointment

loyalty_transactions	
Array of objects
An array with information about applied loyalty transactions in a visit

kkm_transaction_details_container	
object
An object that holds details about transactions recorded by the POS system

items	
Array of objects
Array with information about products and services of the appointment

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"payment_transactions": [ ],
"loyalty_transactions": [
{}
],
"kkm_transaction_details_container": {
"last_operation_type": 1,
"transactions": [ ]
},
"items": [
{}
]
}
Get loyalty transactions by visit

get
/visit/loyalty/transactions/{visit_id}
List of transactions for loyalty promotions for this visit

Authorizations:
(beareruser)
path Parameters
visit_id
required
number
Visit ID

header Parameters
Accept
required
string
application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
200 OK
Response Schema: application/json
Array 
id	
integer <int32>
Loyalty transaction ID

status_id	
integer <int32>
Status ID

amount	
number <float>
Transaction amount

type_id	
integer <int32>
Transaction type identifier

program_id	
integer <int32>
Loyalty program ID

card_id	
integer <int32>
Loyalty card ID

salon_group_id	
integer <int32>
ID of the chain to which the loyalty belongs

item_id	
integer <int32>
Identifier of the product/service to which the promotion applies

item_type_id	
integer <int32>
Operation type identifier

item_record_id	
integer <int32>
Identifier of the appointment to which the service/product belongs

goods_transaction_id	
integer <int32>
Commodity transaction ID

is_discount	
boolean
Is a discount

is_loyalty_withdraw	
boolean
Is the application of loyalty canceled

type	
object
Loyalty type

program	
object
Promotion Information

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
[
{
"id": 22989715,
"status_id": 1,
"amount": 100,
"type_id": 1,
"program_id": 12705,
"card_id": 0,
"salon_group_id": 145071,
"item_id": 5048371,
"item_type_id": 7,
"item_record_id": 0,
"goods_transaction_id": 96082477,
"is_discount": true,
"is_loyalty_withdraw": false,
"type": {},
"program": {}
},
{
"id": 22994127,
"status_id": 1,
"amount": 100,
"type_id": 4,
"program_id": 19044,
"card_id": 9234863,
"salon_group_id": 145071,
"item_id": 0,
"item_type_id": 0,
"item_record_id": 0,
"goods_transaction_id": 0,
"is_discount": false,
"is_loyalty_withdraw": false,
"type": {},
"program": {}
}
]
Webhook event notifications
Get event notification settings

get
/hooks_settings/{company_id}
Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
object
Object with data

meta	
Array of objects
Metadata (empty array)

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"urls": [],
"active": 0,
"salon": 1,
"service_category": 0,
"service": 1,
"good": 1,
"master": 1,
"client": 1,
"record": 1,
"goods_operations_sale": 1,
"goods_operations_receipt": 1,
"goods_operations_consumable": 1,
"goods_operations_stolen": 1,
"goods_operations_move": 1,
"finances_operation": 1
},
"meta": [ ]
}
Change Event Notification Settings

post
/hooks_settings/{company_id}
Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Request Body schema: application/json
urls
required
Array of arrays
List of addresses to send notifications to

active
required
number
1 - notifications are active, 0 - not active

salon	
number
1 - send events by company entity, 0 - do not send

service_category	
number
1 - send events by service category entity, 0 - do not send

service	
number
1 - send events by service entity, 0 - do not send

good	
number
1 - send events by product entity, 0 - don't send

master	
number
1 - send events by employee entity, 0 - don't send

client	
number
1 - send events by client entity, 0 - don't send

record	
number
1 - send events by record entity, 0 - do not send

goods_operations_sale	
number
1 - send events by the item sale entity, 0 - do not send

goods_operations_receipt	
number
1 - send events by the entity arrival of goods, 0 - do not send

goods_operations_consumable	
number
1 - send events by the consumable write-off entity, 0 - do not send

goods_operations_stolen	
number
1 - send events by the item write-off entity, 0 - do not send

goods_operations_move	
number
1 - send events by the item movement entity, 0 - no send

finances_operation	
number
1 - send events by entity financial operation, 0 - no send

self_sending	
number
1 - The webhook creator will receive events triggered by their own actions, 0 - The webhook creator will not receive events triggered by their own actions

Responses
201 Created
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
object
Object with data

meta	
Array of objects
Metadata (empty array)

Request samples
Payload
Content type
application/json

Copy
Expand allCollapse all
{
"urls": [
"https://dev.tools.test.com/test/Hooks"
],
"active": 0,
"salon": 1,
"service_category": 0,
"service": 1,
"good": 1,
"master": 1,
"client": 1,
"record": 1,
"goods_operations_sale": 1,
"goods_operations_receipt": 1,
"goods_operations_consumable": 1,
"goods_operations_stolen": 1,
"goods_operations_move": 1,
"finances_operation": 1,
"self_sending": 0
}
Response samples
201
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"urls": [],
"active": 0,
"salon": 1,
"service_category": 0,
"service": 1,
"master": 1,
"client": 1,
"record": 1,
"goods_operations_sale": 1,
"goods_operations_receipt": 1,
"goods_operations_consumable": 1,
"goods_operations_stolen": 1,
"goods_operations_move": 1,
"finances_operation": 1
},
"meta": [ ]
}
Reference books
Get business types by group

get
/references/business_groups_with_types
Authorizations:
(beareruser)
header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
Array of objects
Array of objects with data

meta	
object
Metadata (contains the number of business types found)

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": [
{},
{}
],
"meta": {
"count": 10
}
}
Categories
Get company categories

get
/labels/{company_id}/{entity}
Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

entity
required
number
Category object (0 - general tags, 1 - customer tags, 2 - appointment tags)

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
200 OK
Response Schema: application/json
Array 
id	
number
Category ID

salon_id	
number
Location ID

title	
string
name of category

color	
string
Label color in #RRGGBB format

icon	
string
Icon name

entity	
number
Category object (1 - category for customers, 2 - category for appointments)

deleted	
number
Delete mark

not_editable	
number
Whether category changes are allowed (1 - allowed, 0 - not allowed)

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
[
{
"id": "241625",
"salon_id": "68570",
"title": "The employee is important",
"color": "#ff2828",
"icon": "lock",
"entity": "2",
"deleted": "0",
"not_editable": "1"
},
{
"id": "241626",
"salon_id": "68570",
"title": "The employee is not important",
"color": "#009800",
"icon": "unlock",
"entity": "2",
"deleted": "0",
"not_editable": "1"
}
]
Create a client company category

post
/labels/{company_id}/clients/create
Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

header Parameters
Accept
required
string
application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Request Body schema: */*
title	
string
name of category

color	
string
Label color in #RRGGBB format

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
object
Object with data

meta	
Array of objects
Metadata (empty array)

400 Bad Request
Response Schema: application/json
success	
boolean
Execution success status (false)

data	
string
Contains null

meta	
object
Metadata (contains an error message)

403 Forbidden
Response Schema: application/json
success	
boolean
Execution success status (false)

data	
string
Contains null

meta	
object
Contains an array with possible error messages

404 Not Found
Response Schema: application/json
success	
boolean
Execution success status (false)

data	
string
Contains null

meta	
object
Contains an array of possible error messages

Response samples
200400403404
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"title": "test",
"salon_id": 68570,
"color": "#00ff11",
"entity": 1,
"id": "3599560"
},
"meta": [ ]
}
Create a Category

post
/labels/{company_id}
Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

query Parameters
title
required
string
name of category

color
required
string
Label color in #RRGGBB format

entity	
number
Category object (0 - general tags, 1 - customer tags, 2 - appointment tags)

icon	
string
Icon name

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
object
Object with data

meta	
Array of objects
Metadata (empty array)

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"title": "test",
"salon_id": 68570,
"color": "#00ff11",
"entity": 1,
"id": "3599560"
},
"meta": [ ]
}
Update Category

put
/labels/{company_id}/{label_id}
Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

label_id
required
number
Tag ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Request Body schema: application/json
title	
string
name of category

color	
string
Label color in #RRGGBB format

entity	
number
Category object (1 - category for customers, 2 - category for appointments)

icon	
string
Icon name

Responses
202 Accepted
Request samples
Payload
Content type
application/json

Copy
{
"title": "Testway2",
"color": "#aa11ff",
"entity": 2,
"icon": "Test"
}
Response samples
202
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"meta": {
"message": "Accepted"
}
}
Delete company category

delete
/labels/{company_id}/{label_id}
Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

label_id
required
number
Tag ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
200 OK
Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"meta": {
"message": "Accepted"
}
}
Get Customer Categories Searchable by Name

get
/labels/{company_id}/clients
Authorizations:
(beareruser)
path Parameters
company_id
required
number
Location ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
Array of objects
Array with data objects

meta	
object
Metadata (contains the page number and the number of categories found)

403 Forbidden
Response Schema: application/json
success	
boolean
Execution success status (false)

data	
string
Contains null

meta	
object
Contains an array with possible error messages

404 Not Found
Response Schema: application/json
success	
boolean
Execution success status (false)

data	
string
Contains null

meta	
object
Contains an array of possible error messages

Response samples
200403404
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": [
{}
],
"meta": {
"page": 1,
"total_count": 25
}
}
Product Categories
List request example

get
/goods/search/{company_id}?term={search_term}&count={max_count}
List of products and product categories
You can retrieve a list of products and product categories by providing the location ID. Use the search_term parameter to filter:

Product categories by name or article
Products by name, article, or barcode
Limit the number of results using the max_count parameter.

If search_term is not provided, the response will return a list of root categories for the specified location. In this case, the max_count parameter is ignored. If search_term is provided, the system will first search among categories. If fewer than max_count results are found, the search will continue among products to fill the remaining count.

The result is returned as an array of products tree elements.

Product tree element has the following structure:

| Field | Type | Description | | -------------| ------- | -------------------------------------------------- ----------------------------------------- | | parent_id | number | Parent element ID (0 for root elements) | | item_id | number | Item ID (0 if item is a category) | | category_id | number | Product category ID (0 if the item is a product) | | title | string | Product name or product category | | is_chain | boolean | Is the element chain-bound? true - the element is connected to the chain, false - not connected | | is_category | boolean | Is the element a category? true - category, false - product | | is_item | boolean | Is the item a product? true - product, false - category |

Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

query Parameters
search_term	
string
Search query by name, article number or barcode

max_count	
number
The number of output lines per page. Maximum 100

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
Array of objects
Array with data objects

meta	
object
Metadata (contains the number of categories found)

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": [
{},
{}
],
"meta": {
"count": 2
}
}
Example of a request to get the composition of a category

get
/goods/category_node/{company_id}/{category_id}?page={page}&count={count}
##№ Composition of the product category

Information on a product category and its descendants can be obtained by making a request specifying the location ID and product category. Pagination is supported, specified by the page and count parameters.

Composition of a product category has the following structure:

Field	Type	Description
parent_id	number	Parent element ID (0 for root elements)
item_id	number	Item ID (always 0)
category_id	number	Product category ID
title	string	Product category name
is_chain	boolean	Is the element chain-bound? true - the element is connected to the chain, false - not connected
is_category	boolean	Is the element a category? always true
is_item	boolean	Is the item a product? always false
children	array of objects (Product tree element)	Child elements of a product category
children_count	number	Total number of child products and categories (no recursion)
Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

category_id
required
number
Product Category ID

query Parameters
page	
number
Page number

count	
number
The number of products displayed on the page. Maximum 1000

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
object
Object with data

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"parent_id": 0,
"item_id": 0,
"category_id": 123,
"title": "Root category 1",
"is_chain": false,
"is_category": true,
"is_item": false,
"children": [],
"children_count": 2
}
}
Get a list of product categories Deprecated

get
/goods_categories/{company_id}/{parent_category_id}
Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

parent_category_id
required
number
ID of the parent product category. Default 0 - top-level categories are displayed (optional)

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
Array of objects
Array of objects with data

meta	
Array of objects
Metadata (empty array)

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": [
{},
{}
],
"meta": [ ]
}
Get a list of product categories by ID

get
/goods_categories/multiple/{company_id}
Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

query Parameters
id	
number
Product category ID (you can specify several additional parameters &ids[]={id}

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
Array of objects
Array of objects with data

meta	
Array of objects
Metadata (empty array)

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": [
{},
{}
],
"meta": [ ]
}
Example of a request to get categories

get
/company/{company_id}/goods_categories/{parent_category_id}
Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

parent_category_id
required
number
ID of the parent product category

query Parameters
Accept
required
string
application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
Array of objects
Array of objects with data

meta	
Array of objects
Metadata (empty array)

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": [
{},
{},
{}
],
"meta": {
"count": 94
}
}
Create a Product Category

post
/goods_categories/{company_id}
The method allows you to create a product category.

Authorizations:
(beareruser)
path Parameters
company_id
required
number
Location ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Request Body schema: application/json
title
required
string
Product category name

parent_category_id	
integer <int32>
Parent category ID (optional, but can be 0 or null if you don't need to specify the parent category)

article	
string
vendor code

comment	
string
A comment

Responses
201 Created
Response Schema: application/json
success	
boolean
Execution success status

data	
object
Object with data

meta	
Array of objects
Metadata (empty array)

Request samples
Payload
Content type
application/json

Copy
{
"title": "Manicure",
"parent_category_id": 123456,
"article": "123article",
"comment": "Category of products for manicure"
}
Response samples
201
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"id": 123456,
"title": "Manicure",
"parent_category_id": 123457
},
"meta": [ ]
}
Edit a Product Category

put
/goods_categories/{company_id}/{category_id}
The method allows you to edit the product category

Authorizations:
(beareruser)
path Parameters
company_id
required
number
Location ID

category_id
required
number
Product category ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Request Body schema: application/json
title
required
string
Product category name

parent_category_id	
integer <int32>
Parent category ID (optional, but can be 0 or null if you don't need to specify the parent category)

article	
string
vendor code

comment	
string
A comment

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status

data	
object
Object with data

meta	
Array of objects
Metadata (empty array)

Request samples
Payload
Content type
application/json

Copy
{
"title": "Manicure",
"parent_category_id": 123456,
"article": "123article",
"comment": "Category of products for manicure"
}
Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"id": 123456,
"title": "Manicure",
"parent_category_id": 123457
},
"meta": [ ]
}
Delete a Product Category

delete
/goods_categories/{company_id}/{category_id}
The method allows you to delete a product category

Authorizations:
(userbearer)
path Parameters
company_id
required
number
Location ID

category_id
required
number
Product category ID

header Parameters
Accept
required
string
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
204 No Content
Bill of Materials and Consumables
Retrieve a list of bill of materials and consumables

get
/technological_cards/{company_id}/
Authorizations:
(beareruser)
path Parameters
company_id
required
number
Location ID

query Parameters
search	
string
Example: search='test'
parameter for searching by the name of those lists

page	
number
Example: page=1
page number

count	
number
Example: count=20
number of those lists per page

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
Array of objects
Array of data objects

meta	
Array of objects
Metadata (empty array)

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": [
{},
{}
],
"meta": [ ]
}
Get the Bill of Materials for an Employee’s Service

get
/technological_cards/default_for_staff_and_service/{company_id}/{staffId}/{serviceId}/
Authorizations:
(beareruser)
path Parameters
company_id
required
number
Location ID

staffId
required
number
Employee ID

serviceId
required
number
Service ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
Array of objects
Array of data objects

meta	
Array of objects
Metadata (empty array)

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"id": "1",
"title": "Tech map 1",
"technological_card_items": []
},
"meta": [ ]
}
Retrieve a list of bill of materials and consumables

get
/technological_cards/record_consumables/{company_id}/{record_id}/
Authorizations:
(beareruser)
path Parameters
company_id
required
number
Location ID

record_id
required
number
Appointment ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
Array of objects
Array of objects with data

meta	
Array of objects
Metadata (empty array)

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": [
{}
],
"meta": [ ]
}
Unlink Appointment-Service Association

delete
/technological_cards/record_consumables/technological_cards/{company_id}/{record_id}/{service_id}
Authorizations:
(beareruser)
path Parameters
company_id
required
number
Location ID

record_id
required
number
Appointment ID

service_id
required
number
Service ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Request Body schema: */*
delete_consumables	
number
Whether to remove consumables along with deleting bill of materials. Default 0

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
Array of objects
Array with object

meta	
object
Metadata (empty array0)

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": [
{}
],
"meta": {
"count": 1
}
}
Unlink Appointment-Service Association

delete
/technological_cards/record_consumables/technological_cards/{company_id}/{record_id}/{service_id}/?{delete_consumables}
Authorizations:
(beareruser)
path Parameters
company_id
required
number
Location ID

record_id
required
number
Appointment ID

service_id
required
number
Service ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Request Body schema: */*
delete_consumables	
number
Whether to remove consumables along with deleting bill of materials. Default 0

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
Array of objects
Array with object

meta	
object
Metadata (empty array0)

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": [
{}
],
"meta": {
"count": 1
}
}
Update Consumables for the Appointment-Service Association

put
/technological_cards/record_consumables/consumables/{company_id}/{record_id}/{service_id}/
Authorizations:
(beareruser)
path Parameters
company_id
required
number
Location ID

record_id
required
number
Appointment ID

service_id
required
number
Service ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Request Body schema: application/json
consumables	
Array of objects
List of consumables

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
Array of objects
Array of objects with data

meta	
Array of objects
Metadata (empty array)

Request samples
Payload
Content type
application/json

Copy
Expand allCollapse all
{
"consumables": [
{}
]
}
Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": [
{}
],
"meta": [ ]
}
Product Transactions
Search for product transactions

get
/storages/transactions/{company_id}
Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

query Parameters
page	
number
Example: page=1
page number

count	
number
Example: count=20
number of transactions per page

start_date	
string
Example: start_date=''
period start date

end_date	
string
Example: end_date=''
period end date

document_id	
string
Document ID

changed_after	
string
Filtering product transactions modified/created since a specific date and time

changed_before	
string
Filtering product transactions modified/created before a specific date and time

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
Array of objects
Array of objects with data

meta	
Array of objects
Metadata (empty array)

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": [
{}
],
"meta": [ ]
}
Create Transaction

post
/storage_operations/goods_transactions/{company_id}
Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Request Body schema: application/json
document_id
required
number <float>
Document ID

good_id
required
number
Item ID

amount
required
number
Quantity

cost_per_unit
required
number <float>
Unit cost

discount
required
number
Discount in %

cost
required
number <float>
Total transaction amount

operation_unit_type
required
number
unit type: 1 - for sale, 2 - for write-off

master_id	
number
ID of the employee who sold the product

client_id	
number
ID of the customer who bought the product

supplier_id	
number
Vendor ID

comment	
string
A comment

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
object
Object with data

meta	
Array of objects
Metadata (empty array)

Request samples
Payload
Content type
application/json

Copy
{
"document_id": 22254960,
"good_id": 232674,
"amount": 1,
"cost_per_unit": 100,
"discount": 10,
"cost": 90,
"operation_unit_type": 1,
"master_id": 26781,
"client_id": 0,
"supplier_id": 0,
"comment": "Transaction comment"
}
Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"id": 3428010,
"document_id": 22254960,
"type_id": 1,
"type": {},
"company_id": 4564,
"good_id": 232674,
"amount": -1,
"cost_per_unit": 100,
"discount": 10,
"cost": 90,
"unit_id": 1,
"storage_id": 36539,
"supplier_id": 0,
"client_id": 0,
"master_id": 26781,
"create_date": "2025-09-21T23:00:00.000+03:00",
"last_change_date": "2020-02-01T12:00:00+0400",
"comment": "Transaction comment",
"deleted": false,
"good": {},
"storage": {},
"supplier": [ ],
"client": [ ],
"master": {},
"unit": {}
},
"meta": [ ]
}
Receiving a transaction

get
/storage_operations/goods_transactions/{company_id}/{transaction_id}
Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

transaction_id
required
number
transaction ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
object
Object with data

meta	
Array of objects
Metadata (empty array)

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"id": 3428010,
"document_id": 22254960,
"type_id": 1,
"type": {},
"company_id": 4564,
"good_id": 232674,
"amount": -1,
"cost_per_unit": 100,
"discount": 10,
"cost": 90,
"unit_id": 1,
"storage_id": 36539,
"supplier_id": 0,
"client_id": 0,
"master_id": 26781,
"create_date": "2025-09-21T23:00:00.000+03:00",
"comment": "Transaction comment",
"deleted": false,
"good": {},
"storage": {},
"sale_unit": null,
"service_unit": null,
"supplier": [ ],
"client": [ ],
"master": {},
"unit": {}
},
"meta": [ ]
}
Transaction update

put
/storage_operations/goods_transactions/{company_id}/{transaction_id}
Authorizations:
(beareruser)
path Parameters
transaction_id
required
number
transaction ID

company_id
required
number
Company ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Request Body schema: */*
document_id
required
number <float>
Document ID

good_id
required
number
Item ID

amount
required
number
Quantity

cost_per_unit
required
number <float>
Unit cost

discount
required
number
Discount in %

cost
required
number <float>
Total transaction amount

operation_unit_type
required
number
unit type: 1 - for sale, 2 - for write-off

master_id	
number
ID of the employee who sold the product

client_id	
number
ID of the customer who bought the product

supplier_id	
number
Vendor ID

comment	
string
A comment

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
object
Object with data

meta	
Array of objects
Metadata (empty array)

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"id": 3428010,
"document_id": 22254960,
"type_id": 1,
"type": {},
"company_id": 4564,
"good_id": 232674,
"amount": -1,
"cost_per_unit": 100,
"discount": 10,
"cost": 90,
"unit_id": 1,
"operation_unit_type": 1,
"storage_id": 36539,
"supplier_id": 0,
"client_id": 0,
"master_id": 26781,
"create_date": "2025-09-21T23:00:00.000+03:00",
"last_change_date": "2020-02-01T12:00:00+0400",
"comment": "Updated transaction comment",
"deleted": false,
"good": {},
"storage": {},
"supplier": [ ],
"client": [ ],
"master": {},
"unit": {}
},
"meta": [ ]
}
Deleting a transaction

delete
/storage_operations/goods_transactions/{company_id}/{transaction_id}
Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

transaction_id
required
number
transaction ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
202 Accepted
Inventory Operations
Create an inventory operation

post
/storage_operations/operation/{company_id}
An inventory operation is created by submitting a document along with multiple product transactions in a single API request. If a payment type is specified, the corresponding financial transactions will be generated automatically.

Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Request Body schema: */*
type_id
required
number
Document type (sale 1, receipt 3, write-off 4, transfer 5)

comment	
string
A comment

create_date
required
string <date-time>
Document creation date

master_id	
number
Employee ID

storage_id
required
number
Inventory ID

goods_transactions
required
Array of objects
An array of objects containing transaction parameters, similar to a request to create a product transaction

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
object
Object with data

meta	
Array of objects
Metadata (empty array)

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"document": {},
"transactions": []
},
"meta": [ ]
}
Inventory Operations Documents
Create document

post
/storage_operations/documents/{company_id}
Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Request Body schema: application/json
type_id
required
number
Document type (sale 1, receipt 3, write-off 7)

comment	
string
A comment

storage_id
required
number
Inventory ID

create_date
required
string <date-time>
Date of the inventory transaction

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
object
Object with data

meta	
Array of objects
Metadata (empty array)

Request samples
Payload
Content type
application/json

Copy
{
"type_id": 1,
"comment": "Document comment",
"storage_id": 36539,
"create_date": "2025-09-21T23:00:00.000+03:00"
}
Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"id": 22255503,
"type_id": 1,
"type": {},
"storage_id": 36539,
"user_id": 999290,
"company_id": 4564,
"number": 1251,
"comment": "Document comment",
"create_date": "2017-04-24 20:00:00",
"storage": {},
"company": {},
"user": {}
},
"meta": [ ]
}
Get document

get
/storage_operations/documents/{company_id}/{document_id}
Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

document_id
required
number
Document ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
object
Object with data

meta	
Array of objects
Metadata (empty array)

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"id": 22255503,
"type_id": 1,
"type": {},
"storage_id": 36539,
"user_id": 999290,
"company_id": 4564,
"number": 1251,
"comment": "Document comment",
"create_date": "2017-04-24 20:00:00",
"storage": {},
"company": {},
"user": {}
},
"meta": [ ]
}
Update Document

put
/storage_operations/documents/{company_id}/{document_id}
Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

document_id
required
number
Document ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Request Body schema: */*
type_id
required
number
Document type (sale 1, receipt 3, write-off 7)

comment	
string
A comment

storage_id
required
number
Inventory ID

create_date
required
string <date-time>
Date of the inventory transaction

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
object
Object with data

meta	
Array of objects
Metadata (empty array)

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"id": 22255503,
"type_id": 1,
"type": {},
"storage_id": 36539,
"user_id": 999290,
"company_id": 4564,
"number": 1251,
"comment": "Updated document comment",
"create_date": "2025-09-21T23:00:00.000+03:00",
"storage": {},
"company": {},
"user": {}
},
"meta": [ ]
}
Delete document

delete
/storage_operations/documents/{company_id}/{document_id}
Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

document_id
required
number
Document ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
202 Accepted
Get document financial transactions

get
/storage_operations/documents/finance_transactions/{document_id}
Authorizations:
(beareruser)
path Parameters
document_id
required
number
Document ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
Array of objects
Array of objects with data

meta	
Array of objects
Metadata (empty array)

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": [
{},
{}
],
"meta": [ ]
}
Get Product Transactions of a Document

get
/storage_operations/documents/goods_transactions/{document_id}
Authorizations:
(beareruser)
path Parameters
document_id
required
number
Document ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
Array of objects
Array of objects with data

meta	
object
Metadata (number of transactions found)

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": [
{},
{}
],
"meta": {
"count": 2
}
}
Client personal accounts
Creation of a client personal account topup operation

post
/deposits_operations/{salon_id}
Creating a transaction with a personal account involves creating a document, a transaction with a personal account, and a financial transaction within a single API request.

Authorizations:
(beareruser)
path Parameters
salon_id
required
number
Location ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Request Body schema: */*
client_id
required
number
ID of the client, the owner of the client personal account

deposit_id
required
number
personal account ID

amount
required
number
replenishment amount

master_id	
number
Employee ID

account_id
required
number
Checkout ID for payment

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
object
Object with data

meta	
Array of objects
Metadata (empty array)

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"document": {},
"deposits_transactions": [],
"payment_transactions": []
},
"meta": [ ]
}
Get a List of Client Personal Accounts by Location and Client

get
/deposits/company/{company_id}/client/{client_id}
Authorizations:
(beareruser)
path Parameters
company_id
required
number
Location ID

client_id
required
number
Client ID

header Parameters
Accept	
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Responses
200 OK
Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": [
{}
],
"meta": {
"count": 1
}
}
Getting a list of personal accounts by chain and a set of filters

get
/deposits/chain/{chain_id}
Authorizations:
(beareruser)
path Parameters
chain_id
required
number
Chain ID

query Parameters
balance_from	
number
Minimum balance for filtering

balance_to	
number
Maximum balance for filtering

page	
number
Page number

limit	
number
Number of items per page

header Parameters
Accept	
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Responses
200 OK
Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": [
{}
],
"meta": {
"count": 1
}
}
Getting a list of personal accounts by chain and customer phone number

get
/deposits/chain/{chain_id}/phone/{phone}
Authorizations:
(beareruser)
path Parameters
chain_id
required
number
Chain ID

phone
required
number
Customer phone number

header Parameters
Accept	
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Responses
200 OK
Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": [
{}
],
"meta": {
"count": 1
}
}
Country
Get a list of countries

get
/countries
Authorizations:
bearer
header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
Array of objects
Array of objects with data

meta	
Array of objects
Metadata (empty array)

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": [
{},
{}
],
"meta": [ ]
}
Location Chains
Obtaining chains available to the user

get
/groups
The location chain object has the following fields:

Field	Type	Description
id	number	Location chain ID
title	string	Location chain name
companies	array	List of chain locations
access	object	Object with access rights for chain management
Authorizations:
(beareruser)
header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
Array of objects
Array of objects with data

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": [
{},
{}
]
}
Z-Report
Get Z-Report data

get
/reports/z_report/{company_id}
start_date: Report date

master_id: Employee ID

Authorizations:
(beareruser)
path Parameters
company_id
required
integer
Company ID

query Parameters
start_date	
string
Example: start_date=''
period start date

master_id	
integer
Example: master_id=0
Employee ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
object
Object with data

meta	
Array of objects
Metadata (empty array)

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"stats": {},
"paids": {},
"z_data": {},
"currency": "USD"
},
"meta": [ ]
}
Additional Fields
Getting a collection of location fields

get
/custom_fields/{field_category}/{company_id}
Authorizations:
(beareruser)
path Parameters
field_category
required
string
Example: record
Field category.

For appointments - appointment

For clients - client

company_id
required
integer
Company ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
Array of objects
Array of objects with data

meta	
Array of objects
Metadata (empty array)

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": [
{}
],
"meta": [ ]
}
Adding an Additional Field

post
/custom_fields/{field_category}/{company_id}
To add a field, the user must be part of the Chain associated with the location and have the appropriate access rights in the following section:
Settings → Access → Additional Fields → Create additional fields

Authorizations:
(beareruser)
path Parameters
field_category
required
string
Example: record
Field category.

For appointments - appointment

For clients - client

company_id
required
integer
Company ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Request Body schema: application/json
type
required
string
Field type

code
required
string
Field ID

title
required
string
Field name

user_can_edit
required
boolean
Can the user edit the field

show_in_ui
required
boolean
Whether to show the field in the interface

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
Array of objects
Array of objects with data

meta	
Array of objects
Metadata (empty array)

Request samples
Payload
Content type
application/json

Copy
{
"type": "text",
"code": "my_text_field",
"title": "test field",
"user_can_edit": true,
"show_in_ui": true
}
Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"id": 1,
"salon_id": 1,
"custom_field": {}
},
"meta": [ ]
}
Update an Additional Field

put
/custom_fields/{field_category}/{company_id}/{field_id}
To update a field, the user must be part of the Chain associated with the location and have the appropriate access rights in the following section
Settings → Access → Additional Fields → Modify additional fields

Authorizations:
(beareruser)
path Parameters
field_category
required
string
Example: record
Field category.

For appointments - appointment

For clients - client

company_id
required
integer
Company ID

field_id
required
integer
field ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Request Body schema: application/json
type
required
string
Field type

code
required
string
Field ID

title
required
string
Field name

user_can_edit
required
boolean
Can the user edit the field

show_in_ui
required
boolean
Whether to show the field in the interface

Responses
202 Accepted
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
Array of objects
Array of objects with data

meta	
Array of objects
Metadata (empty array)

403 Forbidden
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
Array of objects
Array of objects with data

meta	
Array of objects
Metadata (empty array)

404 Not Found
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
Array of objects
Array of objects with data

meta	
Array of objects
Metadata (empty array)

Request samples
Payload
Content type
application/json

Copy
{
"type": "text",
"code": "my_text_field",
"title": "test field",
"user_can_edit": true,
"show_in_ui": true
}
Response samples
202403404
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": null,
"meta": {
"message": "Saved"
}
}
Remove an Additional Field from a Location

delete
/custom_fields/{field_category}/{company_id}/{field_id}
To remove a field, the user must be part of the Chain associated with the location and have the appropriate access rights in the following section:
Settings → Access → Additional Fields → Remove additional fields

Authorizations:
(beareruser)
path Parameters
field_category
required
string
Example: record
Field category.

For appointments - appointment

For clients - client

company_id
required
integer
Company ID

field_id
required
integer
field ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
Array of objects
Array of objects with data

meta	
Array of objects
Metadata (empty array)

403 Forbidden
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
Array of objects
Array of objects with data

meta	
Array of objects
Metadata (empty array)

404 Not Found
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
Array of objects
Array of objects with data

meta	
Array of objects
Metadata (empty array)

Response samples
200403404
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": null,
"meta": {
"message": "Deleted"
}
}
Sending SMS through operators
Getting Message Statuses

post
/delivery/status
Get message statuses
Number	Title
1	Delivered
2	Not delivered
4	Sent to phone
8	Transferred to the operator
16	Rejected by operator
52	Not enough funds
In the event of an error, the corresponding HTTP status code is returned. In some cases, a descriptive error message is also included in the response. The following error codes may be returned by all API methods:

error code	Http status code	Title	Description
5	400	ENTITY_VALIDATION_ERROR	The request body did not pass validation
10	400	FIELD_VALIDATION_ERROR	Parameter not validated
15	403	ACCESS_FORBIDDEN	The action is not available, the application does not have the required permissions.
20	401	INVALID_PARTNER_TOKEN	partner_token missing or invalid
30	404	RESOURCE_NOT_FOUND	The resource at the requested path does not exist
When sending SMS, the delivery_callback_url attribute is passed in the request - this is the url to which message statuses should be sent.

Use it to send message statuses. Url to which message statuses should be sent - https://app.alteg.io/smsprovider/status/callback/{partner_token}

Authorizations:
bearer
header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token

Request Body schema: application/json
Array 
id	
string
Identifier

status	
number
Message status

payment_sum	
number
Full message cost

currency_iso	
string
Currency ISO

parts_amount	
number
Amount of message's parts

Responses
200 OK
400 Bad Request
401 Unauthorized
404 Not Found
Request samples
Payload
Content type
application/json

Copy
Expand allCollapse all
[
{
"id": "232674",
"status": 1,
"payment_sum": 0.045,
"currency_iso": "EUR",
"parts_amount": 2
}
]
Response samples
200400401404
Content type
application/json

Copy
{
"success": true
}
Rules for the processing of personal data
Obtaining information about the rules for processing personal data of the company

get
/privacy_policy/{company_id}
Authorizations:
bearer
path Parameters
company_id
required
number
Company ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token

Responses
200 OK
Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"agreement": {}
},
"meta": [ ]
}
Data Validation
Phone number format check

get
/validation/validate_phone/{phone}
The transferred phone number is checked for compliance with Altegio rules.

Authorizations:
(beareruser)
path Parameters
phone
required
string
Checked phone number

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
200 OK
Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"is_valid": true
},
"meta": [ ]
}
Fiscalization of checks
Example of a request for fiscalization of a document

post
/https://your-api.url
Authorizations:
bearer
header Parameters
Accept
required
string
application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token

Request Body schema: application/json
id	
string
Unique ID of the sales document

date	
string <date-time>
Date and time the document was sent for printing (in ISO-8601 format)

document_id	
integer <int32>
Internal document identifier in the Altegio system

type	
string
Enum: "sale" "return"
Document type (list of possible values)

print_receipt	
boolean
Whether to print a paper check at the checkout during fiscalization

customer	
object
Client entity

positions	
Array of objects
List of positions in the check

payments	
Array of objects
List of fees applied per check

tax	
string
Type of taxation system (slug from the list of taxation systems)

cashier	
object
The Essence of a Cashier

pos	
object
Options for the connected POS terminal

callback_url	
string
Link to update fiscal status

custom_text	
string
Arbitrary text for printing on a receipt

Responses
200 OK
Request samples
Payload
Content type
application/json

Copy
Expand allCollapse all
{
"id": "d72fece5-6825-4895-9395-0133195612a4",
"date": "2025-09-21T23:00:00.000+03:00",
"document_id": 239083104,
"type": "sale",
"print_receipt": true,
"customer": {
"email": "customer@example.com",
"phone": "+1-315-555-0175"
},
"positions": [
{}
],
"payments": [
{},
{},
{}
],
"tax": "ru_osn",
"cashier": {
"uid": "4895-9395-0133195612a4",
"name": "John Smith",
"position": "Cashier"
},
"pos": {
"enabled": true,
"slip_count": 2
},
"callback_url": "https://app.alteg.io/api/v1/integration/kkm/callback/",
"custom_text": "some custom text"
}
Response samples
200
Content type
application/json

Copy
{
"id": "d72fece5-6825-4895-9395-0133195612a4",
"status": "success",
"code": 0,
"message": "OK"
}
List request example

get
/integration/kkm/references/tax_system/{countryId}
A list of tax systems and VAT available for a country can be obtained by requesting the country ID for which the list is to be obtained. The country ID can be obtained from list of countries.

The list is an array of tax systems with a nested VAT array for each tax system.

The taxation system has the following structure:

Field	Type	Description
title	string	Name of taxation system
slug	string	Code name for the taxation system
vats	Array of objects(Vat[])	List of available VAT for the taxation system
VAT has the following structure:

Field	Type	Description
title	string	Title VAT
slug	string	Code name VAT
Authorizations:
bearer
path Parameters
countryId
required
number
Example: 1
Country ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
Array of objects
Array of objects with data

meta	
object
Metadata (contains the number of taxation systems found)

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": [
{},
{},
{},
{},
{},
{}
],
"meta": {
"count": 6
}
}
Example of a request in case of successful fiscalization or in case of an error

post
/integration/kkm/callback/
Authorizations:
bearer
header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Conetnt-Type
required
string
application/json

Authorization
required
string
Bearer partner_token

Request Body schema: application/json
object
Responses
200 OK
Request samples
Payload
Content type
application/json

Copy
{ }
Loyalty
Get a list of loyalty notification templates

get
/chain/{chain_id}/loyalty/notification_message_templates/programs
Authorizations:
(beareruser)
path Parameters
chain_id
required
integer
Chain ID

header Parameters
Accept
required
string
application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
200 OK
Response Schema: application/json
Array 
id	
integer <int32>
Template ID

type	
string
Enum: "big" "mid" "small" "custom"
Template option

body	
string
Template text

message_type	
string
Enum: "loyalty_discount_expiration" "loyalty_cashback_expiration" "loyalty_discount_increased" "loyalty_discount_decreased" "loyalty_card_created" "loyalty_card_withdraw" "loyalty_withdraw_cancelled" "loyalty_card_manual" "loyalty_card_manual_withdraw" "loyalty_card_cashback" "loyalty_card_cashback_cancelled" "loyalty_card_income" "loyalty_discount_changed" "loyalty_cashback_changed" "loyalty_settings_abonement_notification"
Message type

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
[
{
"id": 12,
"type": "small",
"message_type": "loyalty_discount_expiration",
"body": "Your discount expires tomorrow"
}
]
Create a Chain Promotion

post
/chain/{chain_id}/loyalty/programs/
Authorizations:
(beareruser)
path Parameters
chain_id
required
integer
Chain ID

query Parameters
include	
string
Enum: "applicable_items" "rules" "companies" "loyalty_card_types" "on_changed_notification_template" "on_expiration_notification_template"
Include additional resources in the answer

header Parameters
Accept
required
string
application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Request Body schema: application/json
title
required
string
Share name

type
required
string
Enum: "discount_static" "discount_accumulative_visits" "discount_accumulative_sold" "discount_accumulative_paid" "cashback_static_sold" "cashback_static_paid" "cashback_accumulative_paid" "cashback_accumulative_sold" "cashback_accumulative_paid_visits" "cashback_accumulative_sold_visits" "cashback_sold_visits" "cashback_paid_visits" "package_discount"
Promotion type

service_item_type
required
string
Enum: "any_allowed" "not_allowed" "custom_allowed"
Type of application to services

good_item_type
required
string
Enum: "any_allowed" "not_allowed" "custom_allowed"
Type of application to products

value_unit
required
string
Enum: "percent" "amount"
Bonus or discount measurement unit (percentage, fixed amount)

usage_limit	
integer <int32>
Limit on the number of applications (only for cashback)

visit_multiplicity	
integer <int32>
Multiplicity of application by visits (only for cashback)

sold_items_multiplicity	
integer <int32>
How many services you need to pay to get a discount on promotional services (only for the promotion type "Discount by condition")

expiration_timeout	
integer <int32>
Expiration date of bonuses or discounts

expiration_timeout_unit	
string
Enum: "day" "week" "month" "year"
The unit of measurement for the expiration date of bonuses or discounts

expiration_notification_timeout	
integer <int32>
How many days before the bonus or discount expires, a notification must be sent to the client

params_source_type	
string
Enum: "loyalty_card" "active_companies" "chain"
Where to get the client's history to calculate the size of the bonus or discount (for accumulation promotions or conditional discounts)

history_start_date	
string <date>
From what date to take into account the client's history to calculate the size of the bonus or discount (for accumulative promotions or conditional discounts)

loyalty_card_type_ids	
Array of integers <int32> [ items <int32 > ]
Identifiers of types of cards for which the promotion is valid

on_changed_notification_template	
object (Root Type for LoyaltyNotificationMessageTemplateRequest)
Body of the request to bind the loyalty notification template

on_expiration_notification_template	
object (Root Type for LoyaltyNotificationMessageTemplateRequest)
Body of the request to bind the loyalty notification template

rules
required
Array of objects (Root Type for LoyaltyProgramRuleRequest)
Rules for determining the value of the bonus or discount (only one rule is allowed for fixed promotions)

company_ids
required
Array of integers <int32> [ items <int32 > ]
Identifiers of locations where the promotion is valid

allowed_service_ids	
Array of integers <int32> [ items <int32 > ]
Service and service category identifiers (if application type is set for some services)

allowed_good_ids	
Array of integers <int32> [ items <int32 > ]
Item IDs (if application type is set for some items)

allowed_good_category_ids	
Array of integers <int32> [ items <int32 > ]
Product category identifiers (if application type is set for some products)

Responses
200 OK
Response Schema: application/json
id	
integer <int32>
Stock ID

title	
string
Share name

type	
string
Enum: "discount_static" "discount_accumulative_visits" "discount_accumulative_sold" "discount_accumulative_paid" "cashback_static_sold" "cashback_static_paid" "cashback_accumulative_paid" "cashback_accumulative_sold" "cashback_accumulative_paid_visits" "cashback_accumulative_sold_visits" "cashback_sold_visits" "cashback_paid_visits" "package_discount"
Promotion type

service_item_type	
string
Enum: "any_allowed" "not_allowed" "custom_allowed"
Type of application to services

good_item_type	
string
Enum: "any_allowed" "not_allowed" "custom_allowed"
Type of application to products

value_unit	
string
Enum: "percent" "amount"
Bonus or discount measurement unit (percentage, fixed amount)

usage_limit	
integer <int32>
Limit on the number of applications (only for cashback)

visit_multiplicity	
integer <int32>
Multiplicity of application by visits (only for cashback)

sold_items_multiplicity	
integer <int32>
How many services you need to pay to get a discount on promotional services (only for the type of promotion "Discount by condition")

expiration_timeout	
integer <int32>
Expiration date of bonuses or discounts

expiration_timeout_unit	
string
Enum: "day" "week" "month" "year"
The unit of measurement for the expiration date of bonuses or discounts

expiration_notification_timeout	
integer <int32>
How many days before the bonus or discount expires, a notification must be sent to the client

params_source_type	
string
Enum: "loyalty_card" "active_companies" "chain"
Where to get the client's history to calculate the size of the bonus or discount (for accumulation promotions or conditional discounts)

history_start_date	
string <date>
From what date to take into account the client's history to calculate the size of the bonus or discount (for accumulative promotions or conditional discounts)

on_changed_notification_template_id	
integer <int32>
Notification template ID when changing bonus or discount

on_expiration_notification_template_id	
integer <int32>
Identifier of the notification template when a bonus or discount burns

loyalty_card_types	
Array of objects (Root Type for LoyaltyCardType)
Type of cards for which the promotion is valid (on request)

on_changed_notification_template	
object (Root Type for LoyaltyNotificationMessageTemplate)
Loyalty notification template

on_expiration_notification_template	
object (Root Type for LoyaltyNotificationMessageTemplate)
Loyalty notification template

rules	
Array of objects (Root Type for LoyaltyProgramRule)
Rules for determining the value of the bonus or discount (only one rule is allowed for fixed promotions) (on request)

companies	
Array of objects (Company)
Locations where the promotion is valid (on request)

applicable_items	
Array of objects (Root Type for LoyaltyEntityAttendanceItem)
Related entities for selective application of the promotion (on request)

422 Validation error
Request samples
Payload
Content type
application/json

Copy
Expand allCollapse all
{
"title": "Cumulative discount for some services and not for goods",
"type": "discount_accumulative_paid",
"service_item_type": "custom_allowed",
"good_item_type": "not_allowed",
"allowed_service_ids": [
53,
92
],
"allowed_good_ids": { },
"allowed_good_category_ids": { },
"value_unit": "percent",
"usage_limit": 0,
"visit_multiplicity": 0,
"sold_items_multiplicity": 0,
"expiration_timeout": 6,
"expiration_timeout_unit": "month",
"expiration_notification_timeout": 7,
"params_source_type": "chain",
"history_start_date": "2025-09-21T23:00:00.000+03:00",
"loyalty_card_type_ids": [
51,
29
],
"on_changed_notification_template": {
"type": "custom",
"body": "Your discount has changed"
},
"on_expiration_notification_template": {
"type": "big"
},
"rules": [
{},
{}
],
"company_ids": [
49
]
}
Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"id": 34,
"title": "Cumulative discount for some services and not for goods",
"type": "discount_accumulative_paid",
"service_item_type": "custom_allowed",
"good_item_type": "not_allowed",
"value_unit": "percent",
"usage_limit": 0,
"visit_multiplicity": 0,
"sold_items_multiplicity": 0,
"expiration_timeout": 6,
"expiration_timeout_unit": "month",
"expiration_notification_timeout": 7,
"params_source_type": "chain",
"history_start_date": "2025-09-21T23:00:00.000+03:00",
"on_changed_notification_template_id": 55,
"on_expiration_notification_template_id": 84,
"loyalty_card_types": [
{},
{}
],
"on_changed_notification_template": {
"id": 55,
"type": "custom",
"body": "Your discount has changed",
"message_type": "loyalty_discount_changed"
},
"on_expiration_notification_template": {
"id": 84,
"type": "big",
"body": "Detailed text about discount burning",
"message_type": "loyalty_discount_expiration"
},
"rules": [
{},
{}
],
"companies": [
{}
],
"applicable_items": [
{},
{}
]
}
Get a Chain Promotion

get
/chain/{chain_id}/loyalty/programs/{loyalty_program_id}
Authorizations:
(beareruser)
path Parameters
chain_id
required
integer
Chain ID

loyalty_program_id
required
integer
Promotion ID

query Parameters
include	
string
Enum: "applicable_items" "rules" "companies" "loyalty_card_types" "on_changed_notification_template" "on_expiration_notification_template"
Include additional resources in the answer

header Parameters
Accept
required
string
application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
200 OK
Response Schema: application/json
id	
integer <int32>
Stock ID

title	
string
Share name

type	
string
Enum: "discount_static" "discount_accumulative_visits" "discount_accumulative_sold" "discount_accumulative_paid" "cashback_static_sold" "cashback_static_paid" "cashback_accumulative_paid" "cashback_accumulative_sold" "cashback_accumulative_paid_visits" "cashback_accumulative_sold_visits" "cashback_sold_visits" "cashback_paid_visits" "package_discount"
Promotion type

service_item_type	
string
Enum: "any_allowed" "not_allowed" "custom_allowed"
Type of application to services

good_item_type	
string
Enum: "any_allowed" "not_allowed" "custom_allowed"
Type of application to products

value_unit	
string
Enum: "percent" "amount"
Bonus or discount measurement unit (percentage, fixed amount)

usage_limit	
integer <int32>
Limit on the number of applications (only for cashback)

visit_multiplicity	
integer <int32>
Multiplicity of application by visits (only for cashback)

sold_items_multiplicity	
integer <int32>
How many services you need to pay to get a discount on promotional services (only for the type of promotion "Discount by condition")

expiration_timeout	
integer <int32>
Expiration date of bonuses or discounts

expiration_timeout_unit	
string
Enum: "day" "week" "month" "year"
The unit of measurement for the expiration date of bonuses or discounts

expiration_notification_timeout	
integer <int32>
How many days before the bonus or discount expires, a notification must be sent to the client

params_source_type	
string
Enum: "loyalty_card" "active_companies" "chain"
Where to get the client's history to calculate the size of the bonus or discount (for accumulation promotions or conditional discounts)

history_start_date	
string <date>
From what date to take into account the client's history to calculate the size of the bonus or discount (for accumulative promotions or conditional discounts)

on_changed_notification_template_id	
integer <int32>
Notification template ID when changing bonus or discount

on_expiration_notification_template_id	
integer <int32>
Identifier of the notification template when a bonus or discount burns

loyalty_card_types	
Array of objects (Root Type for LoyaltyCardType)
Type of cards for which the promotion is valid (on request)

on_changed_notification_template	
object (Root Type for LoyaltyNotificationMessageTemplate)
Loyalty notification template

on_expiration_notification_template	
object (Root Type for LoyaltyNotificationMessageTemplate)
Loyalty notification template

rules	
Array of objects (Root Type for LoyaltyProgramRule)
Rules for determining the value of the bonus or discount (only one rule is allowed for fixed promotions) (on request)

companies	
Array of objects (Company)
Locations where the promotion is valid (on request)

applicable_items	
Array of objects (Root Type for LoyaltyEntityAttendanceItem)
Related entities for selective application of the promotion (on request)

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"id": 34,
"title": "Cumulative discount for some services and not for goods",
"type": "discount_accumulative_paid",
"service_item_type": "custom_allowed",
"good_item_type": "not_allowed",
"value_unit": "percent",
"usage_limit": 0,
"visit_multiplicity": 0,
"sold_items_multiplicity": 0,
"expiration_timeout": 6,
"expiration_timeout_unit": "month",
"expiration_notification_timeout": 7,
"params_source_type": "chain",
"history_start_date": "2025-09-21T23:00:00.000+03:00",
"on_changed_notification_template_id": 55,
"on_expiration_notification_template_id": 84,
"loyalty_card_types": [
{},
{}
],
"on_changed_notification_template": {
"id": 55,
"type": "custom",
"body": "Your discount has changed",
"message_type": "loyalty_discount_changed"
},
"on_expiration_notification_template": {
"id": 84,
"type": "big",
"body": "Detailed text about discount burning",
"message_type": "loyalty_discount_expiration"
},
"rules": [
{},
{}
],
"companies": [
{}
],
"applicable_items": [
{},
{}
]
}
Edit Chain Promotion

put
/chain/{chain_id}/loyalty/programs/{loyalty_program_id}
Authorizations:
bearer
path Parameters
chain_id
required
integer
Chain ID

loyalty_program_id
required
integer
Promotion ID

query Parameters
include	
string
Enum: "applicable_items" "rules" "companies" "loyalty_card_types" "on_changed_notification_template" "on_expiration_notification_template"
Include additional resources in the answer

Request Body schema: application/json
title	
string
Share name

usage_limit	
integer <int32>
Limit on the number of applications (only for cashback)

expiration_timeout	
integer <int32>
Expiration date of bonuses or discounts

expiration_timeout_unit	
string
Enum: "day" "week" "month" "year"
The unit of measurement for the expiration date of bonuses or discounts

expiration_notification_timeout	
integer <int32>
How many days before the bonus or discount expires, a notification must be sent to the client

loyalty_card_type_ids	
Array of integers <int32> [ items <int32 > ]
Identifiers of types of cards for which the promotion is valid

on_changed_notification_template	
object (Root Type for LoyaltyNotificationMessageTemplateRequest)
Body of the request to bind the loyalty notification template

on_expiration_notification_template	
object (Root Type for LoyaltyNotificationMessageTemplateRequest)
Body of the request to bind the loyalty notification template

rules	
Array of objects (Root Type for LoyaltyProgramRuleRequest)
Rules for determining the value of the bonus or discount (only one rule is allowed for fixed promotions)

company_ids	
Array of integers <int32> [ items <int32 > ]
Identifiers of locations where the promotion is valid

allowed_service_ids	
Array of integers <int32> [ items <int32 > ]
Service and service category identifiers (if application type is set for some services)

allowed_good_ids	
Array of integers <int32> [ items <int32 > ]
Item IDs (if application type is set for some items)

allowed_good_category_ids	
Array of integers <int32> [ items <int32 > ]
Product category identifiers (if application type is set for some products)

Responses
200 OK
Response Schema: application/json
id	
integer <int32>
Stock ID

title	
string
Share name

type	
string
Enum: "discount_static" "discount_accumulative_visits" "discount_accumulative_sold" "discount_accumulative_paid" "cashback_static_sold" "cashback_static_paid" "cashback_accumulative_paid" "cashback_accumulative_sold" "cashback_accumulative_paid_visits" "cashback_accumulative_sold_visits" "cashback_sold_visits" "cashback_paid_visits" "package_discount"
Promotion type

service_item_type	
string
Enum: "any_allowed" "not_allowed" "custom_allowed"
Type of application to services

good_item_type	
string
Enum: "any_allowed" "not_allowed" "custom_allowed"
Type of application to products

value_unit	
string
Enum: "percent" "amount"
Bonus or discount measurement unit (percentage, fixed amount)

usage_limit	
integer <int32>
Limit on the number of applications (only for cashback)

visit_multiplicity	
integer <int32>
Multiplicity of application by visits (only for cashback)

sold_items_multiplicity	
integer <int32>
How many services you need to pay to get a discount on promotional services (only for the type of promotion "Discount by condition")

expiration_timeout	
integer <int32>
Expiration date of bonuses or discounts

expiration_timeout_unit	
string
Enum: "day" "week" "month" "year"
The unit of measurement for the expiration date of bonuses or discounts

expiration_notification_timeout	
integer <int32>
How many days before the bonus or discount expires, a notification must be sent to the client

params_source_type	
string
Enum: "loyalty_card" "active_companies" "chain"
Where to get the client's history to calculate the size of the bonus or discount (for accumulation promotions or conditional discounts)

history_start_date	
string <date>
From what date to take into account the client's history to calculate the size of the bonus or discount (for accumulative promotions or conditional discounts)

on_changed_notification_template_id	
integer <int32>
Notification template ID when changing bonus or discount

on_expiration_notification_template_id	
integer <int32>
Identifier of the notification template when a bonus or discount burns

loyalty_card_types	
Array of objects (Root Type for LoyaltyCardType)
Type of cards for which the promotion is valid (on request)

on_changed_notification_template	
object (Root Type for LoyaltyNotificationMessageTemplate)
Loyalty notification template

on_expiration_notification_template	
object (Root Type for LoyaltyNotificationMessageTemplate)
Loyalty notification template

rules	
Array of objects (Root Type for LoyaltyProgramRule)
Rules for determining the value of the bonus or discount (only one rule is allowed for fixed promotions) (on request)

companies	
Array of objects (Company)
Locations where the promotion is valid (on request)

applicable_items	
Array of objects (Root Type for LoyaltyEntityAttendanceItem)
Related entities for selective application of the promotion (on request)

422 Validation error
Request samples
Payload
Content type
application/json

Copy
Expand allCollapse all
{
"title": "Cumulative discount for some services and not for goods",
"allowed_service_ids": [
53,
92
],
"allowed_good_ids": { },
"allowed_good_category_ids": { },
"usage_limit": 0,
"expiration_timeout": 6,
"expiration_timeout_unit": "month",
"expiration_notification_timeout": 7,
"loyalty_card_type_ids": [
51,
29
],
"on_changed_notification_template": {
"type": "custom",
"body": "Your discount has changed"
},
"on_expiration_notification_template": {
"type": "big"
},
"rules": [
{},
{}
],
"company_ids": [
49
]
}
Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"id": 34,
"title": "Cumulative discount for some services and not for goods",
"type": "discount_accumulative_paid",
"service_item_type": "custom_allowed",
"good_item_type": "not_allowed",
"value_unit": "percent",
"usage_limit": 0,
"visit_multiplicity": 0,
"sold_items_multiplicity": 0,
"expiration_timeout": 6,
"expiration_timeout_unit": "month",
"expiration_notification_timeout": 7,
"params_source_type": "chain",
"history_start_date": "2025-09-21T23:00:00.000+03:00",
"on_changed_notification_template_id": 55,
"on_expiration_notification_template_id": 84,
"loyalty_card_types": [
{},
{}
],
"on_changed_notification_template": {
"id": 55,
"type": "custom",
"body": "Your discount has changed",
"message_type": "loyalty_discount_changed"
},
"on_expiration_notification_template": {
"id": 84,
"type": "big",
"body": "Detailed text about discount burning",
"message_type": "loyalty_discount_expiration"
},
"rules": [
{},
{}
],
"companies": [
{}
],
"applicable_items": [
{},
{}
]
}
Delete Chain Promotion

delete
/chain/{chain_id}/loyalty/programs/{loyalty_program_id}
Authorizations:
bearer
path Parameters
chain_id
required
integer
Chain ID

loyalty_program_id
required
integer
Promotion ID

query Parameters
include	
string
Enum: "applicable_items" "rules" "companies" "loyalty_card_types" "on_changed_notification_template" "on_expiration_notification_template"
Include additional resources in the answer

Responses
204 No content
Get a List of Chain Loyalty Transactions

get
/chain/{chain_id}/loyalty/transactions
Authorizations:
(beareruser)
path Parameters
chain_id
required
integer
Chain ID

query Parameters
created_after
required
string <date>
Sample start date in Y-m-d format

created_before
required
string <date>
Sample end date in Y-m-d format

types	
Array of strings
Items Enum: "1" "2" "3" "4" "5" "6" "7" "8" "9" "10" "11"
Types of loyalty transactions included in the selection: 1 - Promotion discount, 2 - Loyalty program accrual, 3 - Loyalty card withdrawal, 4 - Referral program accrual, 5 - Manual replenishment, 6 - Manual withdrawal, 7 - Overdue points withdrawal , 8 - Withdrawal from the gift card, 9 - Use of the membership, 10 - Recalculation of the cost of the membership, 11 - Withdrawal from the personal account

company_ids	
Array of integers
Loyalty transaction affiliate IDs included in the sample

visit_ids	
Array of integers
Loyalty transaction visit IDs included in the sample

page	
integer
Selection page

count	
integer
Number of results per selection page

header Parameters
Accept
required
string
application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
Array of objects
Array of objects with data

meta	
object
Metadata (contains the number of items in the response)

422 Validation error
Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": [
{}
],
"meta": {
"count": 0
}
}
Gift Card/Membership Code Generation

get
/loyalty/generate_code/{company_id}/{good_Id}
Options
salonId (required, number, 1) - location ID
goodId (required, number, 1) - product ID (gift card/ membership)
Authorizations:
(beareruser)
path Parameters
company_id
required
number
Location ID

good_Id
required
number
Product ID (membership/gift card)

header Parameters
Accept
required
string
application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
200 OK
Response Schema: application/json
LoyaltyGenerateCode200Option	
object (LoyaltyGenerateCode200Option)
data
required
object (LoyaltyGenerateCode200DataOption)
meta
required
Array of objects
success
required
boolean
403 Forbidden
Response Schema: application/json
LoyaltyGenerateCodeErrorOption	
object (LoyaltyGenerateCodeErrorOption)
meta
required
object (LoyaltyGenerateCodeErrorMetaOption)
success
required
boolean
404 Not Found
Response Schema: application/json
LoyaltyGenerateCodeErrorOption	
object (LoyaltyGenerateCodeErrorOption)
meta
required
object (LoyaltyGenerateCodeErrorMetaOption)
success
required
boolean
Response samples
200403404
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"code": "1"
},
"meta": [ ]
}
Get a List of Available Membership Types

get
/company/{company_id}/loyalty/abonement_types/search
A list of membership types available at a location can be obtained by requesting the location ID. The list can be filtered by membership type name by passing the title parameter. Pagination is supported, specified by the page and page_size parameters.

The list is an array of membership types.

Membership type has the following structure:

Field	Type	Description
id	number	Membership type identifier
title	string	Membership type name
allow_freeze	boolean	Is it possible to freeze memberships? true - allowed, false - not allowed
freeze limit	number	Maximum total freezing period (days)
salon_group_id	number	Identifier of the chain in which the membership type is valid
period	number	Membership expiration date (0 if not set)
period_unit_id	number	Membership expiration unit (list of possible values, if not set - 0)
is_allow_empty_code	boolean	Allow the sale of a membership without a code? true - allow, false - do not allow
is_united_balance	boolean	Total or separate membership balance: true - total, false - separate
united_balance_services_count	number	Number of visits for total balance
Measurement units of subscription type validity period

Meaning	Description
1	Day
2	Week
3	Month
4	Year
Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

query Parameters
title	
string
Membeship type name

page	
number
Page number

page_size	
number
The number of output lines per page. Maximum 100

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Conetnt-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
Array of objects
Array with data objects

meta	
object
Metadata (contains the number of subscription types found)

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": [
{},
{}
],
"meta": {
"count": 2
}
}
Get a List of Membership Types by ID

get
/company/{company_id}/loyalty/abonement_types/fetch
A list of membership types available at a location can be obtained by querying the location ID and membership type IDs.

The list is an array of membership types.

Get a list of subscription types by ID
Parameters
company_id (required, number) - company ID
id: 1 (optional, number) - membership type ID (you can specify several additional parameters &ids[]={id}
Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

query Parameters
ids[]	
number
Membership type ID (you can specify several additional parameters &ids[]={id}

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
Array of objects
Array with data objects

meta	
object
Metadata (contains the number of subscription types found)

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": [
{}
],
"meta": {
"count": 1
}
}
Get a List of Available Gift Card Types

get
/company/{company_id}/loyalty/certificate_types/search
A list of gift card types available at a location can be obtained by querying the location ID. The list can be filtered by the name of the gift card type by passing the title parameter. Pagination is supported, specified by the page and page_size parameters.

The list is an array of gift card types.

Gift card type has the following structure:

Field	Type	Description
id	number	Gift card type identifier
title	string	Gift card type name
balance	number	Gift card denomination
is_multi	boolean	Write-off type: true - multiple write-off, false - single write-off
company_group_id	number	ID of the chain where the gift card type is valid
item_type_id	number	Application Constraint (list of possible values)
expiration_type_id	number	Expiration limit (list of possible values)
expiration_date	string	Fixed burn date in ISO8601 format (null if not set)
expiration_timeout	number	Gift card validity period from the date of sale (0 if not set)
expiration_timeout_unit_id	number	The unit of measurement of the validity period of the gift card from the moment of sale (list of possible values, if not set - 0)
is_allow_empty_code	boolean	Allow sale of gift card without code? true - allow, false - do not allow
Gift Card Type Restriction

Meaning	Description
0	Unlimited
1	Any services without products
2	Any products without services
3	Some services without products
4	Some services and any products
Gift Card Type Expiration Limit

Meaning	Description
0	No expiration date
1	Fixed date for all instances
2	Fixed period of validity from the date of sale
Units of certificate type validity period

Meaning	Description
1	Day
2	Week
3	Month
4	Year
Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

query Parameters
title	
string
Gift card type name

page	
number
Page number

page_size	
number
The number of output lines per page. Maximum 100

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
integer
Bearer partner_token, User user_token

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
Array of objects
Array of objects with data

meta	
object
Metadata (contains the number of certificate types found)

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": [
{},
{}
],
"meta": {
"count": 2
}
}
Get a List of Gift Card Types by ID

get
/company/{company_id}/loyalty/certificate_types/fetch
A list of gift card types available at the location can be obtained by querying the location ID and gift card type IDs.

The list is an array of gift card types.

Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

header Parameters
Accept
required
string
Example: application/vnd.api.v2+json
e.g. application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer partner_token, User user_token

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status (true)

data	
Array of objects
Array of objects with data

meta	
object
Metadata (contains the number of certificate types found)

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": [
{}
],
"meta": {
"count": 1
}
}
Get a List of Promotions Active in the Location

get
/company/{company_id}/loyalty/programs/search
The method allows you to get a list of promotions that are active for the specified location.

Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

query Parameters
include	
string
The first_transaction_date value adds the date of the first stock transaction to the response.

type	
string
Enum: "discount_static" "discount_accumulative_visits" "discount_accumulative_sold" "discount_accumulative_paid" "cashback_static_sold" "cashback_static_paid" "cashback_accumulative_paid" "cashback_accumulative_sold" "cashback_accumulative_paid_visits" "cashback_accumulative_sold_visits" "cashback_sold_visits" "cashback_paid_visits" "package_discount"
Promotion type

header Parameters
Accept
required
string
application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer bearer_token, User user_token

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status.

data	
Array of objects
An array of data objects.

meta	
object
Metadata (contains the number of objects found)

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": [
{}
],
"meta": {
"count": 1
}
}
Get customer statistics

get
/company/{company_id}/analytics/loyalty_programs/visits
The method allows you to get statistics on returning, new and lost customers

Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

query Parameters
date_to
required
string
Period end date

date_from
required
string
Period start date

loyalty_program_id
required
string
Promotion ID

header Parameters
Accept
required
string
application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer bearer_token, User user_token

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status

data	
object
Object with data

meta	
Array of objects
Metadata (empty array)

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"client_stats": {},
"visits_stats_by_day": []
},
"meta": [ ]
}
Get revenue statistics

get
/company/{company_id}/analytics/loyalty_programs/income/
The method allows you to get statistics on revenue.

Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

query Parameters
date_to
required
string
Period end date

date_from
required
string
Period start date

loyalty_program_id
required
string
Promotion ID

header Parameters
Accept
required
string
application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer bearer_token, User user_token

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status

data	
object
Object with data

meta	
Array of objects
Metadata (empty array)

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": {
"income_stats": {},
"currency": {},
"income_stats_by_day": []
},
"meta": [ ]
}
Get employee return

get
/company/{company_id}/analytics/loyalty_programs/staff/
The method allows you to get the return statistics for an employee

Authorizations:
(beareruser)
path Parameters
company_id
required
number
Company ID

query Parameters
date_to
required
string
Period end date

date_from
required
string
Period start date

loyalty_program_id
required
string
Promotion ID

header Parameters
Accept
required
string
application/vnd.api.v2+json

Content-Type
required
string
application/json

Authorization
required
string
Bearer bearer_token, User user_token

Responses
200 OK
Response Schema: application/json
success	
boolean
Execution success status

data	
Array of objects
Array with data objects

meta	
object
Metadata (contains the number of objects found)

Response samples
200
Content type
application/json

Copy
Expand allCollapse all
{
"success": true,
"data": [
{}
],
"meta": {
"count": 1
}
}
User records
Get User Appointments

get
/user/records/{record_id}/{record_hash}
The JSON Object containing the user appointment parameters has the following fields:

Field	Type	Mandatory	Description
id	number	YES	Appointment ID
services	array of numbers	YES	List of ID service appointments
company	object	YES	Company parameters
staff	object	YES	Parameters of the specialist who was booked
clients_count	int	YES	Number of clients
date	string	YES	Session date
datetime	string	YES	Session date in ISO
create_date	string	YES	Appointment creation date
length	number	YES	Session duration
deleted	boolean	YES	Has the appointment been created ? (true if deleted)
notify_by_sms	number	NO	Number of hours in advance to send an SMS reminder for the appointment. Set to 0 to disable SMS reminders
notify_by_email	number	NO	Number of hours in advance to send an email reminder for the appointment. Set to 0 to disable email reminders
comment	string	YES	Appointment Comment
master_requested	boolean	YES	Whether a specific specialist was specified when booking (false if "any specialist" was specified)
online	boolean	YES	Indicates whether the appointment was created online by the client (true) or manually by an administrator (false)
visit_attendance	number	YES	2 - The user confirmed the appointment, 1 - The user came, the services were provided, 0 - the user was waiting, -1 - the user did not come to visit
api_id	string	NO	External Appointment ID
last_change_date	string	NO	Date of the last edit of the appointment
prepaid	boolean	NO	Is online payment available for booking
prepaid_confirmed	boolean	NO	Online payment status
last_change_date	string	NO	Date of the last edit of the appointment
activity_id	int	NO	ID bringing group event
Each object in the services array has the following fields:

Field	Type	Description
id	number	Service ID
title	string	Service name
cost	float	Service cost
price_min	float	Minimum price of the service
price_max	float	Maximum service price
discount	float	Discount
amount	int	Number of ordered services
session_length	int	Service duration in seconds (only if filter by employee is set)
The company object has the following fields:

Field	Type	Description
id	number	Company ID
title	string	Company name
country_id	number	Identifier of the country in which the company is located
country	string	Company name
city_id	number	Identifier of the city where the company is located)
city	string	Company city name
time zone	string	timezone companies
address	string	Address where the company is located
phone	string	Company's main phone number
phones	array of strings	All phone numbers of the company
coordinate_lat	float	Latitude where the company is located
coordinate lng	float	Longitude
allow_delete_record	boolean	Is it possible to delete an appointment
allow_change_record	boolean	Is it possible to reschedule the appointment
site	string	Company website
currency_short_title	string	Currency symbol
allow_change_record_delay_step	int	Time after which you can reschedule the appointment
allow_delete_record_delay_step	int	Time after which you can delete an appointment
The staff object has the following fields:

Field	Type	Description
id	number	Employee ID
name	string	Employee name
specialization	string	Employee specialization
position	object	Employee position
show_rating	number	Whether to show employee's rating (1 - show, 0 - don't show)
rating	number	Employee rating
votes_count	number	Number of votes rated employee
comments_count	number	Number of comments to an employee
avatar	string	Path to employee avatar file
Authorizations:
(beareruser)